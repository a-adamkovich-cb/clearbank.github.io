(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+QRC":function(e,t,n){"use strict";n("pIFo");var i=n("E9nw"),r={"text/plain":"Text","text/html":"Url",default:"Text"};e.exports=function(e,t){var n,o,a,s,c,d,p=!1;t||(t={}),n=t.debug||!1;try{if(a=i(),s=document.createRange(),c=document.getSelection(),(d=document.createElement("span")).textContent=e,d.style.all="unset",d.style.position="fixed",d.style.top=0,d.style.clip="rect(0, 0, 0, 0)",d.style.whiteSpace="pre",d.style.webkitUserSelect="text",d.style.MozUserSelect="text",d.style.msUserSelect="text",d.style.userSelect="text",d.addEventListener("copy",(function(i){if(i.stopPropagation(),t.format)if(i.preventDefault(),void 0===i.clipboardData){n&&console.warn("unable to use e.clipboardData"),n&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var o=r[t.format]||r.default;window.clipboardData.setData(o,e)}else i.clipboardData.clearData(),i.clipboardData.setData(t.format,e);t.onCopy&&(i.preventDefault(),t.onCopy(i.clipboardData))})),document.body.appendChild(d),s.selectNodeContents(d),c.addRange(s),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");p=!0}catch(u){n&&console.error("unable to copy using execCommand: ",u),n&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(t.format||"text",e),t.onCopy&&t.onCopy(window.clipboardData),p=!0}catch(u){n&&console.error("unable to copy using clipboardData: ",u),n&&console.error("falling back to prompt"),o=function(e){var t=(/mac os x/i.test(navigator.userAgent)?"⌘":"Ctrl")+"+C";return e.replace(/#{\s*key\s*}/g,t)}("message"in t?t.message:"Copy to clipboard: #{key}, Enter"),window.prompt(o,e)}}finally{c&&("function"==typeof c.removeRange?c.removeRange(s):c.removeAllRanges()),d&&document.body.removeChild(d),a()}return p}},"+ZDr":function(e,t,n){"use strict";n("pIFo");var i=n("5NKs");t.__esModule=!0,t.withPrefix=h,t.withAssetPrefix=function(e){return[""].concat([e.replace(/^\//,"")]).join("/")},t.navigateTo=t.replace=t.push=t.navigate=t.default=void 0;var r=i(n("uDP2")),o=i(n("j8BX")),a=i(n("v06X")),s=i(n("XEEL")),c=i(n("0jh0")),d=i(n("17x9")),p=i(n("q1tI")),u=n("YwZP"),l=n("cu4x");function h(e){return function(e){return e.replace(/\/+/g,"/")}(["",e].join("/"))}t.parsePath=l.parsePath;var m={activeClassName:d.default.string,activeStyle:d.default.object,partiallyActive:d.default.bool},f=function(e){function t(t){var n;n=e.call(this,t)||this,(0,c.default)((0,a.default)(n),"defaultGetProps",(function(e){var t=e.isPartiallyCurrent,i=e.isCurrent;return(n.props.partiallyActive?t:i)?{className:[n.props.className,n.props.activeClassName].filter(Boolean).join(" "),style:(0,o.default)({},n.props.style,{},n.props.activeStyle)}:null}));var i=!1;return"undefined"!=typeof window&&window.IntersectionObserver&&(i=!0),n.state={IOSupported:i},n.handleRef=n.handleRef.bind((0,a.default)(n)),n}(0,s.default)(t,e);var n=t.prototype;return n.componentDidUpdate=function(e,t){this.props.to===e.to||this.state.IOSupported||___loader.enqueue((0,l.parsePath)(this.props.to).pathname)},n.componentDidMount=function(){this.state.IOSupported||___loader.enqueue((0,l.parsePath)(this.props.to).pathname)},n.componentWillUnmount=function(){if(this.io){var e=this.io,t=e.instance,n=e.el;t.unobserve(n),t.disconnect()}},n.handleRef=function(e){var t,n,i,r=this;this.props.innerRef&&this.props.innerRef.hasOwnProperty("current")?this.props.innerRef.current=e:this.props.innerRef&&this.props.innerRef(e),this.state.IOSupported&&e&&(this.io=(t=e,n=function(){___loader.enqueue((0,l.parsePath)(r.props.to).pathname)},(i=new window.IntersectionObserver((function(e){e.forEach((function(e){t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(i.unobserve(t),i.disconnect(),n())}))}))).observe(t),{instance:i,el:t}))},n.render=function(){var e=this,t=this.props,n=t.to,i=t.getProps,a=void 0===i?this.defaultGetProps:i,s=t.onClick,c=t.onMouseEnter,d=(t.activeClassName,t.activeStyle,t.innerRef,t.partiallyActive,t.state),m=t.replace,f=(0,r.default)(t,["to","getProps","onClick","onMouseEnter","activeClassName","activeStyle","innerRef","partiallyActive","state","replace"]);var y=h(n);return p.default.createElement(u.Link,(0,o.default)({to:y,state:d,getProps:a,innerRef:this.handleRef,onMouseEnter:function(e){c&&c(e),___loader.hovering((0,l.parsePath)(n).pathname)},onClick:function(t){return s&&s(t),0!==t.button||e.props.target||t.defaultPrevented||t.metaKey||t.altKey||t.ctrlKey||t.shiftKey||(t.preventDefault(),b(n,{state:d,replace:m})),!0}},f))},t}(p.default.Component);f.propTypes=(0,o.default)({},m,{onClick:d.default.func,to:d.default.string.isRequired,replace:d.default.bool,state:d.default.object});var y=function(e,t,n){return console.warn('The "'+e+'" method is now deprecated and will be removed in Gatsby v'+n+'. Please use "'+t+'" instead.')},g=p.default.forwardRef((function(e,t){return p.default.createElement(f,(0,o.default)({innerRef:t},e))}));t.default=g;var b=function(e,t){window.___navigate(h(e),t)};t.navigate=b;var A=function(e){y("push","navigate",3),window.___push(h(e))};t.push=A;t.replace=function(e){y("replace","navigate",3),window.___replace(h(e))};t.navigateTo=function(e){return y("navigateTo","navigate",3),A(e)}},"+i7v":function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=function(e,t){var n=(0,r.default)(e);if(void 0===t)return n?"pageXOffset"in n?n.pageXOffset:n.document.documentElement.scrollLeft:e.scrollLeft;n?n.scrollTo(t,"pageYOffset"in n?n.pageYOffset:n.document.documentElement.scrollTop):e.scrollLeft=t};var r=i(n("8Y+z"));e.exports=t.default},"+lvF":function(e,t,n){e.exports=n("VTer")("native-function-to-string",Function.toString)},"+rLv":function(e,t,n){var i=n("dyZX").document;e.exports=i&&i.documentElement},"/8Fb":function(e,t,n){var i=n("XKFU"),r=n("UExd")(!0);i(i.S,"Object",{entries:function(e){return r(e)}})},"/SS/":function(e,t,n){var i=n("XKFU");i(i.S,"Object",{setPrototypeOf:n("i5dc").set})},"/e88":function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},"0/R4":function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"0jh0":function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},"0l/t":function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(2);i(i.P+i.F*!n("LyE8")([].filter,!0),"Array",{filter:function(e){return r(this,e,arguments[1])}})},"0sh+":function(e,t,n){var i=n("quPj"),r=n("vhPU");e.exports=function(e,t,n){if(i(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(r(e))}},"1MBn":function(e,t,n){var i=n("DVgA"),r=n("JiEa"),o=n("UqcF");e.exports=function(e){var t=i(e),n=r.f;if(n)for(var a,s=n(e),c=o.f,d=0;s.length>d;)c.call(e,a=s[d++])&&t.push(a);return t}},"1TsA":function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},"1fHE":function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var i=function(){function e(){}var t=e.prototype;return t.read=function(e,t){var n=this.getStateKey(e,t);try{var i=window.sessionStorage.getItem(n);return JSON.parse(i)}catch(r){return window&&window.___GATSBY_REACT_ROUTER_SCROLL&&window.___GATSBY_REACT_ROUTER_SCROLL[n]?window.___GATSBY_REACT_ROUTER_SCROLL[n]:{}}},t.save=function(e,t,n){var i=this.getStateKey(e,t),r=JSON.stringify(n);try{window.sessionStorage.setItem(i,r)}catch(o){window&&window.___GATSBY_REACT_ROUTER_SCROLL||(window.___GATSBY_REACT_ROUTER_SCROLL={}),window.___GATSBY_REACT_ROUTER_SCROLL[i]=JSON.parse(r)}},t.getStateKey=function(e,t){var n="@@scroll|"+(e.key||e.pathname);return null==t?n:n+"|"+t},e}();t.default=i},"2OiF":function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},"2Spj":function(e,t,n){var i=n("XKFU");i(i.P,"Function",{bind:n("8MEG")})},"2mql":function(e,t,n){"use strict";n("ioFf"),n("HAE/");var i=n("TOwV"),r={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function c(e){return i.isMemo(e)?a:s[e.$$typeof]||r}s[i.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[i.Memo]=a;var d=Object.defineProperty,p=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,l=Object.getOwnPropertyDescriptor,h=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,i){if("string"!=typeof n){if(m){var r=h(n);r&&r!==m&&e(t,r,i)}var a=p(n);u&&(a=a.concat(u(n)));for(var s=c(t),f=c(n),y=0;y<a.length;++y){var g=a[y];if(!(o[g]||i&&i[g]||f&&f[g]||s&&s[g])){var b=l(n,g);try{d(t,g,b)}catch(A){}}}}return t}},"35Dr":function(e,t,n){n("hLT2"),n("FLlr"),n("9VmF"),n("DNiP"),n("91GP"),n("rE2o"),n("8+KV"),n("0l/t"),n("ioFf"),n("rGqo"),n("yt8O"),n("RW0V"),n("HAE/"),n("KKXr"),n("bWfx"),n("pIFo"),n("SRfc"),n("LK8F"),n("2Spj"),n("a1Th"),n("h7Nl"),n("Btvt"),e.exports=function e(t,n,i){function r(a,s){if(!n[a]){if(!t[a]){if(o)return o(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var d=n[a]={exports:{}};t[a][0].call(d.exports,(function(e){return r(t[a][1][e]||e)}),d,d.exports,e,t,n,i)}return n[a].exports}for(var o=!1,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(e,t,n){var i=Object.prototype.hasOwnProperty,r=Object.prototype.toString;t.exports=function(e,t,n){if("[object Function]"!==r.call(t))throw new TypeError("iterator must be a function");var o=e.length;if(o===+o)for(var a=0;a<o;a++)t.call(n,e[a],a,e);else for(var s in e)i.call(e,s)&&t.call(n,e[s],s,e)}},{}],2:[function(e,t,n){"use strict";var i=e("foreach");function r(e,t,n){if(3===arguments.length)return r.set(e,t,n);if(2===arguments.length)return r.get(e,t);var i=r.bind(r,e);for(var o in r)r.hasOwnProperty(o)&&(i[o]=r[o].bind(i,e));return i}t.exports=r,r.get=function(e,t){for(var n=Array.isArray(t)?t:r.parse(t),i=0;i<n.length;++i){var o=n[i];if("object"!=typeof e||!(o in e))throw new Error("Invalid reference token: "+o);e=e[o]}return e},r.set=function(e,t,n){for(var i=Array.isArray(t)?t:r.parse(t),o=i[0],a=0;a<i.length-1;++a){var s=i[a];"-"===s&&Array.isArray(e)&&(s=e.length),o=i[a+1],s in e||(o.match(/^(\d+|-)$/)?e[s]=[]:e[s]={}),e=e[s]}return"-"===o&&Array.isArray(e)&&(o=e.length),e[o]=n,this},r.remove=function(e,t){var n=Array.isArray(t)?t:r.parse(t),i=n[n.length-1];if(void 0===i)throw new Error('Invalid JSON pointer for remove: "'+t+'"');var o=r.get(e,n.slice(0,-1));if(Array.isArray(o)){var a=+i;if(""===i&&isNaN(a))throw new Error('Invalid array index: "'+i+'"');Array.prototype.splice.call(o,a,1)}else delete o[i]},r.dict=function(e,t){var n={};return r.walk(e,(function(e,t){n[t]=e}),t),n},r.walk=function(e,t,n){var o=[];n=n||function(e){var t=Object.prototype.toString.call(e);return"[object Object]"===t||"[object Array]"===t},function e(a){i(a,(function(i,a){o.push(String(a)),n(i)?e(i):t(i,r.compile(o)),o.pop()}))}(e)},r.has=function(e,t){try{r.get(e,t)}catch(n){return!1}return!0},r.escape=function(e){return e.toString().replace(/~/g,"~0").replace(/\//g,"~1")},r.unescape=function(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")},r.parse=function(e){if(""===e)return[];if("/"!==e.charAt(0))throw new Error("Invalid JSON pointer: "+e);return e.substring(1).split(/\//).map(r.unescape)},r.compile=function(e){return 0===e.length?"":"/"+e.map(r.escape).join("/")}},{foreach:1}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.allOfSample=function(e,t,n,a){var s=(0,i.traverse)(e,n,a),c=[],d=!0,p=!1,u=void 0;try{for(var l,h=t[Symbol.iterator]();!(d=(l=h.next()).done);d=!0){var m=l.value,f=(0,i.traverse)(o({type:y},m),n,a),y=f.type,g=f.readOnly,b=f.writeOnly,A=f.value;if(s.type&&y&&y!==s.type)throw new Error("allOf: schemas with different types can't be merged");s.type=s.type||y,s.readOnly=s.readOnly||g,s.writeOnly=s.writeOnly||b,null!=A&&c.push(A)}}catch(C){p=!0,u=C}finally{try{d||null==h.return||h.return()}finally{if(p)throw u}}if("object"===s.type)return s.value=r.mergeDeep.apply(void 0,[s.value||{}].concat(c)),s;"array"===s.type&&(n.quiet||console.warn('OpenAPI Sampler: found allOf with "array" type. Result may be incorrect'));var D=c[c.length-1];return s.value=null!=D?D:s.value,s};var i=e("./traverse"),r=e("./utils");function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){a(e,t,n[t])}))}return e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},{"./traverse":12,"./utils":13}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.inferType=function(e){if(void 0!==e.type)return e.type;for(var t=Object.keys(i),n=0;n<t.length;n++){var r=t[n],o=i[r];if(void 0!==e[r])return o}return null};var i={multipleOf:"number",maximum:"number",exclusiveMaximum:"number",minimum:"number",exclusiveMinimum:"number",maxLength:"string",minLength:"string",pattern:"string",items:"array",maxItems:"array",minItems:"array",uniqueItems:"array",additionalItems:"array",maxProperties:"object",minProperties:"object",required:"object",additionalProperties:"object",properties:"object",patternProperties:"object",dependencies:"object"}},{}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sample=function(e,t,n){var r=Object.assign({},s,t);return(0,i.clearCache)(),(0,i.traverse)(e,r,n).value},n._registerSampler=c,Object.defineProperty(n,"inferType",{enumerable:!0,get:function(){return o.inferType}}),n._samplers=void 0;var i=e("./traverse"),r=e("./samplers/index"),o=e("./infer"),a={};n._samplers=a;var s={skipReadOnly:!1};function c(e,t){a[e]=t}c("array",r.sampleArray),c("boolean",r.sampleBoolean),c("integer",r.sampleNumber),c("number",r.sampleNumber),c("object",r.sampleObject),c("string",r.sampleString)},{"./infer":4,"./samplers/index":8,"./traverse":12}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sampleArray=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0,r=e.minItems||1;Array.isArray(e.items)&&(r=Math.max(r,e.items.length));var o=function(t){return Array.isArray(e.items)?e.items[t]||{}:e.items||{}},a=[];if(!e.items)return a;for(var s=0;s<r;s++){var c=o(s),d=(0,i.traverse)(c,t,n),p=d.value;a.push(p)}return a};var i=e("../traverse")},{"../traverse":12}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sampleBoolean=function(e){return!0}},{}],8:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"sampleArray",{enumerable:!0,get:function(){return i.sampleArray}}),Object.defineProperty(n,"sampleBoolean",{enumerable:!0,get:function(){return r.sampleBoolean}}),Object.defineProperty(n,"sampleNumber",{enumerable:!0,get:function(){return o.sampleNumber}}),Object.defineProperty(n,"sampleObject",{enumerable:!0,get:function(){return a.sampleObject}}),Object.defineProperty(n,"sampleString",{enumerable:!0,get:function(){return s.sampleString}});var i=e("./array"),r=e("./boolean"),o=e("./number"),a=e("./object"),s=e("./string")},{"./array":6,"./boolean":7,"./number":9,"./object":10,"./string":11}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sampleNumber=function(e){var t;return e.maximum&&e.minimum?(t=e.exclusiveMinimum?Math.floor(e.minimum)+1:e.minimum,(e.exclusiveMaximum&&t>=e.maximum||!e.exclusiveMaximum&&t>e.maximum)&&(t=(e.maximum+e.minimum)/2),t):e.minimum?e.exclusiveMinimum?Math.floor(e.minimum)+1:e.minimum:e.maximum?e.exclusiveMaximum?e.maximum>0?0:Math.floor(e.maximum)-1:e.maximum>0?0:e.maximum:0}},{}],10:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sampleObject=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0,o={};if(e&&"object"===r(e.properties)){var a=Array.isArray(e.required)?e.required:[],s=a.reduce((function(e,t){return e[t]=!0,e}),{});Object.keys(e.properties).forEach((function(r){if(!t.skipNonRequired||s.hasOwnProperty(r)){var a=(0,i.traverse)(e.properties[r],t,n);t.skipReadOnly&&a.readOnly||t.skipWriteOnly&&a.writeOnly||(o[r]=a.value)}}))}return e&&"object"===r(e.additionalProperties)&&(o.property1=(0,i.traverse)(e.additionalProperties,t,n).value,o.property2=(0,i.traverse)(e.additionalProperties,t,n).value),o};var i=e("../traverse");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}},{"../traverse":12}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sampleString=function(e){var t=e.format||"default";return(a[t]||o)(0|e.minLength,e.maxLength)};var i=e("../utils");function r(e,t,n){var r=(0,i.toRFCDateTime)(new Date,n,!1);if(r.length<e)throw new Error("Using minLength = ".concat(e,' is incorrect with format "date-time"'));if(t&&r.length>t)throw new Error("Using maxLength = ".concat(t,' is incorrect with format "date-time"'));return r}function o(e,t){var n=(0,i.ensureMinLength)("string",e);return t&&n.length>t&&(n=n.substring(0,t)),n}var a={email:function(){return"user@example.com"},password:function(e,t){var n="pa$$word";return e>n.length&&(n+="_",n+=(0,i.ensureMinLength)("qwerty!@#$%^123456",e-n.length).substring(0,e-n.length)),n},"date-time":function(e,t){return r(e,t)},date:function(e,t){return r(e,t,!0)},ipv4:function(){return"192.168.0.1"},ipv6:function(){return"2001:0db8:85a3:0000:0000:8a2e:0370:7334"},hostname:function(){return"example.com"},uri:function(){return"http://example.com"},default:o}},{"../utils":13}],12:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.clearCache=function(){d={}},n.traverse=function e(t,n,i){if(t.$ref){if(!i)throw new Error("Your schema contains $ref. You must provide specification in the third parameter.");var p=decodeURIComponent(t.$ref);p.startsWith("#")&&(p=p.substring(1));var u,l=s.default.get(i,p);if(!0!==d[p])d[p]=!0,u=e(l,n,i),d[p]=!1;else{var h=(0,a.inferType)(l);u={value:"object"===h?{}:"array"===h?[]:void 0}}return u}if(void 0!==t.example)return{value:t.example,readOnly:t.readOnly,writeOnly:t.writeOnly,type:t.type};if(void 0!==t.allOf)return(0,o.allOfSample)(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){c(e,t,n[t])}))}return e}({},t,{allOf:void 0}),t.allOf,n,i);if(t.oneOf&&t.oneOf.length)return t.anyOf&&(n.quiet||console.warn("oneOf and anyOf are not supported on the same level. Skipping anyOf")),e(t.oneOf[0],n,i);if(t.anyOf&&t.anyOf.length)return e(t.anyOf[0],n,i);var m=null,f=null;if(void 0!==t.default)m=t.default;else if(void 0!==t.const)m=t.const;else if(void 0!==t.enum&&t.enum.length)m=t.enum[0];else if(void 0!==t.examples&&t.examples.length)m=t.examples[0];else{(f=t.type)||(f=(0,a.inferType)(t));var y=r._samplers[f];y&&(m=y(t,n,i))}return{value:m,readOnly:t.readOnly,writeOnly:t.writeOnly,type:f}};var i,r=e("./openapi-sampler"),o=e("./allOf"),a=e("./infer"),s=(i=e("json-pointer"))&&i.__esModule?i:{default:i};function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d={}},{"./allOf":3,"./infer":4,"./openapi-sampler":5,"json-pointer":2}],13:[function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){return e<10?"0"+e:e}Object.defineProperty(n,"__esModule",{value:!0}),n.toRFCDateTime=function(e,t,n){var i=e.getUTCFullYear()+"-"+r(e.getUTCMonth()+1)+"-"+r(e.getUTCDate());return t||(i+="T"+r(e.getUTCHours())+":"+r(e.getUTCMinutes())+":"+r(e.getUTCSeconds())+(n?"."+(e.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5):"")+"Z"),i},n.ensureMinLength=function(e,t){return t>e.length?e.repeat(Math.trunc(t/e.length)+1).substring(0,t):e},n.mergeDeep=function e(){for(var t=function(e){return e&&"object"===i(e)},n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return r.reduce((function(n,i){return Object.keys(i).forEach((function(r){var o=n[r],a=i[r];t(o)&&t(a)?n[r]=e(o,a):n[r]=a})),n}),Array.isArray(r[r.length-1])?[]:{})}},{}]},{},[5])(5)},"3Lyj":function(e,t,n){var i=n("KroJ");e.exports=function(e,t,n){for(var r in t)i(e,r,t[r],n);return e}},"3Mpw":function(e,t,n){"use strict";n.d(t,"b",(function(){return a}));n("bWfx"),n("V+eJ"),n("8+KV"),n("Z2Ku"),n("L9s1"),n("DNiP"),n("hHhE"),n("KKXr"),n("91GP"),n("HAE/");var i=n("SVOR"),r={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},o=n("q1tI"),a={Prism:i.a,theme:r};function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var d=/\r\n|\r|\n/,p=function(e){0===e.length?e.push({types:["plain"],content:"",empty:!0}):1===e.length&&""===e[0].content&&(e[0].empty=!0)},u=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},l=function(e,t){var n=e.plain,i=Object.create(null),r=e.styles.reduce((function(e,n){var i=n.languages,r=n.style;return i&&!i.includes(t)||n.types.forEach((function(t){var n=c({},e[t],r);e[t]=n})),e}),i);return r.root=n,r.plain=c({},n,{backgroundColor:null}),r};function h(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===t.indexOf(i)&&(n[i]=e[i]);return n}var m=function(e){function t(){for(var t=this,n=[],i=arguments.length;i--;)n[i]=arguments[i];e.apply(this,n),s(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?l(e.theme,e.language):void 0;return t.themeDict=n})),s(this,"getLineProps",(function(e){var n=e.key,i=e.className,r=e.style,o=c({},h(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),a=t.getThemeDict(t.props);return void 0!==a&&(o.style=a.plain),void 0!==r&&(o.style=void 0!==o.style?c({},o.style,r):r),void 0!==n&&(o.key=n),i&&(o.className+=" "+i),o})),s(this,"getStyleForToken",(function(e){var n=e.types,i=e.empty,r=n.length,o=t.getThemeDict(t.props);if(void 0!==o){if(1===r&&"plain"===n[0])return i?{display:"inline-block"}:void 0;if(1===r&&!i)return o[n[0]];var a=i?{display:"inline-block"}:{},s=n.map((function(e){return o[e]}));return Object.assign.apply(Object,[a].concat(s))}})),s(this,"getTokenProps",(function(e){var n=e.key,i=e.className,r=e.style,o=e.token,a=c({},h(e,["key","className","style","token"]),{className:"token "+o.types.join(" "),children:o.content,style:t.getStyleForToken(o),key:void 0});return void 0!==r&&(a.style=void 0!==a.style?c({},a.style,r):r),void 0!==n&&(a.key=n),i&&(a.className+=" "+i),a}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,i=e.code,r=e.children,o=this.getThemeDict(this.props),a=t.languages[n];return r({tokens:function(e){for(var t=[[]],n=[e],i=[0],r=[e.length],o=0,a=0,s=[],c=[s];a>-1;){for(;(o=i[a]++)<r[a];){var l=void 0,h=t[a],m=n[a][o];if("string"==typeof m?(h=a>0?h:["plain"],l=m):(h=u(h,m.type),m.alias&&(h=u(h,m.alias)),l=m.content),"string"==typeof l){var f=l.split(d),y=f.length;s.push({types:h,content:f[0]});for(var g=1;g<y;g++)p(s),c.push(s=[]),s.push({types:h,content:f[g]})}else a++,t.push(h),n.push(l),i.push(0),r.push(l.length)}a--,t.pop(),n.pop(),i.pop(),r.pop()}return p(s),c}(void 0!==a?t.tokenize(i,a,n):[i]),className:"prism-code language-"+n,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(o.Component);t.a=m},"444f":function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=t.ScrollBehaviorContext=void 0;var r=i(n("XEEL")),o=i(n("q1tI")),a=i(n("LHMV")),s=i(n("17x9")),c=n("9Xx/"),d=i(n("1fHE")),p=o.default.createContext();t.ScrollBehaviorContext=p;var u={shouldUpdateScroll:s.default.func,children:s.default.element.isRequired,location:s.default.object.isRequired},l=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).shouldUpdateScroll=function(e,t){var n=i.props.shouldUpdateScroll;return!n||n.call(i.scrollBehavior,e,t)},i.registerElement=function(e,t,n){i.scrollBehavior.registerElement(e,t,n,i.getRouterProps())},i.unregisterElement=function(e){i.scrollBehavior.unregisterElement(e)},i.scrollBehavior=new a.default({addTransitionHook:c.globalHistory.listen,stateStorage:new d.default,getCurrentLocation:function(){return i.props.location},shouldUpdateScroll:i.shouldUpdateScroll}),i}(0,r.default)(t,e);var n=t.prototype;return n.componentDidUpdate=function(e){var t=this.props.location;if(t!==e.location){var n={location:e.location};this.scrollBehavior.updateScroll(n,{history:c.globalHistory,location:t})}},n.componentWillUnmount=function(){this.scrollBehavior.stop()},n.getRouterProps=function(){return{location:this.props.location,history:c.globalHistory}},n.render=function(){return o.default.createElement(p.Provider,{value:this},o.default.Children.only(this.props.children))},t}(o.default.Component);l.propTypes=u;var h=l;t.default=h},"4LTH":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n("vOnD"),r=n("61Ie"),o=n("xK/f"),a=n("gdQ2"),s=n("SlEa"),c="\n  @media screen and (min-width: "+s.a.large+") {\n    max-width: 80%;\n  }\n",d=i.b.aside.withConfig({componentId:"sc-1ky717b-0"})(["","{margin-bottom:5px;}","{font-size:16px;margin-bottom:0;}","{margin-bottom:5px;font-size:16px;}","{margin-bottom:0;margin-top:30px;}","{margin-bottom:20px;}","{margin:15px 0 30px 0;","}","{margin-top:30px;margin-bottom:5px !important;}"," + ","{margin-top:10px;}","{margin-top:15px;margin-bottom:60px;","}"," "," ",":first-child{font-size:13px;font-weight:bold;font-family:",";color:",";}",":nth-last-of-type(2):nth-child(2){font-size:13px;color:",";font-family:",";}"],o.g,o.h,r.e,r.f,r.j,o.j,c,r.a,r.a,r.f,a.a,c,a.b,a.f,a.c,s.d.monospace,s.b.brandSecondaryDarkest,a.c,s.b.brandGreenDark,s.d.monospace);i.b.a.withConfig({componentId:"sc-1ky717b-1"})([""]),i.b.p.withConfig({componentId:"sc-1ky717b-2"})([""])},"4LiD":function(e,t,n){"use strict";var i=n("dyZX"),r=n("XKFU"),o=n("KroJ"),a=n("3Lyj"),s=n("Z6vF"),c=n("SlkY"),d=n("9gX7"),p=n("0/R4"),u=n("eeVq"),l=n("XMVh"),h=n("fyDq"),m=n("Xbzi");e.exports=function(e,t,n,f,y,g){var b=i[e],A=b,D=y?"set":"add",C=A&&A.prototype,T={},I=function(e){var t=C[e];o(C,e,"delete"==e||"has"==e?function(e){return!(g&&!p(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!p(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof A&&(g||C.forEach&&!u((function(){(new A).entries().next()})))){var R=new A,S=R[D](g?{}:-0,1)!=R,N=u((function(){R.has(1)})),P=l((function(e){new A(e)})),v=!g&&u((function(){for(var e=new A,t=5;t--;)e[D](t,t);return!e.has(-0)}));P||((A=t((function(t,n){d(t,A,e);var i=m(new b,t,A);return null!=n&&c(n,y,i[D],i),i}))).prototype=C,C.constructor=A),(N||v)&&(I("delete"),I("has"),y&&I("get")),(v||S)&&I(D),g&&C.clear&&delete C.clear}else A=f.getConstructor(t,e,y,D),a(A.prototype,n),s.NEED=!0;return h(A,e),T[e]=A,r(r.G+r.W+r.F*(A!=b),T),g||f.setStrong(A,e,y),A}},"4R4u":function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},"4qRI":function(e,t,n){"use strict";t.a=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}},"5D9J":function(e,t,n){"use strict";n.r(t);n("8+KV"),n("2Spj"),n("f3/d"),n("HAE/"),n("WLL4"),n("jm62"),n("0l/t"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V");var i=n("0jh0"),r=n.n(i),o=n("q1tI"),a=n("9uj6"),s=n("qKvR"),c=n("SIPS"),d=n("MiSq"),p=a.a,u=function(e){return"theme"!==e&&"innerRef"!==e},l=function(e){return"string"==typeof e&&e.charCodeAt(0)>96?p:u};function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(n,!0).forEach((function(t){r()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var f=function e(t,n){var i,r,a;void 0!==n&&(i=n.label,a=n.target,r=t.__emotion_forwardProp&&n.shouldForwardProp?function(e){return t.__emotion_forwardProp(e)&&n.shouldForwardProp(e)}:n.shouldForwardProp);var p=t.__emotion_real===t,u=p&&t.__emotion_base||t;"function"!=typeof r&&p&&(r=t.__emotion_forwardProp);var h=r||l(u),f=!h("as");return function(){var y=arguments,g=p&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==i&&g.push("label:"+i+";"),null==y[0]||void 0===y[0].raw)g.push.apply(g,y);else{0,g.push(y[0][0]);for(var b=y.length,A=1;A<b;A++)g.push(y[A],y[0][A])}var D=Object(s.c)((function(e,t,n){return Object(o.createElement)(s.a.Consumer,null,(function(i){var s=f&&e.as||u,p="",m=[],y=e;if(null==e.theme){for(var b in y={},e)y[b]=e[b];y.theme=i}"string"==typeof e.className?p=Object(c.a)(t.registered,m,e.className):null!=e.className&&(p=e.className+" ");var A=Object(d.a)(g.concat(m),t.registered,y);Object(c.b)(t,A,"string"==typeof s);p+=t.key+"-"+A.name,void 0!==a&&(p+=" "+a);var D=f&&void 0===r?l(s):h,C={};for(var T in e)f&&"as"===T||D(T)&&(C[T]=e[T]);return C.className=p,C.ref=n||e.innerRef,Object(o.createElement)(s,C)}))}));return D.displayName=void 0!==i?i:"Styled("+("string"==typeof u?u:u.displayName||u.name||"Component")+")",D.defaultProps=t.defaultProps,D.__emotion_real=D,D.__emotion_base=u,D.__emotion_styles=g,D.__emotion_forwardProp=r,Object.defineProperty(D,"toString",{value:function(){return"."+a}}),D.withComponent=function(t,i){return e(t,void 0!==i?m({},n||{},{},i):n).apply(void 0,g)},D}}.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){f[e]=f(e)}));t.default=f},"5NKs":function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},"5xg7":function(e){e.exports=JSON.parse('{"1.0":{"openapi":"3.0.0","info":{"version":"1.0","title":"ClearBank Financial Institutions API","description":"The ClearBank® API is a REST based API that can be connected to in order to leverage ClearBank®’s products and banking services.\\r\\n\\r\\nThis ClearBank® Financial Institution API area in Swagger provides Financial Institutions with the required API endpoint information and message schema.\\r\\n\\r\\nFor the necessary information in order for Financial Institutions to successfully connect to ClearBank®’s API, refer to the Knowledge Centre.\\r\\n\\r\\nAll information is provided to you on a confidential basis and shall remain the property of ClearBank Ltd (including ownership rights in all intellectual property). All information is provided \\"as is\\" and without any implied warranty, representation, condition or otherwise, regarding its accuracy or completeness.\\r\\n\\r\\nCopyright ClearBank Ltd. Authorised by the Prudential Regulation Authority and regulated by the Financial Conduct Authority and the Prudential Regulation Authority (Financial Services Register number: 754568). Registered Address: Level 29, 30 St. Mary Axe, London, England EC3A 8EP.","contact":{"name":"API Support","url":"https://clear.bank","email":"fiapisupport@clear.bank"}},"paths":{"/v1/Accounts":{"get":{"tags":["Accounts"],"summary":"Gets all accounts associated with your institution","description":"All accounts are returned except those which have been disabled or where the account is a virtual account","operationId":"V1AccountsGet","parameters":[{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Accounts"],"summary":"Creates an account with the specified name","description":"Currently, this endpoint only supports the creation of current accounts\\r\\n            \\r\\nAccountName must: not be null, only white space, only contain letters, numbers and the following special characters: - ,.","operationId":"V1AccountsPost","parameters":[{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that is used to create a Current Account","required":["accountName"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"}}}}}},"responses":{"201":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}":{"get":{"tags":["Accounts"],"summary":"Gets a detailed view of an account","operationId":"V1AccountsByAccountIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"patch":{"tags":["Accounts"],"summary":"Amends properties of an account","description":"Currently supports changing the status of an account","operationId":"V1AccountsByAccountIdPatch","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information required for a current account amendment","type":"object","properties":{"status":{"description":"The status of the account.","enum":["NotProvided","Enabled","Closed","Suspended"],"type":"string"},"statusReason":{"description":"The account status reason","enum":["NotProvided","AccountHolderBankrupt","AccountHolderDeceased","AccountSwitched","CompanyNoLongerTrading","DissatisfiedCustomer","DuplicateSoleTraderAccount","FinancialCrime","FraudFirstParty","FraudThirdParty","Other"],"type":"string"}}}}},"description":"The information required to amend account properties"},"responses":{"204":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Transactions/{sortCode}/DirectCredit/Unapplied":{"get":{"tags":["Institution"],"summary":"Returns a list of all unapplied direct credit transactions for a given sort code","operationId":"V1TransactionsBySortCodeDirectCreditUnappliedGet","parameters":[{"name":"sortCode","in":"path","description":"Sort code which will be used to filter unapplied direct credit transactions","required":true,"schema":{"type":"string"}},{"name":"reasonCode","in":"query","description":"The reason code","required":false,"schema":{"type":"string"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"paymentReference","in":"query","description":"The payment reference","required":false,"schema":{"type":"string"}},{"name":"processingDateFrom","in":"query","description":"The starting processing date to filter by","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"processingDateTo","in":"query","description":"The last processing date to filter by","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"amount","in":"query","description":"The transaction amount","required":false,"schema":{"type":"number","format":"double"}},{"name":"transactionCodes","in":"query","description":"The transaction codes","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"},"uniqueItems":false}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unapplied direct credit transactions for the specified criteria/request","type":"object","properties":{"unappliedTransactions":{"description":"List of unapplied transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Transactions/{sortCode}/DirectDebit/Unpaid":{"get":{"tags":["Institution"],"summary":"Returns a list of all unpaid direct debit transactions for a given sort code","operationId":"V1TransactionsBySortCodeDirectDebitUnpaidGet","parameters":[{"name":"sortCode","in":"path","description":"Sort code which will be used to filter unpaid direct debit transactions","required":true,"schema":{"type":"string"}},{"name":"reasonCode","in":"query","description":"The reason code","required":false,"schema":{"type":"string"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"paymentReference","in":"query","description":"The payment reference","required":false,"schema":{"type":"string"}},{"name":"processingDateFrom","in":"query","description":"The starting processing date to filter by","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"processingDateTo","in":"query","description":"The last processing date to filter by","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"amount","in":"query","description":"The transaction amount","required":false,"schema":{"type":"number","format":"double"}},{"name":"transactionCodes","in":"query","description":"The transaction codes","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"},"uniqueItems":false}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unpaid direct debit transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unapplied transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Mandates":{"get":{"tags":["Accounts"],"summary":"Gets all of the Direct Debit mandates associated with the account","operationId":"V1AccountsByAccountIdMandatesGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Accounts"],"summary":"Requests creation of a Direct Debit mandate","operationId":"V1AccountsByAccountIdMandatesPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to create a DDM\\r\\nIBAN and BBAN account identifiers are supported","required":["serviceUserNumber","reference"],"type":"object","properties":{"serviceUserNumber":{"description":"The service user number.","pattern":"^\\\\d{6}$","type":"string"},"originatorName":{"description":"The originator name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"reference":{"description":"The Customers reference.","maxLength":18,"minLength":1,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"payerName":{"description":"The payer name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"mandateType":{"description":"The specified mandate type for the request","enum":["PaperMandate","Origination","Migrated"],"type":"string"}}}}},"description":"Information required to create the direct debit mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates":{"get":{"tags":["Virtual Accounts"],"summary":"Gets all of the Direct Debit mandates associated with the virtual account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Virtual Accounts"],"summary":"Requests creation of a Direct Debit mandate","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to create a DDM\\r\\nIBAN and BBAN account identifiers are supported","required":["serviceUserNumber","reference"],"type":"object","properties":{"serviceUserNumber":{"description":"The service user number.","pattern":"^\\\\d{6}$","type":"string"},"originatorName":{"description":"The originator name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"reference":{"description":"The Customers reference.","maxLength":18,"minLength":1,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"payerName":{"description":"The payer name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"mandateType":{"description":"The specified mandate type for the request","enum":["PaperMandate","Origination","Migrated"],"type":"string"}}}}},"description":"Information required to create the direct debit mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Mandates/{mandateId}":{"delete":{"tags":["Accounts"],"summary":"Requests cancellation for a Direct Debit mandate","description":"Supported reason codes are:\\r\\n0 - Institution cancelled - refer to payer. Paying bank has cancelled instruction.\\r\\n1 - Instruction cancelled by payer. Payer has instructed the paying bank to cancel the DirectDebit Instruction (Mandate).\\r\\n2 - Payer deceased\\r\\nB - Account closed. Payer has closed their account for an unknown reason.","operationId":"V1AccountsByAccountIdMandatesByMandateIdDelete","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to cancel a Mandate","required":["reasonCode"],"type":"object","properties":{"reasonCode":{"description":"The reason code","pattern":"^[0-2B]{1}$","type":"string"}}}}},"description":"Information required for cancelling the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"patch":{"tags":["Accounts"],"summary":"Requests amendments to Direct Debit mandate","description":"Supported reason codes are:\\r\\nC - Account transfered to a different branch of bank/building society\\r\\nE - Instruction amended","operationId":"V1AccountsByAccountIdMandatesByMandateIdPatch","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to cancel a Mandate","required":["reasonCode","newDebtorAccount"],"type":"object","properties":{"reasonCode":{"description":"Reason code for requesting the amendment","pattern":"^[EC]{1}$","type":"string"},"newDebtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}},"description":"Information required for amending the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/{mandateId}":{"delete":{"tags":["Virtual Accounts"],"summary":"Requests cancellation for a Direct Debit mandate for virtual account","description":"Supported reason codes are:\\r\\n0 - Institution cancelled - refer to payer. Paying bank has cancelled instruction.\\r\\n1 - Instruction cancelled by payer. Payer has instructed the paying bank to cancel the DirectDebit Instruction (Mandate).\\r\\n2 - Payer deceased\\r\\nB - Account closed. Payer has closed their account for an unknown reason.","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesByMandateIdDelete","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to cancel a Mandate","required":["reasonCode"],"type":"object","properties":{"reasonCode":{"description":"The reason code","pattern":"^[0-2B]{1}$","type":"string"}}}}},"description":"Information required for canceling the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"patch":{"tags":["Virtual Accounts"],"summary":"Requests amendments to Direct Debit mandate for virtual account","description":"Supported reason codes are:\\r\\nC - Account transfered to a different branch of bank/building society\\r\\nE - Instruction amended","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesByMandateIdPatch","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to cancel a Mandate","required":["reasonCode","newDebtorAccount"],"type":"object","properties":{"reasonCode":{"description":"Reason code for requesting the amendment","pattern":"^[EC]{1}$","type":"string"},"newDebtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}},"description":"Information required for amending the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Mandates/{mandateId}/Returns":{"post":{"tags":["Accounts"],"summary":"Requests rejection for the supplied mandate identifier","operationId":"V1AccountsByAccountIdMandatesByMandateIdReturnsPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Direct Debit Mandate Reject Request","required":["rejectionReason"],"type":"object","properties":{"rejectionReason":{"description":"The reason why the return is being rejected","pattern":"^[BCFGHIK12356]{1}$","type":"string"}}}}},"description":"The request mainly includes ReasonCode required for returning the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/{mandateId}/Returns":{"post":{"tags":["Virtual Accounts"],"summary":"Requests rejection for the supplied mandate identifier","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesByMandateIdReturnsPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique direct debit mandate identifier","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Direct Debit Mandate Reject Request","required":["rejectionReason"],"type":"object","properties":{"rejectionReason":{"description":"The reason why the return is being rejected","pattern":"^[BCFGHIK12356]{1}$","type":"string"}}}}},"description":"The request mainly includes ReasonCode required for returning the mandate"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Transactions":{"get":{"tags":["Institution"],"summary":"Gets a summary of all of the transactions from the institution","operationId":"V1TransactionsGet","parameters":[{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V1.Controllers.BaseController.DefaultPageNumber","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V1.Controllers.BaseController.DefaultPageSize","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified institution and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Payments/{scheme}":{"post":{"tags":["Payments"],"summary":"Initiate a payment using the specified payment scheme","description":"This endpoint works on a partial acceptance basis - meaning that you can submit 10 payments and only 6 of them may be accepted for processing.\\r\\n            \\r\\nEach payment instruction is validated against the scheme specific rules as well as the ISO20022 specification.\\r\\n            \\r\\nCurrently, only payments through GBP are supported. We have listed possible currencies for future proofing of the API.\\r\\n            \\r\\nThe remittance information must be scheme compatible. Values exceeding the length limits of the scheme will be truncated. Missing remittance information will be replaced by a blank string.\\r\\n<br /><strong>FPS</strong><br /><u>Account Holder Name</u> - Required, alpha-numeric, space, comma, full-stop, hyphen (Max 18 characters) \\r\\n<u>Sort code</u> - 6 character length, must be numeric\\r\\n<u>Account Number</u> - required, 8 character length, must be numeric\\r\\n<u>Amount</u> - required, must be numeric and greater than 0\\r\\n<u>Payment Reference</u> - required, alpha numeric, space, comma, full stop, hyphen, maximum length 18 characters (Description to be provided -if customer exceeds 18 characters this will be truncated)\\r\\n<br /><strong>CHAPS</strong><br /><u>Account Holder Name</u> - Required, alpha-numeric, space, comma, full-stop, hyphen (Max 18 characters) \\r\\n<u>Sort code</u> - 6 character length, must be numeric\\r\\n<u>Account Number</u> - required, 8 character length, must be numeric\\r\\n<u>Amount</u> - required, must be numeric and greater than 0\\r\\n<u>Payment Reference</u> - required, alpha numeric, space, comma, full stop, hyphen, maximum length 35 characters\\r\\n<u>CHAPS availability</u> - 8am - 5pm M-F (Business Days)\\r\\n<br />","operationId":"V1PaymentsBySchemePost","parameters":[{"name":"scheme","in":"path","description":"The name of the scheme through which monies should be transferred.","required":true,"schema":{"type":"string","enum":["FPS","CHAPS"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that should be used to create a credit transfer","required":["paymentInstructions"],"type":"object","properties":{"paymentInstructions":{"description":"Details of the payments to be made","uniqueItems":false,"type":"array","items":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}}}}}}},"description":"The details of the payment instructions to be executed."},"responses":{"202 ":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400 ":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"0":{"examples":{"response":{"value":{"transactions":[{"endToEndIdentification":"string","response":"InvalidAccount"}],"halLinks":[{"name":"string","href":"string","templated":true}]}}}},"application/json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400  ":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403 ":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409 ":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500 ":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503 ":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Test":{"get":{"tags":["Test"],"summary":"A test endpoint which ensures that authentication is working as expected","operationId":"V1TestGet","parameters":[{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Test"],"summary":"A test endpoint which echoes the supplied content to ensure that signature verification and authorization is working as expected","operationId":"V1TestPost","parameters":[{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Mandates/{mandateId}/Collections":{"get":{"tags":["Accounts"],"summary":"Gets a collection of transactions for account mandate","description":"This is a paged endpoint, if no parameters are supplied the first page is returned, you can add date filter by supplying in the URL.","operationId":"V1AccountsByAccountIdMandatesByMandateIdCollectionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique identifier for Direct Debit Mandate.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Optional filter by start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Optional filter by end date. Date must be formatted as YYYY-mm-DD. For example ?endDate=1990-10-04","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/{mandateId}/Collections":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a collection of transactions for account mandate","description":"This is a paged endpoint, if no parameters are supplied the first page is returned, you can add date filter by supplying in the URL.","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesByMandateIdCollectionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique identifier for Direct Debit Mandate.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Optional filter by start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Optional filter by end date. Date must be formatted as YYYY-mm-DD. For example ?endDate=1990-10-04","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Mandates/Unpaid":{"get":{"tags":["Accounts"],"summary":"Returns a list of all unpaid transactions belonging to an account","operationId":"V1AccountsByAccountIdMandatesUnpaidGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Transactions query start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Transactions query end date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"reference","in":"query","description":"Transaction reference","required":false,"schema":{"type":"string","minLength":1,"maxLength":18}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/Unpaid":{"get":{"tags":["Virtual Accounts"],"summary":"Returns a list of all unpaid transactions belonging to a virtual account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdMandatesUnpaidGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Transactions query start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Transactions query end date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"reference","in":"query","description":"Transaction reference","required":false,"schema":{"type":"string","minLength":1,"maxLength":18}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Transactions/Returns":{"post":{"tags":["Accounts"],"summary":"Creates a return of one or more Direct Debit or Direct Credit transactions for the account","operationId":"V1AccountsByAccountIdTransactionsReturnsPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to make a return of transaction","required":["returns"],"type":"object","properties":{"returns":{"description":"Array of transactions to be returned","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Transaction to be returned","required":["transactionId","reasonCode"],"type":"object","properties":{"transactionId":{"format":"uuid","description":"Transaction identification.","type":"string"},"reasonCode":{"description":"Reason for return, single character only\\r\\nAllowed ReasonCode for DC:\\r\\n    0 - Invalid details\\r\\n    2 - Beneficiary deceased\\r\\n    3 - Account transferred\\r\\n    5 - No account\\r\\n    B - Account closed\\r\\n    C - Requested by Remitter\\r\\nAllowed ReasonCode for DD:\\r\\n    0 - Refer to payer \\r\\n    1 - Instruction canceled \\r\\n    2 - Payer deceased \\r\\n    3 - Account transferred \\r\\n    4 - Advance notice disputed\\r\\n    5 - No account(OR wrong account type)\\r\\n    6 - No Instruction \\r\\n    7 - Amount differs \\r\\n    8 - Amount not yet due \\r\\n    9 - Presentation overdue\\r\\n    A - Service user differs\\r\\n    B - Account closed","type":"string"}}}}}}}},"description":"A collection of transactions to return, each transaction must have transaction id and return reason code specified"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Transactions/Returns":{"post":{"tags":["Virtual Accounts"],"summary":"Creates a return of one or more Direct Debit or Direct Credit transactions for the virtual account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdTransactionsReturnsPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Request to make a return of transaction","required":["returns"],"type":"object","properties":{"returns":{"description":"Array of transactions to be returned","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Transaction to be returned","required":["transactionId","reasonCode"],"type":"object","properties":{"transactionId":{"format":"uuid","description":"Transaction identification.","type":"string"},"reasonCode":{"description":"Reason for return, single character only\\r\\nAllowed ReasonCode for DC:\\r\\n    0 - Invalid details\\r\\n    2 - Beneficiary deceased\\r\\n    3 - Account transferred\\r\\n    5 - No account\\r\\n    B - Account closed\\r\\n    C - Requested by Remitter\\r\\nAllowed ReasonCode for DD:\\r\\n    0 - Refer to payer \\r\\n    1 - Instruction canceled \\r\\n    2 - Payer deceased \\r\\n    3 - Account transferred \\r\\n    4 - Advance notice disputed\\r\\n    5 - No account(OR wrong account type)\\r\\n    6 - No Instruction \\r\\n    7 - Amount differs \\r\\n    8 - Amount not yet due \\r\\n    9 - Presentation overdue\\r\\n    A - Service user differs\\r\\n    B - Account closed","type":"string"}}}}}}}},"description":"A collection of transactions to return, each transaction must have transaction id and return reason code specified"},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Transactions":{"get":{"tags":["Accounts"],"summary":"Gets a summary of all of the transactions from the specified account","operationId":"V1AccountsByAccountIdTransactionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Transactions":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a summary of all of the transactions from the specified account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdTransactionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Transactions/{transactionId}":{"get":{"tags":["Accounts"],"summary":"Gets the details of a specific transaction from the specified account","operationId":"V1AccountsByAccountIdTransactionsByTransactionIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"transactionId","in":"path","description":"The unique identifier for the transaction. This can be retrieved from GET /v1/Transactions","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}/Transactions/{transactionId}":{"get":{"tags":["Virtual Accounts"],"summary":"Gets the details of a specific transaction from the specified virtual account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdTransactionsByTransactionIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"transactionId","in":"path","description":"The unique identifier for the transaction. This can be retrieved from GET /v1/Transactions","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual":{"get":{"tags":["Virtual Accounts"],"summary":"Lists all of the virtual accounts belonging to a given account","description":"All virtual accounts are returned including those which have been disabled. A Status field is available","operationId":"V1AccountsByAccountIdVirtualGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Virtual Accounts"],"summary":"Creates a series of virtual accounts","operationId":"V1AccountsByAccountIdVirtualPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that\'s used to create multiple virtual accounts","required":["virtualAccounts"],"type":"object","properties":{"virtualAccounts":{"description":"The virtual accounts that should be created","uniqueItems":false,"type":"array","items":{"description":"Represents the data required to create a virtual account","required":["accountName","accountIdentifier"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be given to the virtual account","maxLength":70,"minLength":1,"type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"accountIdentifier":{"description":"Represents ways of identifying an account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}}}}}}},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/{accountId}/Virtual/{virtualAccountId}":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a specific Virtual Account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdGet","parameters":[{"name":"accountId","in":"path","description":"The account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The virtual account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"delete":{"tags":["Virtual Accounts"],"summary":"Disables the virtual account that belongs to the given account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdDelete","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"patch":{"tags":["Virtual Accounts"],"summary":"Requests update of a Virtual Account","operationId":"V1AccountsByAccountIdVirtualByVirtualAccountIdPatch","parameters":[{"name":"accountId","in":"path","description":"The account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The virtual account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Represents the data for updating a virtual account","required":["ownerName"],"type":"object","properties":{"ownerName":{"description":"Owner name","maxLength":70,"minLength":1,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}}}},"description":"Information required to update virtual account"},"responses":{"204":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v1/Accounts/Virtual":{"get":{"tags":["Virtual Accounts"],"summary":"Lists all of the virtual accounts belonging to an Institution","description":"All virtual accounts are returned including those which have been disabled. A Status field is available","operationId":"V1AccountsVirtualGet","parameters":[{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V1.Controllers.BaseController.DefaultPageNumber","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V1.Controllers.BaseController.DefaultPageSize","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}}},"components":{"requestBodies":{"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.DirectDebitMandateRejectRequest":{"content":{"application/json":{"schema":{"description":"Direct Debit Mandate Reject Request","required":["rejectionReason"],"type":"object","properties":{"rejectionReason":{"description":"The reason why the return is being rejected","pattern":"^[BCFGHIK12356]{1}$","type":"string"}}}}},"description":"The request mainly includes ReasonCode required for returning the mandate"},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateCreationRequest":{"content":{"application/json":{"schema":{"description":"Request to create a DDM\\r\\nIBAN and BBAN account identifiers are supported","required":["serviceUserNumber","reference"],"type":"object","properties":{"serviceUserNumber":{"description":"The service user number.","pattern":"^\\\\d{6}$","type":"string"},"originatorName":{"description":"The originator name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"reference":{"description":"The Customers reference.","maxLength":18,"minLength":1,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"payerName":{"description":"The payer name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"mandateType":{"description":"The specified mandate type for the request","enum":["PaperMandate","Origination","Migrated"],"type":"string"}}}}},"description":"Information required to create the direct debit mandate"},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateAmendmentRequest":{"content":{"application/json":{"schema":{"description":"Request to cancel a Mandate","required":["reasonCode","newDebtorAccount"],"type":"object","properties":{"reasonCode":{"description":"Reason code for requesting the amendment","pattern":"^[EC]{1}$","type":"string"},"newDebtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}},"description":"Information required for amending the mandate"},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.TransactionReturnsRequest":{"content":{"application/json":{"schema":{"description":"Request to make a return of transaction","required":["returns"],"type":"object","properties":{"returns":{"description":"Array of transactions to be returned","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Transaction to be returned","required":["transactionId","reasonCode"],"type":"object","properties":{"transactionId":{"format":"uuid","description":"Transaction identification.","type":"string"},"reasonCode":{"description":"Reason for return, single character only\\r\\nAllowed ReasonCode for DC:\\r\\n    0 - Invalid details\\r\\n    2 - Beneficiary deceased\\r\\n    3 - Account transferred\\r\\n    5 - No account\\r\\n    B - Account closed\\r\\n    C - Requested by Remitter\\r\\nAllowed ReasonCode for DD:\\r\\n    0 - Refer to payer \\r\\n    1 - Instruction canceled \\r\\n    2 - Payer deceased \\r\\n    3 - Account transferred \\r\\n    4 - Advance notice disputed\\r\\n    5 - No account(OR wrong account type)\\r\\n    6 - No Instruction \\r\\n    7 - Amount differs \\r\\n    8 - Amount not yet due \\r\\n    9 - Presentation overdue\\r\\n    A - Service user differs\\r\\n    B - Account closed","type":"string"}}}}}}}},"description":"A collection of transactions to return, each transaction must have transaction id and return reason code specified"}},"schemas":{"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.AccountsResponse":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.Account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.HalLink":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.Balance":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Accounts.CreateAccountRequest":{"description":"Information that is used to create a Current Account","required":["accountName"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Accounts.PartyIdentification":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.AccountResponse":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V1.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Accounts.PatchAccountRequest":{"description":"Information required for a current account amendment","type":"object","properties":{"status":{"description":"The status of the account.","enum":["NotProvided","Enabled","Closed","Suspended"],"type":"string"},"statusReason":{"description":"The account status reason","enum":["NotProvided","AccountHolderBankrupt","AccountHolderDeceased","AccountSwitched","CompanyNoLongerTrading","DissatisfiedCustomer","DuplicateSoleTraderAccount","FinancialCrime","FraudFirstParty","FraudThirdParty","Other"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.GetUnappliedDirectCreditTransactionsResponse":{"description":"Returns list of all unapplied direct credit transactions for the specified criteria/request","type":"object","properties":{"unappliedTransactions":{"description":"List of unapplied transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.UnpaidTransaction":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.CounterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"ClearBank.FI.API.Versions.V1.Models.CounterpartAccountIdentification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}},"ClearBank.FI.API.Versions.V1.Models.CounterpartAccountGenericIdentification":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.CounterpartAccountGenericIdentificationScheme":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.GetUnpaidDirectDebitTransactionsResponse":{"description":"Returns list of all unpaid direct debit transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unapplied transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Mandates.MandatesResponse":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Mandates.DirectDebitMandate":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateCreationRequest":{"description":"Request to create a DDM\\r\\nIBAN and BBAN account identifiers are supported","required":["serviceUserNumber","reference"],"type":"object","properties":{"serviceUserNumber":{"description":"The service user number.","pattern":"^\\\\d{6}$","type":"string"},"originatorName":{"description":"The originator name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"reference":{"description":"The Customers reference.","maxLength":18,"minLength":1,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"payerName":{"description":"The payer name.","maxLength":18,"minLength":0,"pattern":"^[A-Z0-9\\\\.\\\\&\\\\/\\\\-\\\\ ]*$","type":"string"},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"mandateType":{"description":"The specified mandate type for the request","enum":["PaperMandate","Origination","Migrated"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.EmptyApiResponse":{"description":"An API response which contains no additional properties","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateCancellationRequest":{"description":"Request to cancel a Mandate","required":["reasonCode"],"type":"object","properties":{"reasonCode":{"description":"The reason code","pattern":"^[0-2B]{1}$","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateAmendmentRequest":{"description":"Request to cancel a Mandate","required":["reasonCode","newDebtorAccount"],"type":"object","properties":{"reasonCode":{"description":"Reason code for requesting the amendment","pattern":"^[EC]{1}$","type":"string"},"newDebtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.DirectDebitMandateRejectRequest":{"description":"Direct Debit Mandate Reject Request","required":["rejectionReason"],"type":"object","properties":{"rejectionReason":{"description":"The reason why the return is being rejected","pattern":"^[BCFGHIK12356]{1}$","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Institutions.InstitutionTransactionsResponse":{"description":"Represents one or more transactions against the specified institution and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.CreateCreditTransferRequest":{"description":"Information that should be used to create a credit transfer","required":["paymentInstructions"],"type":"object","properties":{"paymentInstructions":{"description":"Details of the payments to be made","uniqueItems":false,"type":"array","items":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.PaymentInstruction":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.PartyIdentifier":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.CreditTransfer":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.PaymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.RemittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.Structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Payments.CreditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Payments.CreditTransferResponse":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Payments.PaymentInstructionResponse":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Mandates.MandateTransactionsResponse":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.MandateTransaction":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.GetAllUnpaidTransactionsResponse":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"},"creditorAccountName":{"description":"The creditor account name.","type":"string"},"debtorAccountName":{"description":"The debtor account name.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.TransactionReturnsRequest":{"description":"Request to make a return of transaction","required":["returns"],"type":"object","properties":{"returns":{"description":"Array of transactions to be returned","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Transaction to be returned","required":["transactionId","reasonCode"],"type":"object","properties":{"transactionId":{"format":"uuid","description":"Transaction identification.","type":"string"},"reasonCode":{"description":"Reason for return, single character only\\r\\nAllowed ReasonCode for DC:\\r\\n    0 - Invalid details\\r\\n    2 - Beneficiary deceased\\r\\n    3 - Account transferred\\r\\n    5 - No account\\r\\n    B - Account closed\\r\\n    C - Requested by Remitter\\r\\nAllowed ReasonCode for DD:\\r\\n    0 - Refer to payer \\r\\n    1 - Instruction canceled \\r\\n    2 - Payer deceased \\r\\n    3 - Account transferred \\r\\n    4 - Advance notice disputed\\r\\n    5 - No account(OR wrong account type)\\r\\n    6 - No Instruction \\r\\n    7 - Amount differs \\r\\n    8 - Amount not yet due \\r\\n    9 - Presentation overdue\\r\\n    A - Service user differs\\r\\n    B - Account closed","type":"string"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.Mandates.TransactionReturn":{"description":"Direct Debit Transaction to be returned","required":["transactionId","reasonCode"],"type":"object","properties":{"transactionId":{"format":"uuid","description":"Transaction identification.","type":"string"},"reasonCode":{"description":"Reason for return, single character only\\r\\nAllowed ReasonCode for DC:\\r\\n    0 - Invalid details\\r\\n    2 - Beneficiary deceased\\r\\n    3 - Account transferred\\r\\n    5 - No account\\r\\n    B - Account closed\\r\\n    C - Requested by Remitter\\r\\nAllowed ReasonCode for DD:\\r\\n    0 - Refer to payer \\r\\n    1 - Instruction canceled \\r\\n    2 - Payer deceased \\r\\n    3 - Account transferred \\r\\n    4 - Advance notice disputed\\r\\n    5 - No account(OR wrong account type)\\r\\n    6 - No Instruction \\r\\n    7 - Amount differs \\r\\n    8 - Amount not yet due \\r\\n    9 - Presentation overdue\\r\\n    A - Service user differs\\r\\n    B - Account closed","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.AccountTransactionsResponse":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.Accounts.AccountTransactionResponse":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.VirtualAccounts.CreateVirtualAccountsRequest":{"description":"Information that\'s used to create multiple virtual accounts","required":["virtualAccounts"],"type":"object","properties":{"virtualAccounts":{"description":"The virtual accounts that should be created","uniqueItems":false,"type":"array","items":{"description":"Represents the data required to create a virtual account","required":["accountName","accountIdentifier"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be given to the virtual account","maxLength":70,"minLength":1,"type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"accountIdentifier":{"description":"Represents ways of identifying an account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.VirtualAccounts.CreateVirtualAccount":{"description":"Represents the data required to create a virtual account","required":["accountName","accountIdentifier"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be given to the virtual account","maxLength":70,"minLength":1,"type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"accountIdentifier":{"description":"Represents ways of identifying an account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}},"ClearBank.FI.API.Versions.V1.Models.Binding.VirtualAccounts.PartyIdentification":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.AccountIdentifier":{"description":"Represents ways of identifying an account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Response.VirtualAccounts.VirtualAccountsCreationAcceptedResponse":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.VirtualAccounts.VirtualAccountsResponse":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V1.Models.Response.VirtualAccounts.VirtualAccount":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V1.Models.Binding.VirtualAccounts.UpdateVirtualAccountRequest":{"description":"Represents the data for updating a virtual account","required":["ownerName"],"type":"object","properties":{"ownerName":{"description":"Owner name","maxLength":70,"minLength":1,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}}}}},"2.0":{"openapi":"3.0.0","info":{"version":"2.0","title":"ClearBank Financial Institutions API","description":"The ClearBank® API is a REST based API that can be connected to in order to leverage ClearBank®’s products and banking services.\\r\\n\\r\\nThis ClearBank® Financial Institution API area in Swagger provides Financial Institutions with the required API endpoint information and message schema.\\r\\n\\r\\nFor the necessary information in order for Financial Institutions to successfully connect to ClearBank®’s API, refer to the Knowledge Centre.\\r\\n\\r\\nAll information is provided to you on a confidential basis and shall remain the property of ClearBank Ltd (including ownership rights in all intellectual property). All information is provided \\"as is\\" and without any implied warranty, representation, condition or otherwise, regarding its accuracy or completeness.\\r\\n\\r\\nCopyright ClearBank Ltd. Authorised by the Prudential Regulation Authority and regulated by the Financial Conduct Authority and the Prudential Regulation Authority (Financial Services Register number: 754568). Registered Address: Level 29, 30 St. Mary Axe, London, England EC3A 8EP.","contact":{"name":"API Support","url":"https://clear.bank","email":"fiapisupport@clear.bank"}},"paths":{"/v2/Accounts":{"get":{"tags":["Accounts"],"summary":"Gets all accounts associated with your institution","description":"All accounts are returned except those which have been disabled or where the account is a virtual account","operationId":"V2AccountsGet","parameters":[{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Accounts"],"summary":"Creates an account with the specified name","description":"Currently, this endpoint only supports the creation of current accounts\\r\\n            \\r\\nAccountName must: not be null, only white space, only contain letters, numbers and the following special characters: - ,.","operationId":"V2AccountsPost","parameters":[{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that is used to create a Current Account","required":["accountName","sortCode"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"}}}}}},"responses":{"201":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}":{"get":{"tags":["Accounts"],"summary":"Gets a detailed view of an account","operationId":"V2AccountsByAccountIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Mandates":{"get":{"tags":["Accounts"],"summary":"Gets all of the Direct Debit mandates associated with the account","operationId":"V2AccountsByAccountIdMandatesGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /V2/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"payerBban":{"description":"Payer Bban","type":"string"},"payerAccountNumber":{"description":"Payer Account Number","type":"string"},"payerSortCode":{"description":"Payer Sort Code","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates":{"get":{"tags":["Virtual Accounts"],"summary":"Gets all of the Direct Debit mandates associated with the virtual account","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdMandatesGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /V2/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /V2/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"payerBban":{"description":"Payer Bban","type":"string"},"payerAccountNumber":{"description":"Payer Account Number","type":"string"},"payerSortCode":{"description":"Payer Sort Code","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Transactions":{"get":{"tags":["Institution"],"summary":"Gets a summary of all of the transactions from the institution","operationId":"V2TransactionsGet","parameters":[{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V2.Controllers.BaseController.DefaultPageNumber","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: ClearBank.FI.API.Versions.V2.Controllers.BaseController.DefaultPageSize","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified institution and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Payments/{scheme}":{"post":{"tags":["Payments"],"summary":"Initiate a payment using the specified payment scheme","description":"This endpoint works on a partial acceptance basis - meaning that you can submit 10 payments and only 6 of them may be accepted for processing.\\r\\n            \\r\\nEach payment instruction is validated against the scheme specific rules as well as the ISO20022 specification.\\r\\n            \\r\\nCurrently, only payments through GBP are supported. We have listed possible currencies for future proofing of the API.\\r\\n            \\r\\nThe remittance information must be scheme compatible. Values exceeding the length limits of the scheme will be truncated. Missing remittance information will be replaced by a blank string.\\r\\n<br /><strong>FPS</strong><br /><u>Account Holder Name</u> - Required, alpha-numeric, space, comma, full-stop, hyphen (Max 18 characters)\\r\\n<u>Sort code</u> - 6 character length, must be numeric\\r\\n<u>Account Number</u> - required, 8 character length, must be numeric\\r\\n<u>Amount</u> - required, must be numeric and greater than 0\\r\\n<u>Payment Reference</u> - required, alpha numeric, space, comma, full stop, hyphen, maximum length 18 characters (Description to be provided -if customer exceeds 18 characters this will be truncated)\\r\\n<br /><strong>CHAPS</strong><br /><u>Account Holder Name</u> - Required, alpha-numeric, space, comma, full-stop, hyphen (Max 18 characters)\\r\\n<u>Sort code</u> - 6 character length, must be numeric\\r\\n<u>Account Number</u> - required, 8 character length, must be numeric\\r\\n<u>Amount</u> - required, must be numeric and greater than 0\\r\\n<u>Payment Reference</u> - required, alpha numeric, space, comma, full stop, hyphen, maximum length 35 characters\\r\\n<u>CHAPS availability</u> - 8am - 5pm M-F (Business Days)\\r\\n<br />","operationId":"V2PaymentsBySchemePost","parameters":[{"name":"scheme","in":"path","description":"The name of the scheme through which monies should be transferred.","required":true,"schema":{"type":"string","enum":["FPS","CHAPS"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that should be used to create a credit transfer","required":["paymentInstructions"],"type":"object","properties":{"paymentInstructions":{"description":"Details of the payments to be made","uniqueItems":false,"type":"array","items":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"schemeChannelName":{"description":"The (optional) scheme channel name","type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"Optionally, the legal entity identifier of the account","type":"object","properties":{"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}}}}}}},"description":"The details of the payment instructions to be executed."},"responses":{"202 ":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400 ":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400  ":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403 ":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409 ":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500 ":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503 ":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Transactions":{"get":{"tags":["Accounts"],"summary":"Gets a summary of all of the transactions from the specified account","operationId":"V2AccountsByAccountIdTransactionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Transactions/{transactionId}":{"get":{"tags":["Accounts"],"summary":"Gets the details of a specific transaction from the specified account","operationId":"V2AccountsByAccountIdTransactionsByTransactionIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"transactionId","in":"path","description":"The unique identifier for the transaction. This can be retrieved from GET /v1/Transactions","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Mandates/{mandateId}/Collections":{"get":{"tags":["Accounts"],"summary":"Gets a collection of transactions for account mandate","description":"This is a paged endpoint, if no parameters are supplied the first page is returned, you can add date filter by supplying in the URL.","operationId":"V2AccountsByAccountIdMandatesByMandateIdCollectionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique identifier for Direct Debit Mandate.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Optional filter by start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Optional filter by end date. Date must be formatted as YYYY-mm-DD. For example ?endDate=1990-10-04","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"},"debtorBban":{"description":"The debtors bban","type":"string"},"debtorAccountName":{"description":"The debtors account name","type":"string"},"debtorSortCode":{"description":"The debtors sort code","type":"string"},"debtorAccountNumber":{"description":"The debtors account number","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/{mandateId}/Collections":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a collection of transactions for account mandate","description":"This is a paged endpoint, if no parameters are supplied the first page is returned, you can add date filter by supplying in the URL.","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdMandatesByMandateIdCollectionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"mandateId","in":"path","description":"The unique identifier for Direct Debit Mandate.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Optional filter by start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Optional filter by end date. Date must be formatted as YYYY-mm-DD. For example ?endDate=1990-10-04","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"},"debtorBban":{"description":"The debtors bban","type":"string"},"debtorAccountName":{"description":"The debtors account name","type":"string"},"debtorSortCode":{"description":"The debtors sort code","type":"string"},"debtorAccountNumber":{"description":"The debtors account number","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}/Transactions":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a summary of all of the transactions from the specified account","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdTransactionsGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"startDateTime","in":"query","description":"The start date time (when supplied) filters the result set to include transactions where the transaction time is either equal or greater than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDateTime","in":"query","description":"The end date time (when supplied) filters the result set to include transactions where the transaction time is either equal or less than the value specified.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"paymentMethodType","in":"query","description":"The payment method type filters the results to include that payment method type.","required":false,"schema":{"type":"string","enum":["Transfer","FasterPayments","Bacs","Chaps"]}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Mandates/Unpaid":{"get":{"tags":["Accounts"],"summary":"Returns a list of all unpaid transactions belonging to an account","operationId":"V2AccountsByAccountIdMandatesUnpaidGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Transactions query start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Transactions query end date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"reference","in":"query","description":"Transaction reference","required":false,"schema":{"type":"string","minLength":1,"maxLength":18}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}/Mandates/Unpaid":{"get":{"tags":["Virtual Accounts"],"summary":"Returns a list of all unpaid transactions belonging to a virtual account","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdMandatesUnpaidGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Transactions query start date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"endDate","in":"query","description":"Transactions query end date. Date must be formatted as YYYY-mm-DD. For example ?startDate=1984-02-09","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"sun","in":"query","description":"Service user number (SUN)","required":false,"schema":{"type":"string","pattern":"^\\\\d{6}$"}},{"name":"reference","in":"query","description":"Transaction reference","required":false,"schema":{"type":"string","minLength":1,"maxLength":18}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}/Transactions/{transactionId}":{"get":{"tags":["Virtual Accounts"],"summary":"Gets the details of a specific transaction from the specified virtual account","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdTransactionsByTransactionIdGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The unique identifier for the virtual account. This can be retrieved from GET /v1/Accounts/{accountId}/Virtual","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"transactionId","in":"path","description":"The unique identifier for the transaction. This can be retrieved from GET /v1/Transactions","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual":{"get":{"tags":["Virtual Accounts"],"summary":"Lists all of the virtual accounts belonging to a given account","description":"All virtual accounts are returned including those which have been disabled. A Status field is available","operationId":"V2AccountsByAccountIdVirtualGet","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageNumber","in":"query","description":"The page number to control returned results into manageable sets. Default if not supplied: 1","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pageSize","in":"query","description":"The page size to control returned results into manageable sets. Default if not supplied: 50","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]},"post":{"tags":["Virtual Accounts"],"summary":"Creates a series of virtual accounts","operationId":"V2AccountsByAccountIdVirtualPost","parameters":[{"name":"accountId","in":"path","description":"The unique identifier for the account. This can be retrieved from GET /v1/Accounts","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that\'s used to create multiple virtual accounts","required":["virtualAccounts"],"type":"object","properties":{"virtualAccounts":{"description":"The virtual accounts that should be created","uniqueItems":false,"type":"array","items":{"description":"Represents the data required to create a virtual account","required":["ownerName","accountIdentifier"],"type":"object","properties":{"ownerName":{"description":"Virtual account owner name (account holder label)","maxLength":70,"minLength":1,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"},"accountIdentifier":{"description":"Represents ways of identifying a virtual account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"proprietaryIdentifier":{"description":"ClearBank proprietary identifier consisting of country code, sort code and account number","type":"string"}}}}}}}}}}},"responses":{"202":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"type":"object","properties":{"errors":{"type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"type":"string"},"title":{"type":"string"},"status":{"format":"int32","type":"integer"},"detail":{"type":"string"},"instance":{"type":"string"}},"additionalProperties":{"type":"object"}}},"application/problem+json":{"schema":{"type":"object","properties":{"errors":{"type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"type":"string"},"title":{"type":"string"},"status":{"format":"int32","type":"integer"},"detail":{"type":"string"},"instance":{"type":"string"}},"additionalProperties":{"type":"object"}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}},"/v2/Accounts/{accountId}/Virtual/{virtualAccountId}":{"get":{"tags":["Virtual Accounts"],"summary":"Gets a specific Virtual Account","operationId":"V2AccountsByAccountIdVirtualByVirtualAccountIdGet","parameters":[{"name":"accountId","in":"path","description":"The account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"virtualAccountId","in":"path","description":"The virtual account identifier.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents one or more accounts and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"404":{"description":"Not Found","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}}},"components":{"schemas":{"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.AccountsResponse":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.Account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.HalLink":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.Balance":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Accounts.CreateAccountRequest":{"description":"Information that is used to create a Current Account","required":["accountName","sortCode"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Accounts.PartyIdentification":{"description":"Set of elements used to identify a person or an organisation","type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.AccountResponse":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V2.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Mandates.MandatesResponse":{"description":"DirectDebitMandates by Account Response","type":"object","properties":{"directDebitMandates":{"description":"Direct Debit Mandates","uniqueItems":false,"type":"array","items":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"payerBban":{"description":"Payer Bban","type":"string"},"payerAccountNumber":{"description":"Payer Account Number","type":"string"},"payerSortCode":{"description":"Payer Sort Code","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Mandates.DirectDebitMandate":{"description":"Direct Debit Mandate","type":"object","properties":{"mandateId":{"format":"uuid","description":"Mandate Id","type":"string"},"payerName":{"description":"Payer Name","type":"string"},"payerBban":{"description":"Payer Bban","type":"string"},"payerAccountNumber":{"description":"Payer Account Number","type":"string"},"payerSortCode":{"description":"Payer Sort Code","type":"string"},"reference":{"description":"Reference","type":"string"},"serviceUserNumber":{"description":"Holds the service user number, in case the service user associated with the mandate is not one of our internal service users","type":"string"},"originatorName":{"description":"Originator Name","type":"string"},"state":{"description":"Indicates the mandate state","enum":["Active","PendingInitiation","Cancelled","Rejected","Finished","Returned"],"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Institutions.InstitutionTransactionsResponse":{"description":"Represents one or more transactions against the specified institution and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}},"ClearBank.FI.API.Versions.V2.Models.Amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.CounterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.UltimateAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.CounterpartAccountIdentification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}},"ClearBank.FI.API.Versions.V2.Models.CounterpartAccountGenericIdentification":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.CounterpartAccountGenericIdentificationScheme":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.CreateCreditTransferRequest":{"description":"Information that should be used to create a credit transfer","required":["paymentInstructions"],"type":"object","properties":{"paymentInstructions":{"description":"Details of the payments to be made","uniqueItems":false,"type":"array","items":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"schemeChannelName":{"description":"The (optional) scheme channel name","type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"Optionally, the legal entity identifier of the account","type":"object","properties":{"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.PaymentInstruction":{"description":"A payment from a single account to multiple creditors","required":["paymentInstructionIdentification","requestedExecutionDate","debtor","debtorAccount","creditTransfers"],"type":"object","properties":{"paymentInstructionIdentification":{"description":"The unique identifier for the payment instruction","maxLength":35,"minLength":1,"type":"string"},"schemeChannelName":{"description":"The (optional) scheme channel name","type":"string"},"requestedExecutionDate":{"format":"date-time","description":"The ISO 8601 date/time that the instruction should be executed at","type":"string"},"debtor":{"description":"Optionally, the legal entity identifier of the account","type":"object","properties":{"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"creditTransfers":{"description":"A series of payments that should be made from the debtor account","uniqueItems":false,"type":"array","items":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.DebtorPartyIdentifier":{"description":"Optionally, the legal entity identifier of the account","type":"object","properties":{"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.PaymentInstructionCounterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.CreditTransfer":{"description":"Represents a creditor in a payment instruction","required":["paymentIdentification","amount","creditor","creditorAccount","remittanceInformation"],"type":"object","properties":{"paymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"creditor":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"remittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.PaymentInstructionCounterpartAccountIdentification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.PaymentIdentification":{"description":"Identification of the payment instruction","required":["instructionIdentification","endToEndIdentification"],"type":"object","properties":{"instructionIdentification":{"description":"Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction","maxLength":35,"minLength":1,"type":"string"},"endToEndIdentification":{"description":"Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain","maxLength":35,"minLength":1,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.PartyIdentifier":{"description":"The name and, optionally, the legal entity identifier of the account","required":["name"],"type":"object","properties":{"name":{"description":"The name of the account holder","maxLength":140,"minLength":1,"type":"string"},"legalEntityIndentifier":{"description":"The legal entity identifier of the account holder (eg: charity number). This should be supplied if known","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.RemittanceInformation":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system","type":"object","properties":{"structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.Structured":{"description":"Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts\' receivable system, in a structured form.","type":"object","properties":{"creditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Payments.CreditorReferenceInformation":{"description":"Reference information provided by the creditor to allow the identification of the underlying documents.","type":"object","properties":{"reference":{"description":"A reference, as assigned by the creditor, to unambiguously refer to the payment transaction.","maxLength":35,"minLength":0,"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Payments.CreditTransferResponse":{"description":"The result of each payment instruction and applicable links","type":"object","properties":{"transactions":{"description":"The acceptance or rejection status of each individual payment instruction","uniqueItems":false,"type":"array","items":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Payments.PaymentInstructionResponse":{"description":"An individual response for a debtor/creditor pairing","required":["endToEndIdentification","response"],"type":"object","properties":{"endToEndIdentification":{"description":"The unique identifier for the payment instruction","type":"string"},"response":{"description":"The result of how we are going to process the individual payment instruction","enum":["Accepted","AccountDisabled","InsufficientFunds","InvalidAccount","InvalidCurrency","Rejected","DebitPaymentDisabled"],"type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.AccountTransactionsResponse":{"description":"Represents one or more transactions against the specified account and associated hypermedia links","required":["transactions"],"type":"object","properties":{"transactions":{"description":"A collection of the transactions against the specified account","uniqueItems":false,"type":"array","items":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Accounts.AccountTransactionResponse":{"description":"Represents a transaction against the specified account and associated hypermedia links","required":["transaction"],"type":"object","properties":{"transaction":{"description":"Represents information regarding a transaction","required":["amount","counterpartAccount","debitCreditCode","endToEndIdentifier","transactionId","transactionReference","transactionTime","status"],"type":"object","properties":{"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"counterpartAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debitCreditCode":{"description":"The direction of the monies","enum":["CRDT","DBIT"],"type":"string"},"endToEndIdentifier":{"description":"The scheme specific end to end transactional identifier","type":"string"},"transactionId":{"description":"The unique identifier for this transaction","type":"string"},"transactionReference":{"description":"The user supplied reference for the transaction","type":"string"},"transactionTime":{"format":"date-time","description":"The date/time the transaction occurred relative to UTC","type":"string"},"status":{"description":"The current status of the transaction","enum":["ACCP","ACSC","ACSP","ACTC","ACWC","PART","PDNG","RCVD","RJCT"],"type":"string"},"ultimateBeneficiaryAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ultimateRemitterAccount":{"description":"Represents a summary of a given ultimate account","required":["id"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.Mandates.MandateTransactionsResponse":{"description":"List of transactions","type":"object","properties":{"mandateTransactions":{"description":"Array of transactions","uniqueItems":false,"type":"array","items":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"},"debtorBban":{"description":"The debtors bban","type":"string"},"debtorAccountName":{"description":"The debtors account name","type":"string"},"debtorSortCode":{"description":"The debtors sort code","type":"string"},"debtorAccountNumber":{"description":"The debtors account number","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.Mandates.MandateTransaction":{"description":"Transaction associated with mandate","type":"object","properties":{"transactionId":{"format":"uuid","description":"Unique transaction ID","type":"string"},"date":{"format":"date-time","description":"Date of transaction settled","type":"string"},"amount":{"description":"Indicates the amount and the currency used in a given transaction or account balance","required":["instructedAmount","currency"],"type":"object","properties":{"instructedAmount":{"format":"double","description":"Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party","type":"number"},"currency":{"description":"The currency code must be a valid active currency code, not yet withdrawn on the day the message containing the currency is exchanged. Valid active currency codes are registered with the ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the day the message containing the Currency is exchanged","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}}},"status":{"description":"Status of transaction","type":"string"},"reference":{"description":"Reference of transaction","type":"string"},"debtorBban":{"description":"The debtors bban","type":"string"},"debtorAccountName":{"description":"The debtors account name","type":"string"},"debtorSortCode":{"description":"The debtors sort code","type":"string"},"debtorAccountNumber":{"description":"The debtors account number","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.GetAllUnpaidTransactionsResponse":{"description":"Returns list of all unpaid transactions for the specified criteria/request","type":"object","properties":{"unpaidTransactions":{"description":"List of unpaid transactions","uniqueItems":false,"type":"array","items":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.UnpaidTransaction":{"description":"Unpaid transaction info","type":"object","properties":{"pendingTransactionId":{"format":"uuid","description":"The internal identifier of the pending BACS credit transaction.","type":"string"},"transactionType":{"description":"The type of pending BACS credit transaction.","enum":["DirectCredit","DirectDebit","DirectDebitIndemnityClaim"],"type":"string"},"transactionStatus":{"description":"The status of the transaction.","enum":["Pending","Rejected","FailedInternalValidation","Processed","Returned","Recalled","ContraNotReceived"],"type":"string"},"creditorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"debtorAccount":{"description":"Information about the counterpart in a given transaction","required":["identification"],"type":"object","properties":{"identification":{"description":"The identifible information of an account","type":"object","properties":{"iban":{"description":"The IBAN number of the account","type":"string"},"accountName":{"description":"The account name","type":"string"},"sortCode":{"description":"The accounts sort code","type":"string"},"accountNumber":{"description":"The account number","type":"string"},"reference":{"description":"The payment reference","type":"string"},"other":{"description":"Unique identification of an account, as assigned by the account servicer, using an identification scheme","required":["identification","schemeName"],"type":"object","properties":{"identification":{"description":"Identification assigned by an institution","maxLength":34,"minLength":1,"type":"string"},"schemeName":{"description":"Name of the identification scheme","type":"object","properties":{"code":{"description":"Name of the identification scheme, in a coded form as published in an external list","enum":["BBAN","CUID","UPIC"],"type":"string"},"proprietary":{"description":"Name of the identification scheme, in a free text form","maxLength":35,"minLength":1,"type":"string"}}},"issuer":{"description":"The name of the entity that assigns the identification","maxLength":35,"minLength":0,"type":"string"}}}}}}},"amount":{"format":"double","description":"The transaction amount.","type":"number"},"paymentReference":{"description":"The actual payment identifier.","type":"string"},"processingDate":{"format":"date-time","description":"The date that transaction is processed.","type":"string"},"settlementDate":{"format":"date-time","description":"The date that we settle transactions internally.","type":"string"},"transferredDate":{"format":"date-time","description":"The date that funds are transferred.","type":"string"},"serviceUserNumber":{"description":"The service user number for the debtor on a Direct Credit.","type":"string"},"transactionCode":{"description":"The transaction code.","type":"string"},"isReturn":{"description":"Indicates the pending transaction is the result of an existing cash transaction.","type":"boolean"},"hasReturn":{"description":"Indicates the pending transaction has a return transaction.","type":"boolean"},"reasonCode":{"description":"The reason code if any.","type":"string"},"collectionReference":{"description":"The collection reference.","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.VirtualAccounts.VirtualAccountsResponse":{"description":"Represents one or more accounts and associated hypermedia links","required":["accounts"],"type":"object","properties":{"accounts":{"description":"A collection of all accounts belonging to the institution associated with the API token.","uniqueItems":false,"type":"array","items":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V2.Models.Response.VirtualAccounts.VirtualAccount":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Binding.VirtualAccounts.CreateVirtualAccountsRequest":{"description":"Information that\'s used to create multiple virtual accounts","required":["virtualAccounts"],"type":"object","properties":{"virtualAccounts":{"description":"The virtual accounts that should be created","uniqueItems":false,"type":"array","items":{"description":"Represents the data required to create a virtual account","required":["ownerName","accountIdentifier"],"type":"object","properties":{"ownerName":{"description":"Virtual account owner name (account holder label)","maxLength":70,"minLength":1,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"},"accountIdentifier":{"description":"Represents ways of identifying a virtual account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"proprietaryIdentifier":{"description":"ClearBank proprietary identifier consisting of country code, sort code and account number","type":"string"}}}}}}}},"ClearBank.FI.API.Versions.V2.Models.Binding.VirtualAccounts.CreateVirtualAccount":{"description":"Represents the data required to create a virtual account","required":["ownerName","accountIdentifier"],"type":"object","properties":{"ownerName":{"description":"Virtual account owner name (account holder label)","maxLength":70,"minLength":1,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"},"accountIdentifier":{"description":"Represents ways of identifying a virtual account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"proprietaryIdentifier":{"description":"ClearBank proprietary identifier consisting of country code, sort code and account number","type":"string"}}}}},"ClearBank.FI.API.Versions.V2.Models.VirtualAccountIdentifier":{"description":"Represents ways of identifying a virtual account","type":"object","properties":{"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"proprietaryIdentifier":{"description":"ClearBank proprietary identifier consisting of country code, sort code and account number","type":"string"}}},"ClearBank.FI.API.Versions.V2.Models.Response.VirtualAccounts.VirtualAccountsCreationAcceptedResponse":{"description":"Provides the necessary links that are required after a virtual account has been accepted for processing","type":"object","properties":{"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"Microsoft.AspNetCore.Mvc.ValidationProblemDetails":{"type":"object","properties":{"errors":{"type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"type":"string"},"title":{"type":"string"},"status":{"format":"int32","type":"integer"},"detail":{"type":"string"},"instance":{"type":"string"}},"additionalProperties":{"type":"object"}},"ClearBank.FI.API.Versions.V2.Models.Response.VirtualAccounts.VirtualAccountResponse":{"description":"Represents one or more accounts and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given Virtual Account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"status":{"description":"Status","enum":["Enabled","Disabled"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"3.0":{"openapi":"3.0.0","info":{"version":"3.0","title":"ClearBank Financial Institutions API","description":"The ClearBank® API is a REST based API that can be connected to in order to leverage ClearBank®’s products and banking services.\\r\\n\\r\\nThis ClearBank® Financial Institution API area in Swagger provides Financial Institutions with the required API endpoint information and message schema.\\r\\n\\r\\nFor the necessary information in order for Financial Institutions to successfully connect to ClearBank®’s API, refer to the Knowledge Centre.\\r\\n\\r\\nAll information is provided to you on a confidential basis and shall remain the property of ClearBank Ltd (including ownership rights in all intellectual property). All information is provided \\"as is\\" and without any implied warranty, representation, condition or otherwise, regarding its accuracy or completeness.\\r\\n\\r\\nCopyright ClearBank Ltd. Authorised by the Prudential Regulation Authority and regulated by the Financial Conduct Authority and the Prudential Regulation Authority (Financial Services Register number: 754568). Registered Address: Level 29, 30 St. Mary Axe, London, England EC3A 8EP.","contact":{"name":"API Support","url":"https://clear.bank","email":"fiapisupport@clear.bank"}},"paths":{"/v3/Accounts":{"post":{"tags":["Accounts"],"summary":"Creates an account with the specified name","description":"Currently, this endpoint only supports the creation of current accounts\\r\\n            \\r\\nAccountName must: not be null, only white space, only contain letters, numbers and the following special characters: - ,.","operationId":"V3AccountsPost","parameters":[{"name":"Authorization","in":"header","description":"Your API Token, retrieved from the web portal","required":true,"schema":{"type":"string"}},{"name":"DigitalSignature","in":"header","description":"Signed hash of the body of the request. The hash is signed by your private key","required":true,"schema":{"type":"string"}},{"name":"X-Request-Id","in":"header","description":"A unique identifier for the request","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"description":"Information that is used to create a Current Account","required":["accountName","owner","sortCode","usageType"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","required":["name"],"type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"},"usageType":{"description":"The specified usage type for the request","enum":["YourFunds","SegregatedDesignated","SegregatedPooled"],"type":"string"}}}}}},"responses":{"201":{"description":"Success","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}},"application/problem+json":{"schema":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}}}}},"400":{"description":"Bad Request","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V3.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}},"application/problem+json":{"schema":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V3.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}},"403":{"description":"Forbidden","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"409":{"description":"Conflict","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"500":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}},"503":{"description":"Server Error","headers":{"X-Correlation-Id":{"description":"A unique identifier which should be referenced in any issue with any API call","schema":{"type":"string"}}}}},"security":[]}}},"components":{"schemas":{"ClearBank.FI.API.Versions.V3.Models.Binding.Accounts.CreateAccountRequest":{"description":"Information that is used to create a Current Account","required":["accountName","owner","sortCode","usageType"],"type":"object","properties":{"accountName":{"description":"The friendly name that should be associated with the account","maxLength":70,"minLength":1,"pattern":"^[a-zA-Z0-9\\\\- ,.]*$","type":"string"},"owner":{"description":"Set of elements used to identify a person or an organisation","required":["name"],"type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"sortCode":{"description":"The sort code these accounts should be created under","pattern":"^\\\\d{6}$","type":"string"},"usageType":{"description":"The specified usage type for the request","enum":["YourFunds","SegregatedDesignated","SegregatedPooled"],"type":"string"}}},"ClearBank.FI.API.Versions.V3.Models.Binding.Accounts.PartyIdentification":{"description":"Set of elements used to identify a person or an organisation","required":["name"],"type":"object","properties":{"name":{"description":"Name by which a party is known and which is usually used to identify that party","maxLength":140,"minLength":0,"pattern":"^[^<!&|$*;^%_>`#@=\\"~\\\\[\\\\]{}\\\\\\\\]*$","type":"string"}}},"ClearBank.FI.API.Versions.V3.Models.Response.Accounts.AccountResponse":{"description":"Represents a single account and associated hypermedia links","required":["account"],"type":"object","properties":{"account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"halLinks":{"description":"Hypermedia links","uniqueItems":false,"type":"array","items":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}}}}},"ClearBank.FI.API.Versions.V3.Models.Response.Accounts.Account":{"description":"Represents a summary of a given account","required":["id","name","type","currency"],"type":"object","properties":{"id":{"description":"The unique identifier for the account","type":"string"},"name":{"description":"The friendly name of the account","type":"string"},"label":{"description":"The account holder label for the account","type":"string"},"type":{"description":"Specifies the type of the account","enum":["CACC"],"type":"string"},"currency":{"description":"Currencies used for the account","uniqueItems":false,"type":"array","items":{"enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"}},"balances":{"description":"Balances associated with the account in the given currencies","uniqueItems":false,"type":"array","items":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}}},"iban":{"description":"The IBAN identifier associated with the account","type":"string"},"bban":{"description":"The BBAN identifier associated with the account","type":"string"},"upic":{"description":"The Universal Payment Identification Code (UPIC) associated with the account","type":"string"},"cuid":{"description":"The CHIPS Universal Identifier associated with the account","type":"string"}}},"ClearBank.FI.API.Versions.V3.Models.Response.HalLink":{"description":"A single hypermedia link","required":["name","href"],"type":"object","properties":{"name":{"description":"The named link type","type":"string"},"href":{"description":"URI to be used","type":"string"},"templated":{"description":"Specifies \\"true\\" if href is a URI template, i.e. with parameters. Otherwise, this property is absent or set to false","type":"boolean"}}},"ClearBank.FI.API.Versions.V3.Models.Response.Accounts.Balance":{"description":"A summary of the balance of an account, in a specific currency","required":["name","amount","currency","status"],"type":"object","properties":{"name":{"description":"The name of the account","type":"string"},"amount":{"format":"double","description":"The amount of monies, relative to the specified currency, in the account","type":"number"},"currency":{"description":"The ISO 4217 currency code of the account","enum":["ALL","DZD","ARS","AUD","BSD","BHD","BDT","AMD","BBD","BMD","BTN","BOB","BWP","BZD","SBD","BND","MMK","BIF","KHR","CAD","CVE","KYD","LKR","CLP","CNY","COP","KMF","CRC","HRK","CUP","CZK","DKK","DOP","SVC","ETB","ERN","FKP","FJD","DJF","GMD","GIP","GTQ","GNF","GYD","HTG","HNL","HKD","HUF","ISK","INR","IDR","IRR","IQD","ILS","JMD","JPY","KZT","JOD","KES","KPW","KRW","KWD","KGS","LAK","LBP","LSL","LRD","LYD","MOP","MWK","MYR","MVR","MUR","MXN","MNT","MDL","MAD","OMR","NAD","NPR","ANG","AWG","VUV","NZD","NIO","NGN","NOK","PKR","PAB","PGK","PYG","PEN","PHP","QAR","RUB","RWF","SHP","SAR","SCR","SLL","SGD","VND","SOS","ZAR","SSP","SZL","SEK","CHF","SYP","THB","TOP","TTD","AED","TND","UGX","MKD","EGP","GBP","TZS","USD","UYU","UZS","WST","YER","TWD","MRU","STN","CUC","ZWL","BYN","TMT","GHS","VEF","SDG","UYI","RSD","MZN","AZN","RON","CHE","CHW","TRY","XAF","XCD","XOF","XPF","XBA","XBB","XBC","XBD","XAU","XDR","XAG","XPT","XTS","XPD","XUA","ZMW","SRD","MGA","COU","AFN","TJS","AOA","BGN","CDF","BAM","EUR","MXV","UAH","GEL","BOV","PLN","BRL","CLF","XSU","USN","XXX"],"type":"string"},"status":{"description":"The type of balance that is being reported","enum":["CLBD","XPCD","OTHR","VALU"],"type":"string"},"lastCommittedTransaction":{"description":"The reference of the last committed transaction against the account","type":"string"}}},"ClearBank.FI.API.Versions.V3.Models.Response.ValidationProblemDetails":{"description":"A ClearBank.FI.API.Versions.V1.Models.Response.ProblemDetails for validation errors.","required":["type","title"],"type":"object","properties":{"errors":{"description":"Gets or sets the validation errors associated with this instance of ClearBank.FI.API.Versions.V3.Models.Response.ValidationProblemDetails.","type":"object","additionalProperties":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"readOnly":true},"type":{"description":"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\\r\\ndereferenced, it provides human-readable documentation for the problem type\\r\\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\\r\\n\\"about:blank\\".","type":"string"},"title":{"description":"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence\\r\\nof the problem, except for purposes of localization(e.g., using proactive content negotiation;\\r\\nsee[RFC7231], Section 3.4).","type":"string"},"status":{"format":"int32","description":"The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.","type":"integer"},"detail":{"description":"A human-readable explanation specific to this occurrence of the problem.","type":"string"},"instance":{"description":"A URI reference that identifies the specific occurrence of the problem.It may or may not yield further information if dereferenced.","type":"string"}}}}}}}')},"5yr3":function(e,t,n){"use strict";n("bWfx"),n("V+eJ"),n("hHhE");var i=function(e){return e=e||Object.create(null),{on:function(t,n){(e[t]||(e[t]=[])).push(n)},off:function(t,n){e[t]&&e[t].splice(e[t].indexOf(n)>>>0,1)},emit:function(t,n){(e[t]||[]).slice().map((function(e){e(n)})),(e["*"]||[]).slice().map((function(e){e(t,n)}))}}}();t.a=i},"61Ie":function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return c})),n.d(t,"h",(function(){return d})),n.d(t,"d",(function(){return p})),n.d(t,"k",(function(){return u})),n.d(t,"f",(function(){return l})),n.d(t,"j",(function(){return h})),n.d(t,"g",(function(){return m})),n.d(t,"i",(function(){return f})),n.d(t,"e",(function(){return y}));var i=n("vOnD"),r=n("VdAu"),o=n("SlEa"),a=i.b.div.withConfig({componentId:"tlpnh4-0"})([".el-collapse{margin-bottom:0;}.el-icon-arrow-right{transition:transform 0.3s;}.el-collapse-item__header,.el-collapse-item__wrap,.el-collapse{border:none;}.el-collapse-item{> .el-collapse-item__header{display:flex;flex-direction:row-reverse;height:auto;margin-top:10px;padding:0 2px;line-height:1;font-family:",";font-weight:600;font-size:14px;color:",';> .el-collapse-item__header__arrow{margin-left:15px;margin-right:auto;font-family:cb-icon !important;&:before{content:"\\EA13";display:block;transform:rotate(0);transition:all 0.25s;}}}&.is-active > .el-collapse-item__header{margin-bottom:15px;> .el-collapse-item__header__arrow:before{transform:rotate(180deg);}}&.is-active > .el-collapse-item__header{&:before{content:"";position:absolute;left:-25px;right:0;height:0;top:29px;}}}.el-collapse-item{&__content{padding:0;}&__header{background-color:transparent;}}'],o.d.body,o.b.billionaireBlue),s=i.b.ul.withConfig({componentId:"tlpnh4-1"})(["position:relative;list-style:none;margin:0 !important;padding:0 !important;border:",";border-radius:5px;li:first-of-type{margin-top:0;border-top:0;}li:last-of-type{margin-bottom:0;}"],(function(e){return e.border?"1px solid #e6e6e6":"none"})),c=Object(i.b)(r.b).withConfig({componentId:"tlpnh4-2"})(["margin-bottom:20px !important;color:",";font-weight:600;"],o.b.businessBlue),d=i.b.span.withConfig({componentId:"tlpnh4-3"})(["font-weight:400;"]),p=i.b.li.withConfig({componentId:"tlpnh4-4"})(["padding:15px 0 15px 20px;",""],(function(e){return!e.nested&&"\n    border-top: dashed 1px "+o.b.brandGray+";\n  "})),u=i.b.span.withConfig({componentId:"tlpnh4-5"})(["font-size:13px;color:",";font-family:",";"],o.b.brandGreenDark,o.d.monospace),l=i.b.span.withConfig({componentId:"tlpnh4-6"})(["font-size:15px;font-weight:bold;font-family:",";text-transform:capitalize;color:",";"],o.d.monospace,o.b.businessBlue),h=i.b.span.withConfig({componentId:"tlpnh4-7"})(["font-size:24px;font-family:",";color:",";"],o.d.body,o.b.brandSecondaryDarker),m=i.b.span.withConfig({componentId:"tlpnh4-8"})(["font-size:13px;color:",";font-family:",";text-transform:capitalize;"],o.b.brandGrayDarker,o.d.monospace),f=i.b.span.withConfig({componentId:"tlpnh4-9"})(["font-size:13px;text-transform:uppercase;color:",";font-family:",";"],o.b.richRed,o.d.monospace),y=i.b.p.withConfig({componentId:"tlpnh4-10"})(["margin-bottom:0;font-size:16px;word-wrap:break-word;"])},"69bn":function(e,t,n){var i=n("y3w9"),r=n("2OiF"),o=n("K0xU")("species");e.exports=function(e,t){var n,a=i(e).constructor;return void 0===a||null==(n=i(a)[o])?t:r(n)}},"6FMO":function(e,t,n){var i=n("0/R4"),r=n("EWmC"),o=n("K0xU")("species");e.exports=function(e){var t;return r(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!r(t.prototype)||(t=void 0),i(t)&&null===(t=t[o])&&(t=void 0)),void 0===t?Array:t}},"6VaU":function(e,t,n){"use strict";var i=n("XKFU"),r=n("xF/b"),o=n("S/j/"),a=n("ne8i"),s=n("2OiF"),c=n("zRwo");i(i.P,"Array",{flatMap:function(e){var t,n,i=o(this);return s(e),t=a(i.length),n=c(i,0),r(n,i,i,t,0,1,e,arguments[1]),n}}),n("nGyu")("flatMap")},"7Bs9":function(e,t,n){"use strict";n.r(t);var i=n("q1tI"),r=n("N6Kw"),o=n("qKvR"),a=function(e){var t=e.colour,n=e.children;return Object(o.b)(r.a,{color:t},n)};t.default={Callout:a,React:i}},"7VC1":function(e,t,n){"use strict";var i=n("XKFU"),r=n("Lgjv"),o=n("ol8x"),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);i(i.P+i.F*a,"String",{padEnd:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},"7hJ6":function(e,t,n){"use strict";var i=n("5NKs"),r=i(n("444f")),o=i(n("IVHb"));t.ScrollContainer=o.default,t.ScrollContext=r.default},"7ljp":function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return p})),n.d(t,"MDXProvider",(function(){return h})),n.d(t,"mdx",(function(){return y})),n.d(t,"useMDXComponents",(function(){return l})),n.d(t,"withMDXComponents",(function(){return u}));n("V+eJ"),n("WLL4"),n("jm62"),n("8+KV"),n("0l/t"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("HAE/");var i=n("q1tI"),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),u=function(e){return function(t){var n=l(t.components);return r.a.createElement(e,a({},t,{components:n}))}},l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},h=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=l(n),u=i,h=p["".concat(a,".").concat(u)]||p[u]||m[u]||o;return n?r.a.createElement(h,c({ref:t},s,{components:n})):r.a.createElement(h,c({ref:t},s))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var d=2;d<o;d++)a[d]=n[d];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},"8+KV":function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(0),o=n("LyE8")([].forEach,!0);i(i.P+i.F*!o,"Array",{forEach:function(e){return r(this,e,arguments[1])}})},"84bF":function(e,t,n){"use strict";n("OGtf")("small",(function(e){return function(){return e(this,"small","","")}}))},"8MEG":function(e,t,n){"use strict";var i=n("2OiF"),r=n("0/R4"),o=n("MfQN"),a=[].slice,s={},c=function(e,t,n){if(!(t in s)){for(var i=[],r=0;r<t;r++)i[r]="a["+r+"]";s[t]=Function("F,a","return new F("+i.join(",")+")")}return s[t](e,n)};e.exports=Function.bind||function(e){var t=i(this),n=a.call(arguments,1),s=function(){var i=n.concat(a.call(arguments));return this instanceof s?c(t,i.length,i):o(t,i,e)};return r(t.prototype)&&(s.prototype=t.prototype),s}},"8Y+z":function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){return e===e.window?e:9===e.nodeType&&(e.defaultView||e.parentWindow)},e.exports=t.default},"8a7r":function(e,t,n){"use strict";var i=n("hswa"),r=n("RjD/");e.exports=function(e,t,n){t in e?i.f(e,t,r(0,n)):e[t]=n}},"8o2o":function(e,t,n){"use strict";function i(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,"a",(function(){return i}))},"8oxB":function(e,t){var n,i,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{i="function"==typeof clearTimeout?clearTimeout:a}catch(e){i=a}}();var c,d=[],p=!1,u=-1;function l(){p&&c&&(p=!1,c.length?d=c.concat(d):u=-1,d.length&&h())}function h(){if(!p){var e=s(l);p=!0;for(var t=d.length;t;){for(c=d,d=[];++u<t;)c&&c[u].run();u=-1,t=d.length}c=null,p=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===a||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new m(e,t)),1!==d.length||p||s(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},"91GP":function(e,t,n){var i=n("XKFU");i(i.S+i.F,"Object",{assign:n("czNK")})},"94VI":function(e,t){t.polyfill=function(e){return e}},"9AAn":function(e,t,n){"use strict";var i=n("wmvG"),r=n("s5qY");e.exports=n("4LiD")("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=i.getEntry(r(this,"Map"),e);return t&&t.v},set:function(e,t){return i.def(r(this,"Map"),0===e?0:e,t)}},i,!0)},"9Hrx":function(e,t,n){"use strict";function i(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",(function(){return i}))},"9VmF":function(e,t,n){"use strict";var i=n("XKFU"),r=n("ne8i"),o=n("0sh+"),a="".startsWith;i(i.P+i.F*n("UUeW")("startsWith"),"String",{startsWith:function(e){var t=o(this,e,"startsWith"),n=r(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),i=String(e);return a?a.call(t,i,n):t.slice(n,n+i.length)===i}})},"9XZr":function(e,t,n){"use strict";var i=n("XKFU"),r=n("Lgjv"),o=n("ol8x"),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);i(i.P+i.F*a,"String",{padStart:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},"9Xx/":function(e,t,n){"use strict";n.r(t),n.d(t,"globalHistory",(function(){return c})),n.d(t,"navigate",(function(){return d})),n.d(t,"createHistory",(function(){return o})),n.d(t,"createMemorySource",(function(){return a}));n("KKXr"),n("V+eJ"),n("8+KV"),n("VRzm"),n("Btvt"),n("eM6i"),n("pIFo"),n("0l/t"),n("OG14"),n("91GP");var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r=function(e){var t=e.location,n=t.search,i=t.hash,r=t.href,o=t.origin,a=t.protocol,c=t.host,d=t.hostname,p=t.port,u=e.location.pathname;!u&&r&&s&&(u=new URL(r).pathname);return{pathname:encodeURI(decodeURI(u)),search:n,hash:i,href:r,origin:o,protocol:a,host:c,hostname:d,port:p,state:e.history.state,key:e.history.state&&e.history.state.key||"initial"}},o=function(e,t){var n=[],o=r(e),a=!1,s=function(){};return{get location(){return o},get transitioning(){return a},_onTransitionComplete:function(){a=!1,s()},listen:function(t){n.push(t);var i=function(){o=r(e),t({location:o,action:"POP"})};return e.addEventListener("popstate",i),function(){e.removeEventListener("popstate",i),n=n.filter((function(e){return e!==t}))}},navigate:function(t){var c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=c.state,p=c.replace,u=void 0!==p&&p;if("number"==typeof t)e.history.go(t);else{d=i({},d,{key:Date.now()+""});try{a||u?e.history.replaceState(d,null,t):e.history.pushState(d,null,t)}catch(h){e.location[u?"replace":"assign"](t)}}o=r(e),a=!0;var l=new Promise((function(e){return s=e}));return n.forEach((function(e){return e({location:o,action:"PUSH"})})),l}}},a=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=e.indexOf("?"),n={pathname:t>-1?e.substr(0,t):e,search:t>-1?e.substr(t):""},i=0,r=[n],o=[null];return{get location(){return r[i]},addEventListener:function(e,t){},removeEventListener:function(e,t){},history:{get entries(){return r},get index(){return i},get state(){return o[i]},pushState:function(e,t,n){var a=n.split("?"),s=a[0],c=a[1],d=void 0===c?"":c;i++,r.push({pathname:s,search:d.length?"?"+d:d}),o.push(e)},replaceState:function(e,t,n){var a=n.split("?"),s=a[0],c=a[1],d=void 0===c?"":c;r[i]={pathname:s,search:d},o[i]=e},go:function(e){var t=i+e;t<0||t>o.length-1||(i=t)}}}},s=!("undefined"==typeof window||!window.document||!window.document.createElement),c=o(s?window:a()),d=c.navigate},"9gX7":function(e,t){e.exports=function(e,t,n,i){if(!(e instanceof t)||void 0!==i&&i in e)throw TypeError(n+": incorrect invocation!");return e}},"9uj6":function(e,t,n){"use strict";var i=n("4qRI"),r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=Object(i.a)((function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91}));t.a=o},A5AN:function(e,t,n){"use strict";var i=n("AvRE")(!0);e.exports=function(e,t,n){return t+(n?i(e,t).length:1)}},Afnz:function(e,t,n){"use strict";var i=n("LQAc"),r=n("XKFU"),o=n("KroJ"),a=n("Mukb"),s=n("hPIQ"),c=n("QaDb"),d=n("fyDq"),p=n("OP3Y"),u=n("K0xU")("iterator"),l=!([].keys&&"next"in[].keys()),h=function(){return this};e.exports=function(e,t,n,m,f,y,g){c(n,t,m);var b,A,D,C=function(e){if(!l&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},T=t+" Iterator",I="values"==f,R=!1,S=e.prototype,N=S[u]||S["@@iterator"]||f&&S[f],P=N||C(f),v=f?I?C("entries"):P:void 0,B="Array"==t&&S.entries||N;if(B&&(D=p(B.call(new e)))!==Object.prototype&&D.next&&(d(D,T,!0),i||"function"==typeof D[u]||a(D,u,h)),I&&N&&"values"!==N.name&&(R=!0,P=function(){return N.call(this)}),i&&!g||!l&&!R&&S[u]||a(S,u,P),s[t]=P,s[T]=h,f)if(b={values:I?P:C("values"),keys:y?P:C("keys"),entries:v},g)for(A in b)A in S||o(S,A,b[A]);else r(r.P+r.F*(l||R),t,b);return b}},AphP:function(e,t,n){"use strict";var i=n("XKFU"),r=n("S/j/"),o=n("apmT");i(i.P+i.F*n("eeVq")((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=r(this),n=o(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},AvRE:function(e,t,n){var i=n("RYi7"),r=n("vhPU");e.exports=function(e){return function(t,n){var o,a,s=String(r(t)),c=i(n),d=s.length;return c<0||c>=d?e?"":void 0:(o=s.charCodeAt(c))<55296||o>56319||c+1===d||(a=s.charCodeAt(c+1))<56320||a>57343?e?s.charAt(c):o:e?s.slice(c,c+2):a-56320+(o-55296<<10)+65536}}},BfwJ:function(e,t,n){"use strict";n.r(t),n.d(t,"useMDXScope",(function(){return a})),n.d(t,"MDXScopeProvider",(function(){return s}));var i=n("q1tI"),r=n.n(i),o=Object(i.createContext)({}),a=function(e){var t=Object(i.useContext)(o);return e||t},s=function(e){var t=e.__mdxScope,n=e.children;return r.a.createElement(o.Provider,{value:t},n)}},Bp9Y:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var i=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=i,e.exports=t.default},Btvt:function(e,t,n){"use strict";var i=n("I8a+"),r={};r[n("K0xU")("toStringTag")]="z",r+""!="[object z]"&&n("KroJ")(Object.prototype,"toString",(function(){return"[object "+i(this)+"]"}),!0)},"C/va":function(e,t,n){"use strict";var i=n("y3w9");e.exports=function(){var e=i(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},CkkT:function(e,t,n){var i=n("m0Pp"),r=n("Ymqv"),o=n("S/j/"),a=n("ne8i"),s=n("zRwo");e.exports=function(e,t){var n=1==e,c=2==e,d=3==e,p=4==e,u=6==e,l=5==e||u,h=t||s;return function(t,s,m){for(var f,y,g=o(t),b=r(g),A=i(s,m,3),D=a(b.length),C=0,T=n?h(t,D):c?h(t,0):void 0;D>C;C++)if((l||C in b)&&(y=A(f=b[C],C,g),e))if(n)T[C]=y;else if(y)switch(e){case 3:return!0;case 5:return f;case 6:return C;case 2:T.push(f)}else if(p)return!1;return u?-1:d||p?p:T}}},CnBM:function(e,t,n){"use strict";n("91GP"),n("VRzm"),n("XfO3"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("8+KV"),n("LK8F"),n("/SS/"),n("hHhE"),n("rE2o"),n("ioFf");var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=n("q1tI"),c=n("17x9"),d=[],p=[];function u(e){var t=e(),n={loading:!0,loaded:null,error:null};return n.promise=t.then((function(e){return n.loading=!1,n.loaded=e,e})).catch((function(e){throw n.loading=!1,n.error=e,e})),n}function l(e){var t={loading:!1,loaded:{},error:null},n=[];try{Object.keys(e).forEach((function(i){var r=u(e[i]);r.loading?t.loading=!0:(t.loaded[i]=r.loaded,t.error=r.error),n.push(r.promise),r.promise.then((function(e){t.loaded[i]=e})).catch((function(e){t.error=e}))}))}catch(i){t.error=i}return t.promise=Promise.all(n).then((function(e){return t.loading=!1,e})).catch((function(e){throw t.loading=!1,e})),t}function h(e,t){return s.createElement((n=e)&&n.__esModule?n.default:n,t);var n}function m(e,t){var u,l;if(!t.loading)throw new Error("react-loadable requires a `loading` component");var m=Object.assign({loader:null,loading:null,delay:200,timeout:null,render:h,webpack:null,modules:null},t),f=null;function y(){return f||(f=e(m.loader)),f.promise}return d.push(y),"function"==typeof m.webpack&&p.push((function(){if(e=m.webpack,"object"===i(n.m)&&e().every((function(e){return void 0!==e&&void 0!==n.m[e]})))return y();var e})),l=u=function(t){function n(i){r(this,n);var a=o(this,t.call(this,i));return a.retry=function(){a.setState({error:null,loading:!0,timedOut:!1}),f=e(m.loader),a._loadModule()},y(),a.state={error:f.error,pastDelay:!1,timedOut:!1,loading:f.loading,loaded:f.loaded},a}return a(n,t),n.preload=function(){return y()},n.prototype.componentWillMount=function(){this._mounted=!0,this._loadModule()},n.prototype._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(m.modules)&&m.modules.forEach((function(t){e.context.loadable.report(t)})),f.loading){"number"==typeof m.delay&&(0===m.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){e.setState({pastDelay:!0})}),m.delay)),"number"==typeof m.timeout&&(this._timeout=setTimeout((function(){e.setState({timedOut:!0})}),m.timeout));var t=function(){e._mounted&&(e.setState({error:f.error,loaded:f.loaded,loading:f.loading}),e._clearTimeouts())};f.promise.then((function(){t()})).catch((function(e){t()}))}},n.prototype.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},n.prototype._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},n.prototype.render=function(){return this.state.loading||this.state.error?s.createElement(m.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?m.render(this.state.loaded,this.props):null},n}(s.Component),u.contextTypes={loadable:c.shape({report:c.func.isRequired})},l}function f(e){return m(u,e)}f.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return m(l,e)};var y=function(e){function t(){return r(this,t),o(this,e.apply(this,arguments))}return a(t,e),t.prototype.getChildContext=function(){return{loadable:{report:this.props.report}}},t.prototype.render=function(){return s.Children.only(this.props.children)},t}(s.Component);function g(e){for(var t=[];e.length;){var n=e.pop();t.push(n())}return Promise.all(t).then((function(){if(e.length)return g(e)}))}y.propTypes={report:c.func.isRequired},y.childContextTypes={loadable:c.shape({report:c.func.isRequired}).isRequired},f.Capture=y,f.preloadAll=function(){return new Promise((function(e,t){g(d).then(e,t)}))},f.preloadReady=function(){return new Promise((function(e,t){g(p).then(e,e)}))},e.exports=f},CnhX:function(e,t,n){"use strict";n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("9VmF");var i=n("q1tI"),r=n("3Mpw"),o=n("SoeO"),a=n("CnBM"),s=n.n(a),c=n("qKvR"),d=function(e){Object.assign({},e);return Object(c.b)("div",null)};n("dJPS");function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var u=s()({loader:function(){return Promise.all([n.e(2),n.e(0),n.e(10)]).then(n.bind(null,"dKp2"))},loading:d});t.a=function(e){var t=e.children;return function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["children"])["react-live"]?Object(c.b)(u,{code:t}):Object(c.b)(r.a,p({},r.b,{code:t,language:"javascript",theme:o.a}),(function(e){var t=e.className,n=e.style,r=e.tokens,o=e.getLineProps,a=e.getTokenProps;return Object(c.b)("pre",{className:t+" pre",style:n,p:3},function(e){var t=e.length;if(0===t)return e;var n=e[t-1];return 1===n.length&&n[0].empty?e.slice(0,t-1):e}(r).map((function(e,t){var n={},r=!1;e[0]&&e[0].content.length&&"+"===e[0].content[0]?(n={backgroundColor:"rgba(76, 175, 80, 0.2)"},r=!0):e[0]&&e[0].content.length&&"-"===e[0].content[0]?(n={backgroundColor:"rgba(244, 67, 54, 0.2)"},r=!0):e[0]&&""===e[0].content&&e[1]&&"+"===e[1].content?(n={backgroundColor:"rgba(76, 175, 80, 0.2)"},r=!0):e[0]&&""===e[0].content&&e[1]&&"-"===e[1].content?(n={backgroundColor:"rgba(244, 67, 54, 0.2)"},r=!0):e[0]&&""===e[0].content&&e[1]&&"+"===e[1].content?(n={backgroundColor:"rgba(76, 175, 80, 0.2)"},r=!0):e[0]&&""===e[0].content&&e[1]&&"-"===e[1].content&&(n={backgroundColor:"rgba(244, 67, 54, 0.2)"},r=!0);var s=o({line:e,key:t});s.style=n;var d,u={userSelect:"none",MozUserSelect:"-moz-none",WebkitUserSelect:"none"};return Object(c.b)("div",p({},s,{key:e+t}),e.map((function(e,t){if(r&&(0===t||1===t)&("+"===e.content.charAt(0)||e.content.startsWith("-"))){if(e.content.length>1){d={types:["template-string","string"],content:e.content.slice(1)};var n={types:["operator"],content:e.content.charAt(0)};return Object(c.b)(i.Fragment,{key:e+t},Object(c.b)("span",p({},a({token:n,key:t}),{style:u})),Object(c.b)("span",a({token:d,key:t})))}return Object(c.b)("span",p({},a({token:e,key:t}),{style:u}))}return Object(c.b)("span",a({token:e,key:t}))})))})))}))}},DNiP:function(e,t,n){"use strict";var i=n("XKFU"),r=n("eyMr");i(i.P+i.F*!n("LyE8")([].reduce,!0),"Array",{reduce:function(e){return r(this,e,arguments.length,arguments[1],!1)}})},DVgA:function(e,t,n){var i=n("zhAb"),r=n("4R4u");e.exports=Object.keys||function(e){return i(e,r)}},DW2E:function(e,t,n){var i=n("0/R4"),r=n("Z6vF").onFreeze;n("Xtr8")("freeze",(function(e){return function(t){return e&&i(t)?e(r(t)):t}}))},E9nw:function(e,t,n){n("8+KV"),e.exports=function(){var e=document.getSelection();if(!e.rangeCount)return function(){};for(var t=document.activeElement,n=[],i=0;i<e.rangeCount;i++)n.push(e.getRangeAt(i));switch(t.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":t.blur();break;default:t=null}return e.removeAllRanges(),function(){"Caret"===e.type&&e.removeAllRanges(),e.rangeCount||n.forEach((function(t){e.addRange(t)})),t&&t.focus()}}},ECyS:function(e,t,n){"use strict";n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("Z2Ku"),n("L9s1"),n("DNiP"),n("ioFf"),n("8+KV"),n("HAE/"),n("f3/d"),n("a1Th"),n("h7Nl");function i(e){return Object.prototype.toString.call(e).slice(8,-1)}function r(e){return"Object"===i(e)&&(e.constructor===Object&&Object.getPrototypeOf(e)===Object.prototype)}function o(e){return"Array"===i(e)}function a(e){return"Symbol"===i(e)}function s(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var i=Array(e),r=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,r++)i[r]=o[a];return i}function c(e,t,n,i){var r=i.propertyIsEnumerable(t)?"enumerable":"nonenumerable";"enumerable"===r&&(e[t]=n),"nonenumerable"===r&&Object.defineProperty(e,t,{value:n,enumerable:!1,writable:!0,configurable:!0})}function d(e,t,n){if(!r(t))return n&&o(n)&&n.forEach((function(n){t=n(e,t)})),t;var i={};r(e)&&(i=s(Object.getOwnPropertyNames(e),Object.getOwnPropertySymbols(e)).reduce((function(n,i){var r=e[i];return(!a(i)&&!Object.getOwnPropertyNames(t).includes(i)||a(i)&&!Object.getOwnPropertySymbols(t).includes(i))&&c(n,i,r,e),n}),{}));return s(Object.getOwnPropertyNames(t),Object.getOwnPropertySymbols(t)).reduce((function(i,a){var s=t[a],p=r(e)?e[a]:void 0;return n&&o(n)&&n.forEach((function(e){s=e(p,s)})),void 0!==p&&r(s)&&(s=d(p,s,n)),c(i,a,s,t),i}),i)}t.a=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=null,o=e;return r(e)&&e.extensions&&1===Object.keys(e).length&&(o={},i=e.extensions),t.reduce((function(e,t){return d(e,t,i)}),o)}},EK0E:function(e,t,n){"use strict";var i,r=n("dyZX"),o=n("CkkT")(0),a=n("KroJ"),s=n("Z6vF"),c=n("czNK"),d=n("ZD67"),p=n("0/R4"),u=n("s5qY"),l=n("s5qY"),h=!r.ActiveXObject&&"ActiveXObject"in r,m=s.getWeak,f=Object.isExtensible,y=d.ufstore,g=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(p(e)){var t=m(e);return!0===t?y(u(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return d.def(u(this,"WeakMap"),e,t)}},A=e.exports=n("4LiD")("WeakMap",g,b,d,!0,!0);l&&h&&(c((i=d.getConstructor(g,"WeakMap")).prototype,b),s.NEED=!0,o(["delete","has","get","set"],(function(e){var t=A.prototype,n=t[e];a(t,e,(function(t,r){if(p(t)&&!f(t)){this._f||(this._f=new i);var o=this._f[e](t,r);return"set"==e?this:o}return n.call(this,t,r)}))})))},EWmC:function(e,t,n){var i=n("LZWt");e.exports=Array.isArray||function(e){return"Array"==i(e)}},EemH:function(e,t,n){var i=n("UqcF"),r=n("RjD/"),o=n("aCFj"),a=n("apmT"),s=n("aagx"),c=n("xpql"),d=Object.getOwnPropertyDescriptor;t.f=n("nh4g")?d:function(e,t){if(e=o(e),t=a(t,!0),c)try{return d(e,t)}catch(n){}if(s(e,t))return r(!i.f.call(e,t),e[t])}},FJW5:function(e,t,n){var i=n("hswa"),r=n("y3w9"),o=n("DVgA");e.exports=n("nh4g")?Object.defineProperties:function(e,t){r(e);for(var n,a=o(t),s=a.length,c=0;s>c;)i.f(e,n=a[c++],t[n]);return e}},FLlr:function(e,t,n){var i=n("XKFU");i(i.P,"String",{repeat:n("l0Rn")})},FwON:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n("JmP7"),r=function(){return i.data}},GZEu:function(e,t,n){var i,r,o,a=n("m0Pp"),s=n("MfQN"),c=n("+rLv"),d=n("Iw71"),p=n("dyZX"),u=p.process,l=p.setImmediate,h=p.clearImmediate,m=p.MessageChannel,f=p.Dispatch,y=0,g={},b=function(){var e=+this;if(g.hasOwnProperty(e)){var t=g[e];delete g[e],t()}},A=function(e){b.call(e.data)};l&&h||(l=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return g[++y]=function(){s("function"==typeof e?e:Function(e),t)},i(y),y},h=function(e){delete g[e]},"process"==n("LZWt")(u)?i=function(e){u.nextTick(a(b,e,1))}:f&&f.now?i=function(e){f.now(a(b,e,1))}:m?(o=(r=new m).port2,r.port1.onmessage=A,i=a(o.postMessage,o,1)):p.addEventListener&&"function"==typeof postMessage&&!p.importScripts?(i=function(e){p.postMessage(e+"","*")},p.addEventListener("message",A,!1)):i="onreadystatechange"in d("script")?function(e){c.appendChild(d("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(a(b,e,1),0)}),e.exports={set:l,clear:h}},GddB:function(e,t,n){"use strict";n.r(t),n.d(t,"wrapRootElement",(function(){return a}));n("q1tI");var i=n("kH68"),r=n("YwZP"),o=n("qKvR"),a=function(e){var t=e.element;return Object(o.b)(r.LocationProvider,null,Object(o.b)(i.a,null,t))}},H6hf:function(e,t,n){var i=n("y3w9");e.exports=function(e,t,n,r){try{return r?t(i(n)[0],n[1]):t(n)}catch(a){var o=e.return;throw void 0!==o&&i(o.call(e)),a}}},"HAE/":function(e,t,n){var i=n("XKFU");i(i.S+i.F*!n("nh4g"),"Object",{defineProperty:n("hswa").f})},HEwt:function(e,t,n){"use strict";var i=n("m0Pp"),r=n("XKFU"),o=n("S/j/"),a=n("H6hf"),s=n("M6Qj"),c=n("ne8i"),d=n("8a7r"),p=n("J+6e");r(r.S+r.F*!n("XMVh")((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,r,u,l=o(e),h="function"==typeof this?this:Array,m=arguments.length,f=m>1?arguments[1]:void 0,y=void 0!==f,g=0,b=p(l);if(y&&(f=i(f,m>2?arguments[2]:void 0,2)),null==b||h==Array&&s(b))for(n=new h(t=c(l.length));t>g;g++)d(n,g,y?f(l[g],g):l[g]);else for(u=b.call(l),n=new h;!(r=u.next()).done;g++)d(n,g,y?a(u,f,[r.value,g],!0):r.value);return n.length=g,n}})},I5cv:function(e,t,n){var i=n("XKFU"),r=n("Kuth"),o=n("2OiF"),a=n("y3w9"),s=n("0/R4"),c=n("eeVq"),d=n("8MEG"),p=(n("dyZX").Reflect||{}).construct,u=c((function(){function e(){}return!(p((function(){}),[],e)instanceof e)})),l=!c((function(){p((function(){}))}));i(i.S+i.F*(u||l),"Reflect",{construct:function(e,t){o(e),a(t);var n=arguments.length<3?e:o(arguments[2]);if(l&&!u)return p(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var i=[null];return i.push.apply(i,t),new(d.apply(e,i))}var c=n.prototype,h=r(s(c)?c:Object.prototype),m=Function.apply.call(e,h,t);return s(m)?m:h}})},I74W:function(e,t,n){"use strict";n("qncB")("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},"I8a+":function(e,t,n){var i=n("LZWt"),r=n("K0xU")("toStringTag"),o="Arguments"==i(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(n){}}(t=Object(e),r))?n:o?i(t):"Object"==(a=i(t))&&"function"==typeof t.callee?"Arguments":a}},INYr:function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(6),o="findIndex",a=!0;o in[]&&Array(1)[o]((function(){a=!1})),i(i.P+i.F*a,"Array",{findIndex:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n("nGyu")(o)},IOVJ:function(e,t,n){"use strict";n("jm62"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V");var i=n("q1tI"),r=n.n(i),o=n("emEt"),a=n("xtsi");function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=function(e){var t,n;function r(){return e.apply(this,arguments)||this}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r.prototype.render=function(){var e=c(c({},this.props),{},{pathContext:this.props.pageContext}),t=Object(a.apiRunner)("replaceComponentRenderer",{props:this.props,loader:o.publicLoader})[0]||Object(i.createElement)(this.props.pageResources.component,c(c({},e),{},{key:this.props.path||this.props.pageResources.page.path}));return Object(a.apiRunner)("wrapPageElement",{element:t,props:e},t,(function(t){return{element:t.result,props:e}})).pop()},r}(r.a.Component);t.a=p},"IU+Z":function(e,t,n){"use strict";n("sMXx");var i=n("KroJ"),r=n("Mukb"),o=n("eeVq"),a=n("vhPU"),s=n("K0xU"),c=n("Ugos"),d=s("species"),p=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var l=s(e),h=!o((function(){var t={};return t[l]=function(){return 7},7!=""[e](t)})),m=h?!o((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[d]=function(){return n}),n[l](""),!t})):void 0;if(!h||!m||"replace"===e&&!p||"split"===e&&!u){var f=/./[l],y=n(a,l,""[e],(function(e,t,n,i,r){return t.exec===c?h&&!r?{done:!0,value:f.call(t,n,i)}:{done:!0,value:e.call(n,t,i)}:{done:!1}})),g=y[0],b=y[1];i(String.prototype,e,g),r(RegExp.prototype,l,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}}},IVHb:function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=void 0;var r=i(n("j8BX")),o=i(n("XEEL")),a=i(n("q1tI")),s=i(n("i8i4")),c=i(n("dpYK")),d=i(n("17x9")),p=n("444f"),u={scrollKey:d.default.string.isRequired,shouldUpdateScroll:d.default.func,children:d.default.element.isRequired},l=function(e){function t(t){var n;return(n=e.call(this,t)||this).shouldUpdateScroll=function(e,t){var i=n.props.shouldUpdateScroll;return!i||i.call(n.props.context.scrollBehavior,e,t)},n.scrollKey=t.scrollKey,n}(0,o.default)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.context.registerElement(this.props.scrollKey,s.default.findDOMNode(this),this.shouldUpdateScroll)},n.componentDidUpdate=function(e){(0,c.default)(e.scrollKey===this.props.scrollKey,"<ScrollContainer> does not support changing scrollKey.")},n.componentWillUnmount=function(){this.props.context.unregisterElement(this.scrollKey)},n.render=function(){return this.props.children},t}(a.default.Component),h=function(e){return a.default.createElement(p.ScrollBehaviorContext.Consumer,null,(function(t){return a.default.createElement(l,(0,r.default)({},e,{context:t}))}))};h.propTypes=u;var m=h;t.default=m},Iw71:function(e,t,n){var i=n("0/R4"),r=n("dyZX").document,o=i(r)&&i(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},"J+6e":function(e,t,n){var i=n("I8a+"),r=n("K0xU")("iterator"),o=n("hPIQ");e.exports=n("g3g5").getIteratorMethod=function(e){if(null!=e)return e[r]||e["@@iterator"]||o[i(e)]}},JTKy:function(e,t,n){"use strict";n.r(t);var i=n("q1tI");t.default={React:i}},JUDV:function(e,t,n){"use strict";n.r(t);n("f3/d");var i=n("q1tI"),r=n("V70Y"),o=(n("84bF"),n("vOnD")),a=n("SlEa"),s=o.b.div.withConfig({componentId:"sc-13h76jq-0"})(["margin-top:25px;margin-bottom:25px;padding:25px;border:1px solid ",";border-radius:5px;"],a.b.brandGray),c=o.b.header.withConfig({componentId:"sc-13h76jq-1"})(["display:flex;align-items:baseline;flex-wrap:wrap;@media screen and (min-width:","){flex-wrap:nowrap;}"],a.a.xxxLarge),d=o.b.div.withConfig({componentId:"sc-13h76jq-2"})(["font-family:",";font-weight:400;font-size:16px;color:",";line-height:1.75;@media screen and (min-width:","){font-size:18px;}code{border-radius:10px;padding:5px 10px;white-space:nowrap;font-family:",";font-weight:400;font-size:15px;color:",";background-color:",";}"],a.d.body,a.b.baliHai,a.a.small,a.d.monospace,a.b.body,a.b.concrete),p=o.b.aside.withConfig({componentId:"sc-13h76jq-3"})(["margin-top:15px;pre{padding:16px;font-size:14px;overflow:auto;}"]),u=o.b.h4.withConfig({componentId:"sc-13h76jq-4"})(["margin-right:5px;margin-bottom:15px;padding:5px 10px;font-family:",";font-weight:400;font-size:14px;line-height:1.75;color:",";background-color:",";border-radius:10px;white-space:nowrap;"],a.d.monospace,a.b.body,a.b.concrete),l=o.b.ul.withConfig({componentId:"sc-13h76jq-5"})(["display:flex;margin-right:auto;"]),h=o.b.li.withConfig({componentId:"sc-13h76jq-6"})(["display:block;margin-right:10px;&:not(:last-of-type):after{content:',';}"]),m=o.b.span.withConfig({componentId:"sc-13h76jq-7"})(["line-height:20px;font-size:13px;font-family:",";"],a.d.monospace),f=Object(o.b)(m).withConfig({componentId:"sc-13h76jq-8"})(["color:",";text-transform:lowercase;"],a.b.hippieGreen),y=Object(o.b)(m).withConfig({componentId:"sc-13h76jq-9"})(["color:",";text-transform:capitalize;"],a.b.dustyGray),g=Object(o.b)(m).withConfig({componentId:"sc-13h76jq-10"})(["color:",";text-transform:uppercase;"],a.b.red),b=o.b.ul.withConfig({componentId:"sc-13h76jq-11"})(["display:flex;margin-bottom:15px;list-style:none;"]),A=o.b.li.withConfig({componentId:"sc-13h76jq-12"})(["display:block;& + &{margin-left:10px;}"]),D=o.b.div.withConfig({componentId:"sc-13h76jq-13"})(["padding:5px 10px;text-transform:capitalize;font-size:12px;font-family:",";text-transform:uppercase;color:",";background:",";"],a.d.monospace,a.b.brandLight,(function(e){var t=e.type;return t in a.f?a.f[t]:a.f.default})),C=o.b.h5.withConfig({componentId:"sc-13h76jq-14"})(["margin-bottom:15px;font-weight:bold;font-size:16px;color:",";"],a.b.body),T=n("qKvR"),I=function(e){var t=e.visibleSettings,n=e.type,r=e.location,o=e.required;return Object(T.b)(l,null,t.map((function(e){return Object(T.b)(i.Fragment,{key:e},"type"===e&&Object(T.b)(h,{key:e},Object(T.b)(f,null,n)),"location"===e&&Object(T.b)(h,{key:e},Object(T.b)(y,null,r)),"required"===e&&o&&Object(T.b)(h,{key:e},Object(T.b)(g,null,"Required")))})))},R=function(e){var t=e.methods;return Object(T.b)(b,null,t.map((function(e){return Object(T.b)(A,{key:e},Object(T.b)(D,{type:e},e))})))},S=function(e){var t=e.parameter,n=t.name,i=t.type,o=t.location,a=t.required,l=t.methods,h=t.body,m=t.example,f=null!==m&&!!m.length;return Object(T.b)(s,null,Object(T.b)(c,null,Object(T.b)(u,null,n),Object(T.b)(I,{visibleSettings:["type","location","required"],type:i,location:o,required:a}),Object(T.b)(R,{methods:l})),Object(T.b)(d,{dangerouslySetInnerHTML:{__html:h}}),f&&Object(T.b)(p,null,Object(T.b)(C,null,"Example"),Object(T.b)(r.a,{code:m,language:"javascript"})))},N=n("KGCr");t.default={ParameterDetails:S,parameters:N,React:i}},JiEa:function(e,t){t.f=Object.getOwnPropertySymbols},JmP7:function(e){e.exports=JSON.parse('{"data":{"allMdx":{"edges":[{"node":{"fields":{"id":"d616d842-5670-57f9-9a18-2515bdbf82e8","title":"Payment Message Assessment Failed Webhook","slug":"/payment-message-assessment-failed-webhook-v1"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Payment Message Assessment Failed Webhook\\",\\n  \\"version\\": 1,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"h4\\", null, \\"This webhook confirms the payment assessment has failed.\\"), mdx(\\"p\\", null, \\"Scenarios which can trigger this event include (but not limited to); sending a payment which exceeds the scheme limit, sending the payment to a disabled account, sending the payment with a duplicate Payment Id, invalid BIC, CHAPS payment approved outside of the payment window and insufficient balance to cover multiple payments.\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"PaymentMessageAssessmentFailed\\\\\\",\\\\n  \\\\\\"Version\\\\\\":1,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MessageId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique ID to identify the message.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Format: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"PaymentMethodType\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"Optional\\"), \\" \\", mdx(\\"br\\", null), \\"The Scheme type.\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Transfer\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"FasterPayments\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Bacs\\"), \\",\\", mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Chaps\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AssessmentFailure\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The object describes the failure reason. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"EndToEndId\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reasons\\"), \\" elements.\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"EndToEndId\\"), \\" : Identifier the integrator supplies on the payment API\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reasons\\"), \\": Reasons why ClearBank\\\\xAE will not accept the payment message.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"), mdx(\\"br\\", null), \\"Example reasons include \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Insufficient Funds\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Account closed\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIdentification\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The object contains the account identification. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Debtor\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Creditors\\"), \\" elements.\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Debtor\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), mdx(\\"br\\", null), \\"Debtor information object. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), \\" \\", mdx(\\"br\\", null), \\"Contains \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\" elements. \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Creditors\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Creditors information object. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), \\" \\", mdx(\\"br\\", null), \\"Contains \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\" elements. \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\"), mdx(\\"br\\", null), \\"Type:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\"), \\": Transaction amount\\", mdx(\\"br\\", null), \\"Type:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"int\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\":\\\\tCode of transaction currency, \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GBP\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example payment message assessment failed webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n    \\\\\\"Type\\\\\\": \\\\\\"PaymentMessageAssessmentFailed\\\\\\",\\\\n    \\\\\\"Version\\\\\\": 1,\\\\n    \\\\\\"Payload\\\\\\":\\\\n        {\\\\n        \\\\\\"MessageId\\\\\\": \\\\\\"624e0276-1b27-4a80-a06d-51759711bc0e\\\\\\",\\\\n        \\\\\\"PaymentMethodType\\\\\\": \\\\\\"Transfer\\\\\\",\\\\n        \\\\\\"AssesmentFailure\\\\\\": [\\\\n            {\\\\n            \\\\\\"EndToEndId\\\\\\": \\\\\\"51236da640c9\\\\\\",\\\\n            \\\\\\"Reasons\\\\\\":\\\\n            \\\\\\"Insufficient Funds\\\\\\"\\\\n                ]\\\\n            },\\\\n        {\\\\n            \\\\\\"EndToEndId\\\\\\": \\\\\\"fa2b005bf7a4\\\\\\",\\\\n            \\\\\\"Reasons\\\\\\":\\\\n            \\\\\\"Account closed\\\\\\"\\\\n                ]\\\\n            }\\\\n            ],\\\\n        \\\\\\"AccountIdentification\\\\\\": {\\\\n        \\\\\\"Debtor\\\\\\": {\\\\n            \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK22002243218765\\\\\\",\\\\n            \\\\\\"BBAN\\\\\\": \\\\\\"CUBK22002243218765\\\\\\"\\\\n            },\\\\n        \\\\\\"Creditors\\\\\\": [\\\\n        {\\\\n        \\\\\\"Reference\\\\\\": \\\\\\"b4e062e244c449f8afc7e2a941562768\\\\\\",\\\\n        \\\\\\"Amount\\\\\\": 17.95,\\\\n        \\\\\\"CurrencyCode\\\\\\": \\\\\\"GBP\\\\\\",\\\\n        \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK44556687654321\\\\\\",\\\\n        \\\\\\"BBAN\\\\\\": \\\\\\"CUBK44556687654321\\\\\\"\\\\n            },\\\\n        {\\\\n        \\\\\\"Reference\\\\\\": \\\\\\"0bae808d96bb42a6a892bc9ade169993\\\\\\",\\\\n        \\\\\\"Amount\\\\\\": 17.95,\\\\n        \\\\\\"CurrencyCode\\\\\\": \\\\\\"GBP\\\\\\",\\\\n        \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK11223312345678\\\\\\",\\\\n        \\\\\\"BBAN\\\\\\": \\\\\\"CUBK11223312345678\\\\\\"\\\\n            }\\\\n            ]\\\\n        }\\\\n        }\\\\n    \\\\\\"Nonce\\\\\\": 1082937278\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 828803944\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":1,"title":"Payment Message Assessment Failed Webhook"}}},{"node":{"fields":{"id":"31fd633a-8453-5b34-ba31-5f1043030474","title":"Account Created Webhook","slug":"/account-created-webhook-v1"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Account Created Webhook\\",\\n  \\"version\\": 1,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"p\\", null, \\"This webhook confirms the account has been created\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"AccountCreated\\\\\\",\\\\n  \\\\\\"Version\\\\\\":1,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Account identifier used to uniquely identify the  account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Format: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Name of the account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The account description. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIdentifiers\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Account identifier details. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), \\" \\", mdx(\\"br\\", null))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TimestampCreated\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The date and time the account was created.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), \\" \\", mdx(\\"br\\", null), \\" Format: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountType\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Type of account. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Examples: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrentAccount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DepositAccount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ControlAccount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"SegregatedClientAccount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionAccount\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example account created webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n    \\\\\\"Type\\\\\\": \\\\\\"AccountCreated\\\\\\",\\\\n    \\\\\\"Version\\\\\\": 1,\\\\n    \\\\\\"Payload\\\\\\":\\\\n    {\\\\n        \\\\\\"AccountId\\\\\\": \\\\\\"56de3483-a569-42eb-90cc-acf59661356f\\\\\\",\\\\n        \\\\\\"AccountName\\\\\\": \\\\\\"John Doe\\\\\\",\\\\n        \\\\\\"AccountHolderLabel\\\\\\": \\\\\\"John Doe\\\\\\",\\\\n            \\\\\\"AccountIdentifiers\\\\\\": {\\\\n                \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK11223312345678\\\\\\",\\\\n                \\\\\\"BBAN\\\\\\": \\\\\\"CUBK11223312345678\\\\\\"\\\\n            },\\\\n    \\\\\\"TimestampCreated\\\\\\": \\\\\\"2018-07-19T13:31:30.8789344Z\\\\\\",\\\\n    \\\\\\"AccountType\\\\\\": \\\\\\"CurrentAccount\\\\\\"\\\\n    }\\\\n    \\\\\\"Nonce\\\\\\": 1082937278\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 1082937278\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":1,"title":"Account Created Webhook"}}},{"node":{"fields":{"id":"c20f01a0-a9bf-5862-86f1-c0787cecf573","title":"Payment Message Validation Failed Webhook","slug":"/payment-message-validation-failed-webhook-v1"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Payment Message Validation Failed Webhook\\",\\n  \\"version\\": 1,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"h4\\", null, \\"This webhook confirms the payment validation has failed.\\"), mdx(\\"p\\", null, \\"Scenarios which can trigger this event include (but not limited to); sending a payment with an invalid character in the payment reference and sending a payment with an invalid character in the creditor information.\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"PaymentMessageValidationFailed\\\\\\",\\\\n  \\\\\\"Version\\\\\\":1,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MessageId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique ID to identify the message.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Format: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"PaymentMethodType\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), \\" \\", mdx(\\"br\\", null), \\"The Scheme type.\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Transfer\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"FasterPayments\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Bacs\\"), \\",\\", mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Chaps\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"EndToEndId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique Identifier End to End ID as supplied by the Debtor Institution in their API request, to enable tracking of individual payments.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reasons\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Examples of possible reasons for failure:\\", mdx(\\"br\\", null), \\" - Creditor name must only contain valid Faster Payments characters\\", mdx(\\"br\\", null), \\" - Creditor name contains invalid characters\\", mdx(\\"br\\", null), \\" - Creditor reference must only contain valid Faster Payments characters\\", mdx(\\"br\\", null), \\" - Creditor reference contains invalid characters\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIdentification\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Debtor information object\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CUID\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UPIC\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), \\" \\", mdx(\\"br\\", null), \\" \\", mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CUID\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": The CHIPS UID is assigned by the New York Clearing House\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UPIC\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": Identifier used by the New York Clearing House\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": Name of the account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\":The account description. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": The institution name\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Creditors\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Creditor(s) information object\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\"It contains \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CUID\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UPIC\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\"), \\": Payment reference specified by the debtor.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\"), \\": Transaction amount\\", mdx(\\"br\\", null), \\"Type:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"int\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\"), \\": Code of transaction currency\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), \\" \\", mdx(\\"br\\", null), \\" \\", mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CUID\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": The CHIPS UID is assigned by the New York Clearing House\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UPIC\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": Identifier used by the New York Clearing House\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": Name of the account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\":The account description. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\": The institution name\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example payment message validation failed webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\": \\\\\\"PaymentMessageValidationFailed\\\\\\",\\\\n  \\\\\\"Version\\\\\\": 1,\\\\n  \\\\\\"Payload\\\\\\":\\\\n    {\\\\n      \\\\\\"MessageId\\\\\\": \\\\\\"164ac6a0-8e15-4592-b99e-c0a7399f1295\\\\\\",\\\\n      \\\\\\"PaymentMethodType\\\\\\": \\\\\\"Transfer\\\\\\",\\\\n      \\\\\\"ValidationFailure\\\\\\": [\\\\n         {\\\\n              \\\\\\"EndToEndId\\\\\\": \\\\\\"72db39cd1693\\\\\\",\\\\n              \\\\\\"Reasons\\\\\\": [\\\\n                 \\\\\\"Creditor name contains invalid characters\\\\\\"\\\\n                       ]\\\\n                 },\\\\n           ],\\\\n                    \\\\\\"AccountIdentification\\\\\\": {\\\\n                           \\\\\\"Debtor\\\\\\": {\\\\n                            \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK22002243218765\\\\\\",\\\\n                            \\\\\\"BBAN\\\\\\": \\\\\\"CUBK22002243218765\\\\\\",\\\\n                            \\\\\\"CUID\\\\\\": null,\\\\n                             \\\\\\"UPIC\\\\\\": null,\\\\n                            \\\\\\"AccountName\\\\\\": \\\\u201CJane Doe\\\\u201D,\\\\n                            \\\\\\"AccountHolderLabel\\\\\\": \\\\u201CJane Doe\\\\u201D,\\\\n                            \\\\\\"InstitutionName\\\\\\": \\\\u201CCustomerBank\\\\u201D\\\\n                                     },\\\\n                  \\\\\\"Creditors\\\\\\": [\\\\n                          {\\\\n                  \\\\\\"Reference\\\\\\": \\\\\\"86671a4add96f7a9cc569a6a4a601b38\\\\\\",\\\\n                  \\\\\\"Amount\\\\\\": 17.95,\\\\n                  \\\\\\"CurrencyCode\\\\\\": \\\\\\"GBP\\\\\\",\\\\n                  \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK44556687654321\\\\\\",\\\\n                  \\\\\\"BBAN\\\\\\": \\\\\\"CUBK44556687654321\\\\\\",\\\\n                  \\\\\\"CUID\\\\\\": null,\\\\n                  \\\\\\"UPIC\\\\\\": null,\\\\n                  \\\\\\"AccountName\\\\\\": \\\\u201CBob Robson\\\\u201D,\\\\n                  \\\\\\"AccountHolderLabel\\\\\\": \\\\u201CBob Robson\\\\u201D,\\\\n                  \\\\\\"InstitutionName\\\\\\": \\\\u201CMyBank\\\\u201D\\\\n                            },\\\\n                   ]\\\\n            }\\\\n             }\\\\n          \\\\\\"Nonce\\\\\\": 1634549462\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 1634549462\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":1,"title":"Payment Message Validation Failed Webhook"}}},{"node":{"fields":{"id":"63ebd937-5fb3-5c9b-b7db-54d862c421c7","title":"Transaction Rejected Webhook","slug":"/transaction-rejected-v2"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Transaction Rejected Webhook\\",\\n  \\"version\\": 2,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"p\\", null, \\"This webhook confirms the payment has been rejected\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"TransactionRejected\\\\\\",\\\\n  \\\\\\"Version\\\\\\":2,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique Identification of the Transaction.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), \\" \\", mdx(\\"br\\", null), \\" Max. Length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"), mdx(\\"br\\", null), \\" Special Character: Hyphen \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"-\\"), mdx(\\"br\\", null), \\" Example format of a typical TransactionId:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"073dca79-13b8-8bf2-b63b-148957caffe9\\"), mdx(\\"br\\", null))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Status\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Transaction status.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Rejected\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Scheme\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"Optional\\"), \\" \\", mdx(\\"br\\", null), \\"The Scheme type.\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Transfer\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"FasterPayments\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Bacs\\"), \\",\\", mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Chaps\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"EndToEndTransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique Identifier End to End ID as supplied by the Integrator in their API request.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Transaction amount. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"int\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TimestampModified\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Date and Time the transaction was rejected.\\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"), mdx(\\"br\\", null))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), mdx(\\"br\\", null), \\"Code of transaction currency. :\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GBP\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DebitCreditCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Movement of transaction.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Options:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Credit\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Debit\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Payment transaction reference\\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IsReturn\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Is the transaction returned from scheme?\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"True\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"False\\"), mdx(\\"br\\", null))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CancellationReason\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), \\" \\", mdx(\\"br\\", null), \\"Textual representation of CancellationCode giving reason for rejection\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CancellationCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), \\" \\", mdx(\\"br\\", null), \\"Code of Cancellation \\\\u2013 a combination of SWIFT and ClearBank\\\\xAE codes. \\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC03\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC04\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC06\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC07\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC09\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC12\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AG01\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AG02\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AG03\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AM09\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BE08\\"), \\" , \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BE09\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_AccountHoldersBankrupt\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_AccountNameInvalid\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_AccountSwitched\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_AuthenticationFailure\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_CancelledByBoEController\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_CancelledByChapsMember\\"), \\",\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_CancelledCreditAccountDisabled\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_CancelledDebitAccountDisabled\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_CancelledQueuedCloseOfBusiness\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_DupSttlmntOriginalIsQueued\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_DupSttlmntOriginalWasRejected\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_FailedModulusCheck\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InitiatingPartyActionRequired\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InitiatingPartyRequested\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InstructionCancelled\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InstructionCancelledByCustomer\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InstructionHasExpired\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_InvalidProcessorState\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_NewAccountUpdatedWithDDI\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_SenderNotInTertiaryMode\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"COSE\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CURR\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CUTO\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DDAT\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DMON\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DU05\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ICAG\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IVAG\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MD01\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MD07\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"OTHR\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"PY01\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"REFE\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Other\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Manual\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BLBYTH\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"HOPRJ\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MS03\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MS02\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AC05\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"MS01\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_PaymentReferenceMissing\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_PaymentReferenceIncorrect\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_PaymentBeneficiaryNameMissing\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CB_AccountNameAndNumberMismatch\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Account\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Account information object\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\" and\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CounterpartAccount\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The account which is not held at ClearBank.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example transaction rejected webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n    \\\\\\"Type\\\\\\": \\\\\\"TransactionRejected\\\\\\",\\\\n    \\\\\\"Version\\\\\\": 2,\\\\n    \\\\\\"Payload\\\\\\":\\\\n    {\\\\n        \\\\\\"TransactionId\\\\\\": \\\\\\"073dca79-13b8-8bf2-b63b-148957caffe9\\\\\\",\\\\n                \\\\\\"Status\\\\\\": \\\\\\"Rejected\\\\\\",\\\\n                \\\\\\"Scheme\\\\\\": \\\\\\"Transfer\\\\\\",\\\\n                \\\\\\"EndToEndTransactionId\\\\\\": \\\\\\"ccec481ee502\\\\\\",\\\\n                \\\\\\"Amount\\\\\\": 97.45,\\\\n                \\\\\\"TimestampModified\\\\\\": \\\\\\"2018-08-01T23:01:04.635Z\\\\\\",\\\\n                \\\\\\"CurrencyCode\\\\\\": \\\\\\"GBP\\\\\\",\\\\n                \\\\\\"DebitCreditCode\\\\\\": \\\\\\"Credit\\\\\\",\\\\n                \\\\\\"Reference\\\\\\": \\\\\\"06a87c63c88c84b99294d910e283cae6\\\\\\",\\\\n                \\\\\\"IsReturn\\\\\\": false,\\\\n                \\\\\\"CancellationReason\\\\\\": \\\\\\"Beneficiary account name does not match beneficiary account number\\\\\\",\\\\n                \\\\\\"CancellationCode\\\\\\": \\\\\\"CB_AccountNameInvalid\\\\\\",\\\\n                        \\\\\\"Account\\\\\\": {\\\\n                            \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK11223312345678\\\\\\",\\\\n                            \\\\\\"BBAN\\\\\\": \\\\\\"CUBK11223312345678\\\\\\"\\\\n                                   },\\\\n                       \\\\\\"CounterpartAccount\\\\\\": {\\\\n                           \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK44556687654321\\\\\\",\\\\n                           \\\\\\"BBAN\\\\\\": \\\\\\"CUBK44556687654321\\\\\\"\\\\n            }\\\\n        }\\\\n    \\\\\\"Nonce\\\\\\": 748392098\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 748392098\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":2,"title":"Transaction Rejected Webhook"}}},{"node":{"fields":{"id":"82015293-4dab-5e71-8af8-447e397e107e","title":"Transaction Settled Webhook","slug":"/transaction-settled-webhook-v6"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Transaction Settled Webhook\\",\\n  \\"version\\": 6,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"p\\", null, \\"This sends a webhook notification confirming the transaction has settled\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"TransactionSettled\\\\\\",\\\\n  \\\\\\"Version\\\\\\":6,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique Identification of the Transaction.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), \\" \\", mdx(\\"br\\", null), \\" Max. Length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"), mdx(\\"br\\", null), \\" Special Character: Hyphen \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"-\\"), mdx(\\"br\\", null), \\" Example format of a typical TransactionId:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CE25B426-9430-4A82-8EB8-9311DA2D3E12\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Status\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Transaction status.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Settled\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Scheme\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"Optional\\"), \\" \\", mdx(\\"br\\", null), \\"The Scheme type.\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Transfer\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"FasterPayments\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Bacs\\"), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Chaps\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"EndToEndTransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique Identifier End to End ID as supplied by the Integrator in their API request.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"35\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Amount\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Transaction amount. \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"int\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TimestampSettled\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Date and time the transaction settled.\\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TimestampCreated\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Date and time the transaction was created.\\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CurrencyCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"Optional\\"), \\" \\", mdx(\\"br\\", null), \\"Code of transaction currency.\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GBP\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DebitCreditCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Movement of transaction.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Options:\\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Credit\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Debit\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Reference\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(optional)\\"), \\" \\", mdx(\\"br\\", null), \\"Payment transaction reference.\\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"140\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IsReturn\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Is the Transaction returned from Scheme?\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"True\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"False\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Account\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Account information object\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"object\\"), mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"OwnerName\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionOwner\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Depending on Scheme Type\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"OwnerName\\"), \\": name of the beneficiary account holder registered with ClearBank\\\\xAE.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" - Faster Payments = Sender\\\\u2019s Account Name\\", mdx(\\"br\\", null), \\" - Chaps = Ordering Customer\\\\u2019s Name\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionOwnerName\\"), mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" - Beneficiary Account Holder, as specified by the remitter in the payment message.\\", mdx(\\"br\\", null), \\" - For outbound payments, as specified by ClearBank\\\\xAE as the remitter name in the payment message.\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\": The institution name. \\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" - Chaps = Ordering Institution\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CounterpartAccount\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"The account which is not held at ClearBank. \\", mdx(\\"br\\", null), \\" It contains the \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"OwnerName\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionOwner\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\".\\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Depending on Scheme Type\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"OwnerName\\"), \\": name of the beneficiary account.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" - Populated with either the same name as \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionOwnerName\\"), \\", or with \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\u201CNot Provided\\\\u201D\\"), \\" depending on what is provided in the payment message.\\", mdx(\\"br\\", null), \\"- Faster Payments = Beneficiary\'s Account Name\\", mdx(\\"br\\", null), \\" - Chaps = Beneficiary\\\\u2019s Name\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionOwnerName\\"), mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" Populated by Scheme with the name provided in the payment message.\\", mdx(\\"br\\", null), \\" - For outbound payments, this is populated as the Beneficiary Name which is provided by you.\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionName\\"), \\": The institution name. \\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), \\" - Chaps = Beneficiary Institution\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ActualEndToEndTransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Unique payment Identifier depending on Scheme Type.\\", mdx(\\"br\\", null), \\" Maximum Field Length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"255\\"), mdx(\\"br\\", null), \\" Faster Payments = \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"FPID\\"), mdx(\\"br\\", null), \\" Chaps = \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Field 20\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"FPID\\"), \\" is the unique payment identifier generated by Faster Payments. \\", mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Field 20\\"), \\" is the unique payment identifier generated by the remitting bank.\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DirectDebitMandateId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"Unique Identification of a Direct Debit Instruction.\\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionCode\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"Direct Debit Transaction Code:\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"01\\\\\\"\\"), \\" - First collection\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"17\\\\\\"\\"), \\" - Regular collection\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"18\\\\\\"\\"), \\" - Re-presented collection\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"19\\\\\\"\\"), \\" - Final collection\\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"Direct Credit Transaction Code:\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"99\\\\\\"\\"), \\" - Standard Bank Giro Credit\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"86\\\\\\"\\"), \\" - Bank to bank settlement\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"Z4\\\\\\"\\"), \\" - Interest payment\\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"\\\\\\"Z5\\\\\\"\\"), \\" - Dividend payment\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ServiceUserNumber\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"Service User\'s Unique Identifier registered with Bacs.\\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"6\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BacsTransactionId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), \\" \\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BacsTransactionDescription\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CreditTransactionSettled\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DebitContraTransactionSettled\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DebitTransactionSettled\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CreditContraTransactionSettled\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DirectDebitReceivedIndemnityClaimSettled\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionType\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), \\" \\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DirectCredit\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DirectDebit\\"), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DirectDebitIndemnityClaim\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TransactionSource\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"/Origination of the Transaction :\\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"50\\"), \\" \\", mdx(\\"br\\", null), \\" Example: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"CardProcessor\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"SupplementaryData\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"em\\", {\\n    parentName: \\"td\\"\\n  }, \\"(Optional)\\"), mdx(\\"br\\", null), \\"Transaction supplementary data\\", mdx(\\"br\\", null), \\" It is an array with the a \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Name\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Value\\"), \\". \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Name\\"), \\": Tag/Field Number in the CHAPS message. \\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"5\\"), \\" \\", mdx(\\"br\\", null), \\" \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Name\\"), \\" options: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"20\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"13C\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"23B\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"23E\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"26T\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"32A\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"33B\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"50a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"51A\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"52a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"53a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"54a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"55a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"56a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"57a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"59a\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"70\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"71A\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"71F\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"71G\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"72\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"77B\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\"    \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Value\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"500\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\" \\", mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"There could be more than one Name and Value pair.\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example transaction settled webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"TransactionSettled\\\\\\",\\\\n  \\\\\\"Version\\\\\\":6,\\\\n  \\\\\\"Payload\\\\\\":\\\\n{\\\\n  \\\\\\"TransactionId\\\\\\": \\\\\\"d9162680-7d35-7994-4e38-fa80716899a2\\\\\\",\\\\n  \\\\\\"Status\\\\\\": \\\\\\"Settled\\\\\\",\\\\n  \\\\\\"Scheme\\\\\\": \\\\\\"Transfer\\\\\\",\\\\n  \\\\\\"EndToEndTransactionId\\\\\\": \\\\\\"05726acd06dc\\\\\\",\\\\n  \\\\\\"Amount\\\\\\": 88.52,\\\\n  \\\\\\"TimestampSettled\\\\\\": \\\\\\"2019-01-01T10:02:00.964Z\\\\\\",\\\\n  \\\\\\"TimestampCreated\\\\\\": \\\\\\"2019-01-01T11:12:05.101Z\\\\\\",\\\\n  \\\\\\"CurrencyCode\\\\\\": \\\\\\"GBP\\\\\\",\\\\n  \\\\\\"DebitCreditCode\\\\\\": \\\\\\"Credit\\\\\\",\\\\n  \\\\\\"Reference\\\\\\": \\\\\\"51dcf7ba480e61c5a60bbb6c6b774d17\\\\\\",\\\\n  \\\\\\"IsReturn\\\\\\": false,\\\\n  \\\\\\"Account\\\\\\":\\\\n    {\\\\n    \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK11223312345678\\\\\\",\\\\n    \\\\\\"BBAN\\\\\\": \\\\\\"CUBK11223312345678\\\\\\",\\\\n    \\\\\\"OwnerName\\\\\\": \\\\\\"John Doe\\\\\\",\\\\n    \\\\\\"TransactionOwnerName\\\\\\": \\\\\\"John Doe\\\\\\",\\\\n    \\\\\\"InstitutionName\\\\\\": \\\\\\"CustomerBank\\\\\\"\\\\n    },\\\\n  \\\\\\"CounterpartAccount\\\\\\":\\\\n    {\\\\n    \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK44556687654321\\\\\\",\\\\n    \\\\\\"BBAN\\\\\\": \\\\\\"CUBK44556687654321\\\\\\",\\\\n    \\\\\\"OwnerName\\\\\\": \\\\\\"Jane Doe\\\\\\",\\\\n    \\\\\\"TransactionOwnerName\\\\\\": \\\\\\"Jane Doe\\\\\\",\\\\n    \\\\\\"InstitutionName\\\\\\": \\\\\\"CustomerBank\\\\\\"\\\\n    },\\\\n  \\\\\\"ActualEndToEndTransactionId\\\\\\": \\\\\\"e6e7ab2a97d1\\\\\\",\\\\n  \\\\\\"DirectDebitMandateId\\\\\\": \\\\\\"cbf17eb8-9e49-2043-2eca-0dae05e27fe5\\\\\\",\\\\n  \\\\\\"TransactionCode\\\\\\": \\\\\\"99\\\\\\",\\\\n  \\\\\\"ServiceUserNumber\\\\\\": \\\\\\"030201\\\\\\",\\\\n  \\\\\\"BacsTransactionId\\\\\\": \\\\\\"3ec6f5b0-0e6b-a30b-7dc4-cdcc0751d448\\\\\\",\\\\n  \\\\\\"BacsTransactionDescription\\\\\\": \\\\\\"CreditContraTransactionSettled\\\\\\",\\\\n  \\\\\\"TransactionType\\\\\\": \\\\\\"DirectCredit\\\\\\",\\\\n  \\\\\\"TransactionSource\\\\\\": \\\\\\"CardProcessor\\\\\\",\\\\n  \\\\\\"SupplementaryData\\\\\\": [\\\\n    {\\\\n    \\\\\\"Name\\\\\\": \\\\\\"20\\\\\\",\\\\n    \\\\\\"Value\\\\\\": \\\\\\"AJF9384DGSB48Sd\\\\\\"\\\\n    },\\\\n    {\\\\n    \\\\\\"Name\\\\\\": \\\\\\"23B\\\\\\",\\\\n    \\\\\\"Value\\\\\\": \\\\\\"CRED\\\\\\"\\\\n    }\\\\n  ]\\\\n  \\\\\\"Nonce\\\\\\": 949893874\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 828803944\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":6,"title":"Transaction Settled Webhook"}}},{"node":{"fields":{"id":"8ce1533c-79b0-5a2d-99fd-ae6915f6efa2","title":"Virtual Account Created Webhook","slug":"/virtual-account-created-v2"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Virtual Account Created Webhook\\",\\n  \\"version\\": 2,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"p\\", null, \\"This sends a webhook notification confirming the creation of a virtual account\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"VirtualAccountCreated\\\\\\",\\\\n  \\\\\\"Version\\\\\\":2,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccountId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"A unique ID to identify the real (pooled) account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"VirtualAccountIdentifiers\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), mdx(\\"br\\", null), \\"Virtual account identifer object. It contains \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\". \\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\": Name of the account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\":The account description. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"VirtualAccountId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"A unique ID to identify the virtual account \\", mdx(\\"br\\", null), \\"Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"TimestampCreated\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Date and Time the virtual account was created\\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example virtual account created webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n         \\\\\\"Type\\\\\\": \\\\u201CVirtualAccountCreated\\\\u201D,\\\\n         \\\\\\"Version\\\\\\": 2,\\\\n         \\\\\\"Payload\\\\\\":\\\\n            {\\\\n               \\\\\\"ClientMoneyAccountId\\\\\\": \\\\\\"f9dc2a45-8ca8-8ade-d226-c90f4fa73203\\\\\\",\\\\n               \\\\\\"VirtualAccountIdentifiers\\\\\\": {\\\\n               \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK22002265781234\\\\\\",\\\\n               \\\\\\"BBAN\\\\\\": \\\\\\"CUBK22002265781234\\\\\\",\\\\n               \\\\\\"AccountName\\\\\\": \\\\\\"Betty Robson\\\\\\",\\\\n               \\\\\\"AccountHolderLabel\\\\\\": \\\\\\"B. H. Robson\\\\\\" (\\\\n                      },\\\\n            \\\\\\"VirtualAccountId\\\\\\": \\\\\\"f9b8fc04-3467-96cb-57bb-69cb1db4e189\\\\\\",\\\\n            \\\\\\"TimestampCreated\\\\\\": \\\\\\"2019-01-01T04:07:00.562Z\\\\\\"\\\\n                         }\\\\n           \\\\\\"Nonce\\\\\\": 8223026729\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 8223026729\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":2,"title":"Virtual Account Created Webhook"}}},{"node":{"fields":{"id":"17dc25b8-3fd0-5370-a4c6-a642969e9b2d","title":"Virtual Account Creation Failed Webhook","slug":"/virtual-account-creation-failed-v2"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n/* @jsx mdx */\\nvar _frontmatter = {\\n  \\"title\\": \\"Virtual Account Creation Failed Webhook\\",\\n  \\"version\\": 2,\\n  \\"webhook\\": true\\n};\\n\\nvar makeShortcode = function makeShortcode(name) {\\n  return function MDXDefaultShortcode(props) {\\n    console.warn(\\"Component \\" + name + \\" was not imported, exported, or provided by MDXProvider as global scope\\");\\n    return mdx(\\"div\\", props);\\n  };\\n};\\n\\nvar layoutProps = {\\n  _frontmatter: _frontmatter\\n};\\nvar MDXLayout = \\"wrapper\\";\\nreturn function MDXContent(_ref) {\\n  var components = _ref.components,\\n      props = _objectWithoutProperties(_ref, [\\"components\\"]);\\n\\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\\n    components: components,\\n    mdxType: \\"MDXLayout\\"\\n  }), mdx(\\"p\\", null, \\"This webhook confirms a virtual account creation failure\\"), mdx(\\"h4\\", null, \\"Request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Type\\\\\\":\\\\\\"VirtualAccountCreationFailed\\\\\\",\\\\n  \\\\\\"Version\\\\\\":2,\\\\n  \\\\\\"Payload\\\\\\": {...}\\\\n  \\\\\\"Nonce\\\\\\":\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Payload\\"), mdx(\\"table\\", null, mdx(\\"thead\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"thead\\"\\n  }, mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Element\\"), mdx(\\"th\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Description\\"))), mdx(\\"tbody\\", {\\n    parentName: \\"table\\"\\n  }, mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"VirtualAccountId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"A unique ID to identify the virtual account\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\" Max. length: 36\\")), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccountId\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"A unique ID to identify the real (pooled) account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"GUID\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"36\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"VirtualAccountIdentifiers\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"strong\\", {\\n    parentName: \\"td\\"\\n  }, \\"Required\\"), mdx(\\"br\\", null), \\"Virtual account identifer object. It contains \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\" and \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\". \\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"IBAN\\"), \\": International Bank Account Number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\"  \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"34\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), \\"  \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"BBAN\\"), \\": Basic Bank Account number associated with the account.\\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"30\\"), \\" \\", mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\": Name of the account. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"128\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\":The account description. \\", mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"string\\"), \\" \\", mdx(\\"br\\", null), \\" Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Errors\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"One or more errors that occurred during the processing of the request.\\", mdx(\\"br\\", null), \\"Max. length: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"100\\"), mdx(\\"br\\", null), mdx(\\"br\\", null), \\" Example errors: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"None\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccount\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccountId\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccountIban\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionId\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIban\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIbanSortCode\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIbanAccountNumber\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountBban\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountBbanSortCode\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountBbanAccountNumber\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIdentifiers\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountName\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountHolderLabel\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountCuid\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountUpic\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountIbanBankCode\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountBbanBankCode\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"ClientMoneyAccountIdMissing\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"InstitutionIdMissing\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"VirtualAccountIdMissing\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"AccountModulusFailed\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"SortCodeDoesNotBelongToInstitution\\"), \\", \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"SortCodeTypeIsIncorrect\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Timestamp\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Date and time the virtual account creation failed.\\", mdx(\\"br\\", null), \\" Time Zone: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"UTC\\"), mdx(\\"br\\", null), \\" Type: \\", mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"DateTime\\"))), mdx(\\"tr\\", {\\n    parentName: \\"tbody\\"\\n  }, mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), mdx(\\"inlineCode\\", {\\n    parentName: \\"td\\"\\n  }, \\"Nonce\\")), mdx(\\"td\\", _extends({\\n    parentName: \\"tr\\"\\n  }, {\\n    \\"align\\": null\\n  }), \\"Cryptographically secure number generated by ClearBank\\\\xAE for every single webhook. A nonce number is generated randomly and should not be used as a check for duplication.\\")))), mdx(\\"h4\\", null, \\"Example virtual account created webhook request body\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n         \\\\\\"Type\\\\\\": \\\\u201CVirtualAccountCreated\\\\u201D,\\\\n         \\\\\\"Version\\\\\\": 2,\\\\n         \\\\\\"Payload\\\\\\":\\\\n            {\\\\n               \\\\\\"ClientMoneyAccountId\\\\\\": \\\\\\"f9dc2a45-8ca8-8ade-d226-c90f4fa73203\\\\\\",\\\\n               \\\\\\"VirtualAccountIdentifiers\\\\\\": {\\\\n               \\\\\\"IBAN\\\\\\": \\\\\\"GB00CUBK22002265781234\\\\\\",\\\\n               \\\\\\"BBAN\\\\\\": \\\\\\"CUBK22002265781234\\\\\\",\\\\n               \\\\\\"AccountName\\\\\\": \\\\\\"Betty Robson\\\\\\",\\\\n               \\\\\\"AccountHolderLabel\\\\\\": \\\\\\"B. H. Robson\\\\\\" (\\\\n                      },\\\\n            \\\\\\"VirtualAccountId\\\\\\": \\\\\\"f9b8fc04-3467-96cb-57bb-69cb1db4e189\\\\\\",\\\\n            \\\\\\"TimestampCreated\\\\\\": \\\\\\"2019-01-01T04:07:00.562Z\\\\\\"\\\\n                         }\\\\n           \\\\\\"Nonce\\\\\\": 8223026729\\\\n}\\\\n\\")), mdx(\\"h4\\", null, \\"Example webhook response\\"), mdx(\\"pre\\", null, mdx(\\"code\\", _extends({\\n    parentName: \\"pre\\"\\n  }, {\\n    \\"className\\": \\"language-json\\"\\n  }), \\"{\\\\n  \\\\\\"Nonce\\\\\\": 8223026729\\\\n}\\\\n\\")));\\n}\\n;\\nMDXContent.isMDXComponent = true;","frontmatter":{"version":2,"title":"Virtual Account Creation Failed Webhook"}}}]}}}')},K0xU:function(e,t,n){var i=n("VTer")("wks"),r=n("ylqs"),o=n("dyZX").Symbol,a="function"==typeof o;(e.exports=function(e){return i[e]||(i[e]=a&&o[e]||(a?o:r)("Symbol."+e))}).store=i},KGCr:function(e){e.exports=JSON.parse('{"authorization":{"name":"Authorization","type":"string","location":"header","required":true,"methods":["get","post","patch","delete","request"],"body":"<p>Your API token retrieved from the portal.</p>","example":"curl -v -X GET https://institution-api-sim.clearbank.co.uk/v3/Accounts \\\\ \\n -H \\"Authorization: Bearer <<your api token>> \\""},"digitalSignature":{"name":"DigitalSignature","type":"string","location":"header","required":true,"methods":["post","patch","delete","request"],"body":"<p>This is a hash of the request body signed with your private key.</p>","example":null},"xRequestId":{"name":"X-Request-Id","type":"string","location":"header","required":true,"methods":["post","patch","delete","request"],"body":"<p>This is what ClearBank&reg; uses for idempotency and enables a duplication check. You generate this identifier which must be unique within a 24 hour period.</p><p> If an <code>X-Request-Id</code> Header is not supplied, or is invalid, a <code>400</code>:Bad Request HTTP status code response will be returned.</p><p>If ClearBank&reg; detects a duplicate, a <code>409</code>: Conflict HTTP status code response will be returned.<p>","example":null},"xCorrelationId":{"name":"X-Correlation-Id","type":"string","location":"header","required":false,"methods":["response"],"body":"<p>This is a unique identifier generated by ClearBank&reg; for the request. ClearBank&reg; would require this identifier for any troubleshooting so it is recommended you store this response header.</p>","example":null}}')},KKXr:function(e,t,n){"use strict";var i=n("quPj"),r=n("y3w9"),o=n("69bn"),a=n("A5AN"),s=n("ne8i"),c=n("Xxuz"),d=n("Ugos"),p=n("eeVq"),u=Math.min,l=[].push,h="length",m=!p((function(){RegExp(4294967295,"y")}));n("IU+Z")("split",2,(function(e,t,n,p){var f;return f="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[h]||2!="ab".split(/(?:ab)*/)[h]||4!=".".split(/(.?)(.?)/)[h]||".".split(/()()/)[h]>1||"".split(/.?/)[h]?function(e,t){var r=String(this);if(void 0===e&&0===t)return[];if(!i(e))return n.call(r,e,t);for(var o,a,s,c=[],p=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),u=0,m=void 0===t?4294967295:t>>>0,f=new RegExp(e.source,p+"g");(o=d.call(f,r))&&!((a=f.lastIndex)>u&&(c.push(r.slice(u,o.index)),o[h]>1&&o.index<r[h]&&l.apply(c,o.slice(1)),s=o[0][h],u=a,c[h]>=m));)f.lastIndex===o.index&&f.lastIndex++;return u===r[h]?!s&&f.test("")||c.push(""):c.push(r.slice(u)),c[h]>m?c.slice(0,m):c}:"0".split(void 0,0)[h]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,i){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r,i):f.call(String(r),n,i)},function(e,t){var i=p(f,e,this,t,f!==n);if(i.done)return i.value;var d=r(e),l=String(this),h=o(d,RegExp),y=d.unicode,g=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(m?"y":"g"),b=new h(m?d:"^(?:"+d.source+")",g),A=void 0===t?4294967295:t>>>0;if(0===A)return[];if(0===l.length)return null===c(b,l)?[l]:[];for(var D=0,C=0,T=[];C<l.length;){b.lastIndex=m?C:0;var I,R=c(b,m?l:l.slice(C));if(null===R||(I=u(s(b.lastIndex+(m?0:C)),l.length))===D)C=a(l,C,y);else{if(T.push(l.slice(D,C)),T.length===A)return T;for(var S=1;S<=R.length-1;S++)if(T.push(R[S]),T.length===A)return T;C=D=I}}return T.push(l.slice(D)),T}]}))},KroJ:function(e,t,n){var i=n("dyZX"),r=n("Mukb"),o=n("aagx"),a=n("ylqs")("src"),s=n("+lvF"),c=(""+s).split("toString");n("g3g5").inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,n,s){var d="function"==typeof n;d&&(o(n,"name")||r(n,"name",t)),e[t]!==n&&(d&&(o(n,a)||r(n,a,e[t]?""+e[t]:c.join(String(t)))),e===i?e[t]=n:s?e[t]?e[t]=n:r(e,t,n):(delete e[t],r(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[a]||s.call(this)}))},Kuth:function(e,t,n){var i=n("y3w9"),r=n("FJW5"),o=n("4R4u"),a=n("YTvA")("IE_PROTO"),s=function(){},c=function(){var e,t=n("Iw71")("iframe"),i=o.length;for(t.style.display="none",n("+rLv").appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;i--;)delete c.prototype[o[i]];return c()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=i(e),n=new s,s.prototype=null,n[a]=e):n=c(),void 0===t?n:r(n,t)}},L9s1:function(e,t,n){"use strict";var i=n("XKFU"),r=n("0sh+");i(i.P+i.F*n("UUeW")("includes"),"String",{includes:function(e){return!!~r(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},LHMV:function(e,t,n){"use strict";n("LK8F"),n("rGqo"),n("yt8O"),n("RW0V"),n("8+KV"),n("VRzm"),n("Btvt"),t.__esModule=!0,t.default=void 0;var i=d(n("c0Fl")),r=d(n("raBC")),o=d(n("+i7v")),a=d(n("ZfQF")),s=d(n("q5+k")),c=(d(n("yAlh")),n("OysZ"));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(){function e(e){var t=this,n=e.addTransitionHook,i=e.stateStorage,d=e.getCurrentLocation,p=e.shouldUpdateScroll;if(this._restoreScrollRestoration=function(){if(t._oldScrollRestoration)try{window.history.scrollRestoration=t._oldScrollRestoration}catch(e){}},this._onWindowScroll=function(){if(!t._ignoreScrollEvents&&(t._saveWindowPositionHandle||(t._saveWindowPositionHandle=(0,s.default)(t._saveWindowPosition)),t._windowScrollTarget)){var e=t._windowScrollTarget,n=e[0],i=e[1],r=(0,o.default)(window),c=(0,a.default)(window);r===n&&c===i&&(t._windowScrollTarget=null,t._cancelCheckWindowScroll())}},this._saveWindowPosition=function(){t._saveWindowPositionHandle=null,t._savePosition(null,window)},this._checkWindowScrollPosition=function(){return t._checkWindowScrollHandle=null,t._windowScrollTarget?(t.scrollToTarget(window,t._windowScrollTarget),++t._numWindowScrollAttempts,t._numWindowScrollAttempts>=2?(t._windowScrollTarget=null,Promise.resolve()):new Promise((function(e){t._checkWindowScrollHandle=(0,s.default)((function(){return e(t._checkWindowScrollPosition())}))}))):Promise.resolve()},this._stateStorage=i,this._getCurrentLocation=d,this._shouldUpdateScroll=p,"scrollRestoration"in window.history&&!(0,c.isMobileSafari)()){this._oldScrollRestoration=window.history.scrollRestoration;try{window.history.scrollRestoration="manual",(0,r.default)(window,"beforeunload",this._restoreScrollRestoration)}catch(u){this._oldScrollRestoration=null}}else this._oldScrollRestoration=null;this._saveWindowPositionHandle=null,this._checkWindowScrollHandle=null,this._windowScrollTarget=null,this._numWindowScrollAttempts=0,this._ignoreScrollEvents=!1,this._scrollElements={},(0,r.default)(window,"scroll",this._onWindowScroll),this._removeTransitionHook=n((function(){s.default.cancel(t._saveWindowPositionHandle),t._saveWindowPositionHandle=null,Object.keys(t._scrollElements).forEach((function(e){var n=t._scrollElements[e];s.default.cancel(n.savePositionHandle),n.savePositionHandle=null,t._ignoreScrollEvents||t._saveElementPosition(e)}))}))}var t=e.prototype;return t.registerElement=function(e,t,n,i){var o=this;this._scrollElements[e]&&invariant(!1);var a=function(){o._saveElementPosition(e)},c={element:t,shouldUpdateScroll:n,savePositionHandle:null,onScroll:function(){c.savePositionHandle||o._ignoreScrollEvents||(c.savePositionHandle=(0,s.default)(a))}};c.savePositionHandle||this._ignoreScrollEvents||(c.savePositionHandle=(0,s.default)(a)),this._scrollElements[e]=c,(0,r.default)(t,"scroll",c.onScroll),this._updateElementScroll(e,null,i)},t.unregisterElement=function(e){this._scrollElements[e]||invariant(!1);var t=this._scrollElements[e],n=t.element,r=t.onScroll,o=t.savePositionHandle;(0,i.default)(n,"scroll",r),s.default.cancel(o),delete this._scrollElements[e]},t.updateScroll=function(e,t){var n=this;this._updateWindowScroll(e,t).then((function(){n._saveWindowPositionHandle||(n._saveWindowPositionHandle=(0,s.default)(n._saveWindowPosition))})),Object.keys(this._scrollElements).forEach((function(i){n._updateElementScroll(i,e,t)}))},t.stop=function(){this._restoreScrollRestoration(),(0,i.default)(window,"scroll",this._onWindowScroll),this._cancelCheckWindowScroll(),this._removeTransitionHook()},t.startIgnoringScrollEvents=function(){this._ignoreScrollEvents=!0},t.stopIgnoringScrollEvents=function(){this._ignoreScrollEvents=!1},t._cancelCheckWindowScroll=function(){s.default.cancel(this._checkWindowScrollHandle),this._checkWindowScrollHandle=null},t._saveElementPosition=function(e){var t=this._scrollElements[e];t.savePositionHandle=null,this._savePosition(e,t.element)},t._savePosition=function(e,t){this._stateStorage.save(this._getCurrentLocation(),e,[(0,o.default)(t),(0,a.default)(t)])},t._updateWindowScroll=function(e,t){return this._cancelCheckWindowScroll(),this._windowScrollTarget=this._getScrollTarget(null,this._shouldUpdateScroll,e,t),this._numWindowScrollAttempts=0,this._checkWindowScrollPosition()},t._updateElementScroll=function(e,t,n){var i=this._scrollElements[e],r=i.element,o=i.shouldUpdateScroll,a=this._getScrollTarget(e,o,t,n);a&&this.scrollToTarget(r,a)},t._getDefaultScrollTarget=function(e){var t=e.hash;return t&&"#"!==t?"#"===t.charAt(0)?t.slice(1):t:[0,0]},t._getScrollTarget=function(e,t,n,i){var r=!t||t.call(this,n,i);if(!r||Array.isArray(r)||"string"==typeof r)return r;var o=this._getCurrentLocation();return this._getSavedScrollTarget(e,o)||this._getDefaultScrollTarget(o)},t._getSavedScrollTarget=function(e,t){return"PUSH"===t.action?null:this._stateStorage.read(t,e)},t.scrollToTarget=function(e,t){if("string"==typeof t){var n=document.getElementById(t)||document.getElementsByName(t)[0];if(n)return void n.scrollIntoView();t=[0,0]}var i=t,r=i[0],s=i[1];(0,o.default)(e,r),(0,a.default)(e,s)},e}();t.default=p,e.exports=t.default},LK8F:function(e,t,n){var i=n("XKFU");i(i.S,"Array",{isArray:n("EWmC")})},LQAc:function(e,t){e.exports=!1},LYrO:function(e,t,n){"use strict";n.d(t,"f",(function(){return o})),n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"d",(function(){return c})),n.d(t,"a",(function(){return d})),n.d(t,"g",(function(){return p})),n.d(t,"e",(function(){return A}));n("LK8F"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("pIFo"),n("DNiP"),n("0l/t"),n("Vd3H"),n("V+eJ"),n("bWfx"),n("KKXr");var i=n("yJwK"),r=n.n(i),o=function(e,t){return e.substr(0,t.length)===t},a=function(e,t){for(var n=void 0,i=void 0,o=t.split("?")[0],a=y(o),s=""===a[0],c=f(e),d=0,p=c.length;d<p;d++){var l=!1,m=c[d].route;if(m.default)i={route:m,params:{},uri:t};else{for(var g=y(m.path),A={},D=Math.max(a.length,g.length),C=0;C<D;C++){var T=g[C],I=a[C];if(h(T)){A[T.slice(1)||"*"]=a.slice(C).map(decodeURIComponent).join("/");break}if(void 0===I){l=!0;break}var R=u.exec(T);if(R&&!s){-1===b.indexOf(R[1])||r()(!1);var S=decodeURIComponent(I);A[R[1]]=S}else if(T!==I){l=!0;break}}if(!l){n={route:m,params:A,uri:"/"+a.slice(0,C).join("/")};break}}}return n||i||null},s=function(e,t){return a([{path:e}],t)},c=function(e,t){if(o(e,"/"))return e;var n=e.split("?"),i=n[0],r=n[1],a=t.split("?")[0],s=y(i),c=y(a);if(""===s[0])return g(a,r);if(!o(s[0],".")){var d=c.concat(s).join("/");return g(("/"===a?"":"/")+d,r)}for(var p=c.concat(s),u=[],l=0,h=p.length;l<h;l++){var m=p[l];".."===m?u.pop():"."!==m&&u.push(m)}return g("/"+u.join("/"),r)},d=function(e,t){return"/"+y(e).map((function(e){var n=u.exec(e);return n?t[n[1]]:e})).join("/")},p=function(e,t){var n=function(e){return l(e)};return y(e).filter(n).sort().join("/")===y(t).filter(n).sort().join("/")},u=/^:(.+)/,l=function(e){return u.test(e)},h=function(e){return e&&"*"===e[0]},m=function(e,t){return{route:e,score:e.default?0:y(e.path).reduce((function(e,t){return e+=4,!function(e){return""===e}(t)?l(t)?e+=2:h(t)?e-=5:e+=3:e+=1,e}),0),index:t}},f=function(e){return e.map(m).sort((function(e,t){return e.score<t.score?1:e.score>t.score?-1:e.index-t.index}))},y=function(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")},g=function(e,t){return e+(t?"?"+t:"")},b=["uri","path"],A=function(e,t){var n=Object.keys(e);return n.length===Object.keys(t).length&&n.every((function(n){return t.hasOwnProperty(n)&&e[n]===t[n]}))}},LZWt:function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},LeKB:function(e,t,n){e.exports=[{plugin:n("flL/"),options:{plugins:[],gatsbyRemarkPlugins:[{resolve:"gatsby-remark-images",options:{maxWidth:1035,sizeByPixelDensity:!0}},{resolve:"gatsby-remark-copy-linked-files"}],extensions:[".mdx",".md"]}},{plugin:n("b9Nj"),options:{plugins:[],trackingId:null,head:!0,anonymize:!1}},{plugin:n("GddB"),options:{plugins:[]}}]},Lgjv:function(e,t,n){var i=n("ne8i"),r=n("l0Rn"),o=n("vhPU");e.exports=function(e,t,n,a){var s=String(o(e)),c=s.length,d=void 0===n?" ":String(n),p=i(t);if(p<=c||""==d)return s;var u=p-c,l=r.call(d,Math.ceil(u/d.length));return l.length>u&&(l=l.slice(0,u)),a?l+s:s+l}},LyE8:function(e,t,n){"use strict";var i=n("eeVq");e.exports=function(e,t){return!!e&&i((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},M4XY:function(e,t,n){(function(t){n("pIFo"),n("a1Th"),n("h7Nl"),n("Btvt"),n("SRfc"),n("Oyvg");var i=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,r=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,o="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",a="["+o+"]",s="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",c="\\d+",d="[\\u2700-\\u27bf]",p="[a-z\\xdf-\\xf6\\xf8-\\xff]",u="[^\\ud800-\\udfff"+o+c+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",l="(?:\\ud83c[\\udde6-\\uddff]){2}",h="[\\ud800-\\udbff][\\udc00-\\udfff]",m="[A-Z\\xc0-\\xd6\\xd8-\\xde]",f="(?:"+p+"|"+u+")",y="(?:"+m+"|"+u+")",g="(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?",b="[\\ufe0e\\ufe0f]?"+g+("(?:\\u200d(?:"+["[^\\ud800-\\udfff]",l,h].join("|")+")[\\ufe0e\\ufe0f]?"+g+")*"),A="(?:"+[d,l,h].join("|")+")"+b,D=RegExp("['’]","g"),C=RegExp(s,"g"),T=RegExp([m+"?"+p+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[a,m,"$"].join("|")+")",y+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[a,m+f,"$"].join("|")+")",m+"?"+f+"+(?:['’](?:d|ll|m|re|s|t|ve))?",m+"+(?:['’](?:D|LL|M|RE|S|T|VE))?",c,A].join("|"),"g"),I=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,R="object"==typeof t&&t&&t.Object===Object&&t,S="object"==typeof self&&self&&self.Object===Object&&self,N=R||S||Function("return this")();var P,v=(P={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"ss"},function(e){return null==P?void 0:P[e]});var B=Object.prototype.toString,x=N.Symbol,w=x?x.prototype:void 0,L=w?w.toString:void 0;function O(e){if("string"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==B.call(e)}(e))return L?L.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function M(e){return null==e?"":O(e)}var U,E=(U=function(e,t,n){return e+(n?"-":"")+t.toLowerCase()},function(e){return function(e,t,n,i){var r=-1,o=e?e.length:0;for(i&&o&&(n=e[++r]);++r<o;)n=t(n,e[r],r,e);return n}(function(e,t,n){return e=M(e),void 0===(t=n?void 0:t)?function(e){return I.test(e)}(e)?function(e){return e.match(T)||[]}(e):function(e){return e.match(i)||[]}(e):e.match(t)||[]}(function(e){return(e=M(e))&&e.replace(r,v).replace(C,"")}(e).replace(D,"")),U,"")});e.exports=E}).call(this,n("yLpj"))},M6Qj:function(e,t,n){var i=n("hPIQ"),r=n("K0xU")("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||o[r]===e)}},ME5O:function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},MMVs:function(e,t,n){n("V+eJ"),e.exports=function(){var e=!1;-1!==navigator.appVersion.indexOf("MSIE 10")&&(e=!0);var t,n=[],i="object"==typeof document&&document,r=e?i.documentElement.doScroll("left"):i.documentElement.doScroll,o=i&&(r?/^loaded|^c/:/^loaded|^i|^c/).test(i.readyState);return!o&&i&&i.addEventListener("DOMContentLoaded",t=function(){for(i.removeEventListener("DOMContentLoaded",t),o=1;t=n.shift();)t()}),function(e){o?setTimeout(e,0):n.push(e)}}()},MfQN:function(e,t){e.exports=function(e,t,n){var i=void 0===n;switch(t.length){case 0:return i?e():e.call(n);case 1:return i?e(t[0]):e.call(n,t[0]);case 2:return i?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return i?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return i?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},MgzW:function(e,t,n){"use strict";n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("KKXr"),n("8+KV"),n("bWfx"),n("91GP"),n("ioFf");var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(r){return!1}}()?Object.assign:function(e,t){for(var n,s,c=a(e),d=1;d<arguments.length;d++){for(var p in n=Object(arguments[d]))r.call(n,p)&&(c[p]=n[p]);if(i){s=i(n);for(var u=0;u<s.length;u++)o.call(n,s[u])&&(c[s[u]]=n[s[u]])}}return c}},MiSq:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));n("LK8F"),n("bWfx"),n("f3/d"),n("a1Th"),n("h7Nl"),n("Btvt"),n("V+eJ"),n("pIFo");var i=function(e){for(var t,n=0,i=0,r=e.length;r>=4;++i,r-=4)t=1540483477*(65535&(t=255&e.charCodeAt(i)|(255&e.charCodeAt(++i))<<8|(255&e.charCodeAt(++i))<<16|(255&e.charCodeAt(++i))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(r){case 3:n^=(255&e.charCodeAt(i+2))<<16;case 2:n^=(255&e.charCodeAt(i+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(i)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)},r=n("ME5O"),o=n("4qRI"),a=/[A-Z]|^ms/g,s=/_EMO_([^_]+?)_([^]*?)_EMO_/g,c=function(e){return 45===e.charCodeAt(1)},d=function(e){return null!=e&&"boolean"!=typeof e},p=Object(o.a)((function(e){return c(e)?e:e.replace(a,"-$&").toLowerCase()})),u=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(s,(function(e,t,n){return h={name:t,styles:n,next:h},t}))}return 1===r.a[e]||c(e)||"number"!=typeof t||0===t?t:t+"px"};function l(e,t,n,i){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return h={name:n.name,styles:n.styles,next:h},n.name;if(void 0!==n.styles){var r=n.next;if(void 0!==r)for(;void 0!==r;)h={name:r.name,styles:r.styles,next:h},r=r.next;return n.styles+";"}return function(e,t,n){var i="";if(Array.isArray(n))for(var r=0;r<n.length;r++)i+=l(e,t,n[r],!1);else for(var o in n){var a=n[o];if("object"!=typeof a)null!=t&&void 0!==t[a]?i+=o+"{"+t[a]+"}":d(a)&&(i+=p(o)+":"+u(o,a)+";");else if(!Array.isArray(a)||"string"!=typeof a[0]||null!=t&&void 0!==t[a[0]]){var s=l(e,t,a,!1);switch(o){case"animation":case"animationName":i+=p(o)+":"+s+";";break;default:i+=o+"{"+s+"}"}}else for(var c=0;c<a.length;c++)d(a[c])&&(i+=p(o)+":"+u(o,a[c])+";")}return i}(e,t,n);case"function":if(void 0!==e){var o=h,a=n(e);return h=o,l(e,t,a,i)}break;case"string":}if(null==t)return n;var s=t[n];return void 0===s||i?n:s}var h,m=/label:\s*([^\s;\n{]+)\s*;/g;var f=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";h=void 0;var a=e[0];null==a||void 0===a.raw?(r=!1,o+=l(n,t,a,!1)):o+=a[0];for(var s=1;s<e.length;s++)o+=l(n,t,e[s],46===o.charCodeAt(o.length-1)),r&&(o+=a[s]);m.lastIndex=0;for(var c,d="";null!==(c=m.exec(o));)d+="-"+c[1];return{name:i(o)+d,styles:o,next:h}}},Mukb:function(e,t,n){var i=n("hswa"),r=n("RjD/");e.exports=n("nh4g")?function(e,t,n){return i.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},N6Kw:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n("vOnD"),r=n("SlEa"),o={blue:{background:r.b.bonusBlue,border:r.b.businessBlue}},a=i.b.aside.withConfig({componentId:"sc-1kzya0-0"})(["padding:20px;color:",";background:",";border-radius:4px;border-left:6px solid ",";p,div{font-size:16px;color:",";font-family:",";}"],r.b.businessBlue,(function(e){var t=e.color;return t in o?o[t].background:"none"}),(function(e){var t=e.color;return t in o?o[t].border:"none"}),r.b.businessBlue,r.d.body)},N8g3:function(e,t,n){t.f=n("K0xU")},NSX3:function(e,t,n){"use strict";n.r(t);var i=n("xtsi");"https:"!==window.location.protocol&&"localhost"!==window.location.hostname?console.error("Service workers can only be used over HTTPS, or on localhost for development"):"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then((function(e){e.addEventListener("updatefound",(function(){Object(i.apiRunner)("onServiceWorkerUpdateFound",{serviceWorker:e});var t=e.installing;console.log("installingWorker",t),t.addEventListener("statechange",(function(){switch(t.state){case"installed":navigator.serviceWorker.controller?(window.___swUpdated=!0,Object(i.apiRunner)("onServiceWorkerUpdateReady",{serviceWorker:e}),window.___failedResources&&(console.log("resources failed, SW updated - reloading"),window.location.reload())):(console.log("Content is now available offline!"),Object(i.apiRunner)("onServiceWorkerInstalled",{serviceWorker:e}));break;case"redundant":console.error("The installing service worker became redundant."),Object(i.apiRunner)("onServiceWorkerRedundant",{serviceWorker:e});break;case"activated":Object(i.apiRunner)("onServiceWorkerActive",{serviceWorker:e})}}))}))})).catch((function(e){console.error("Error during service worker registration:",e)}))},Nr18:function(e,t,n){"use strict";var i=n("S/j/"),r=n("d/Gc"),o=n("ne8i");e.exports=function(e){for(var t=i(this),n=o(t.length),a=arguments.length,s=r(a>1?arguments[1]:void 0,n),c=a>2?arguments[2]:void 0,d=void 0===c?n:r(c,n);d>s;)t[s++]=e;return t}},OEbY:function(e,t,n){n("nh4g")&&"g"!=/./g.flags&&n("hswa").f(RegExp.prototype,"flags",{configurable:!0,get:n("C/va")})},OG14:function(e,t,n){"use strict";var i=n("y3w9"),r=n("g6HL"),o=n("Xxuz");n("IU+Z")("search",1,(function(e,t,n,a){return[function(n){var i=e(this),r=null==n?void 0:n[t];return void 0!==r?r.call(n,i):new RegExp(n)[t](String(i))},function(e){var t=a(n,e,this);if(t.done)return t.value;var s=i(e),c=String(this),d=s.lastIndex;r(d,0)||(s.lastIndex=0);var p=o(s,c);return r(s.lastIndex,d)||(s.lastIndex=d),null===p?-1:p.index}]}))},OGtf:function(e,t,n){var i=n("XKFU"),r=n("eeVq"),o=n("vhPU"),a=/"/g,s=function(e,t,n,i){var r=String(o(e)),s="<"+t;return""!==n&&(s+=" "+n+'="'+String(i).replace(a,"&quot;")+'"'),s+">"+r+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(s),i(i.P+i.F*r((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},OJSm:function(e,t,n){"use strict";n.r(t),n.d(t,"get",(function(){return r})),n.d(t,"responsive",(function(){return l})),n.d(t,"css",(function(){return h}));n("LK8F"),n("DNiP"),n("bWfx"),n("KKXr"),n("91GP");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var r=function(e,t,n,i,r){for(t=t&&t.split?t.split("."):[t],i=0;i<t.length;i++)e=e?e[t[i]]:r;return e===r?n:e},o=[40,52,64].map((function(e){return e+"em"})),a={space:[0,4,8,16,32,64,128,256,512],fontSizes:[12,14,16,20,24,32,48,64,72]},s={bg:"backgroundColor",m:"margin",mt:"marginTop",mr:"marginRight",mb:"marginBottom",ml:"marginLeft",mx:"marginX",my:"marginY",p:"padding",pt:"paddingTop",pr:"paddingRight",pb:"paddingBottom",pl:"paddingLeft",px:"paddingX",py:"paddingY"},c={marginX:["marginLeft","marginRight"],marginY:["marginTop","marginBottom"],paddingX:["paddingLeft","paddingRight"],paddingY:["paddingTop","paddingBottom"],size:["width","height"]},d={color:"colors",backgroundColor:"colors",borderColor:"colors",margin:"space",marginTop:"space",marginRight:"space",marginBottom:"space",marginLeft:"space",marginX:"space",marginY:"space",padding:"space",paddingTop:"space",paddingRight:"space",paddingBottom:"space",paddingLeft:"space",paddingX:"space",paddingY:"space",top:"space",right:"space",bottom:"space",left:"space",gridGap:"space",gridColumnGap:"space",gridRowGap:"space",gap:"space",columnGap:"space",rowGap:"space",fontFamily:"fonts",fontSize:"fontSizes",fontWeight:"fontWeights",lineHeight:"lineHeights",letterSpacing:"letterSpacings",border:"borders",borderTop:"borders",borderRight:"borders",borderBottom:"borders",borderLeft:"borders",borderWidth:"borderWidths",borderStyle:"borderStyles",borderRadius:"radii",borderTopRightRadius:"radii",borderTopLeftRadius:"radii",borderBottomRightRadius:"radii",borderBottomLeftRadius:"radii",borderTopWidth:"borderWidths",borderTopColor:"colors",borderTopStyle:"borderStyles",borderBottomWidth:"borderWidths",borderBottomColor:"colors",borderBottomStyle:"borderStyles",borderLeftWidth:"borderWidths",borderLeftColor:"colors",borderLeftStyle:"borderStyles",borderRightWidth:"borderWidths",borderRightColor:"colors",borderRightStyle:"borderStyles",outlineColor:"colors",boxShadow:"shadows",textShadow:"shadows",zIndex:"zIndices",width:"sizes",minWidth:"sizes",maxWidth:"sizes",height:"sizes",minHeight:"sizes",maxHeight:"sizes",flexBasis:"sizes",size:"sizes",fill:"colors",stroke:"colors"},p=function(e,t){if("number"!=typeof t||t>=0)return r(e,t,t);var n=Math.abs(t),i=r(e,n,n);return"string"==typeof i?"-"+i:-1*i},u=["margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","top","bottom","left","right"].reduce((function(e,t){var n;return i({},e,((n={})[t]=p,n))}),{}),l=function(e){return function(t){var n={},i=r(t,"breakpoints",o),a=[null].concat(i.map((function(e){return"@media screen and (min-width: "+e+")"})));for(var s in e){var c="function"==typeof e[s]?e[s](t):e[s];if(null!=c)if(Array.isArray(c))for(var d=0;d<c.slice(0,a.length).length;d++){var p=a[d];p?(n[p]=n[p]||{},null!=c[d]&&(n[p][s]=c[d])):n[s]=c[d]}else n[s]=c}return n}},h=function e(t){return function(n){void 0===n&&(n={});var o=i({},a,{},n.theme||n),p={},h="function"==typeof t?t(o):t,m=l(h)(o);for(var f in m){var y=m[f],g="function"==typeof y?y(o):y;if("variant"!==f)if(g&&"object"==typeof g)p[f]=e(g)(o);else{var b=r(s,f,f),A=r(d,b),D=r(o,A,r(o,b,{})),C=r(u,b,r)(D,g,g);if(c[b])for(var T=c[b],I=0;I<T.length;I++)p[T[I]]=C;else p[b]=C}else p=i({},p,{},e(r(o,g))(o))}return p}};t.default=h},OP3Y:function(e,t,n){var i=n("aagx"),r=n("S/j/"),o=n("YTvA")("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),i(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},OnI7:function(e,t,n){var i=n("dyZX"),r=n("g3g5"),o=n("LQAc"),a=n("N8g3"),s=n("hswa").f;e.exports=function(e){var t=r.Symbol||(r.Symbol=o?{}:i.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},OysZ:function(e,t,n){"use strict";t.__esModule=!0,t.isMobileSafari=function(){return/iPad|iPhone|iPod/.test(window.navigator.platform)&&/^((?!CriOS).)*Safari/.test(window.navigator.userAgent)}},Oyvg:function(e,t,n){var i=n("dyZX"),r=n("Xbzi"),o=n("hswa").f,a=n("kJMx").f,s=n("quPj"),c=n("C/va"),d=i.RegExp,p=d,u=d.prototype,l=/a/g,h=/a/g,m=new d(l)!==l;if(n("nh4g")&&(!m||n("eeVq")((function(){return h[n("K0xU")("match")]=!1,d(l)!=l||d(h)==h||"/a/i"!=d(l,"i")})))){d=function(e,t){var n=this instanceof d,i=s(e),o=void 0===t;return!n&&i&&e.constructor===d&&o?e:r(m?new p(i&&!o?e.source:e,t):p((i=e instanceof d)?e.source:e,i&&o?c.call(e):t),n?this:u,d)};for(var f=function(e){e in d||o(d,e,{configurable:!0,get:function(){return p[e]},set:function(t){p[e]=t}})},y=a(p),g=0;y.length>g;)f(y[g++]);u.constructor=d,d.prototype=u,n("KroJ")(i,"RegExp",d)}n("elZq")("RegExp")},P5Jw:function(e,t,n){"use strict";var i=n("rHrb").CopyToClipboard;i.CopyToClipboard=i,e.exports=i},QaDb:function(e,t,n){"use strict";var i=n("Kuth"),r=n("RjD/"),o=n("fyDq"),a={};n("Mukb")(a,n("K0xU")("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=i(a,{next:r(1,n)}),o(e,t+" Iterator")}},RW0V:function(e,t,n){var i=n("S/j/"),r=n("DVgA");n("Xtr8")("keys",(function(){return function(e){return r(i(e))}}))},RYi7:function(e,t){var n=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:n)(e)}},"RjD/":function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},"S/j/":function(e,t,n){var i=n("vhPU");e.exports=function(e){return Object(i(e))}},SIPS:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return r}));n("f3/d"),n("KKXr"),n("8+KV");function i(e,t,n){var i="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]):i+=n+" "})),i}var r=function(e,t,n){var i=e.key+"-"+t.name;if(!1===n&&void 0===e.registered[i]&&(e.registered[i]=t.styles),void 0===e.inserted[t.name]){var r=t;do{e.insert("."+i,r,e.sheet,!0);r=r.next}while(void 0!==r)}}},SPin:function(e,t,n){"use strict";var i=n("XKFU"),r=n("eyMr");i(i.P+i.F*!n("LyE8")([].reduceRight,!0),"Array",{reduceRight:function(e){return r(this,e,arguments.length,arguments[1],!0)}})},SRfc:function(e,t,n){"use strict";var i=n("y3w9"),r=n("ne8i"),o=n("A5AN"),a=n("Xxuz");n("IU+Z")("match",1,(function(e,t,n,s){return[function(n){var i=e(this),r=null==n?void 0:n[t];return void 0!==r?r.call(n,i):new RegExp(n)[t](String(i))},function(e){var t=s(n,e,this);if(t.done)return t.value;var c=i(e),d=String(this);if(!c.global)return a(c,d);var p=c.unicode;c.lastIndex=0;for(var u,l=[],h=0;null!==(u=a(c,d));){var m=String(u[0]);l[h]=m,""===m&&(c.lastIndex=o(d,r(c.lastIndex),p)),h++}return 0===h?null:l}]}))},SVOR:function(e,t,n){"use strict";n("Tze0"),n("KKXr"),n("0l/t"),n("V+eJ"),n("WLL4"),n("LK8F"),n("rGqo"),n("yt8O"),n("RW0V"),n("Oyvg"),n("8+KV"),n("HAE/"),n("a1Th"),n("h7Nl"),n("Btvt"),n("SRfc"),n("pIFo"),n("bWfx");var i,r,o,a=(i=0,r={util:{encode:function(e){return e instanceof o?new o(e.type,r.util.encode(e.content),e.alias):"Array"===r.util.type(e)?e.map(r.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++i}),e.__id},clone:function(e,t){var n=r.util.type(e);switch(t=t||{},n){case"Object":if(t[r.util.objId(e)])return t[r.util.objId(e)];for(var i in o={},t[r.util.objId(e)]=o,e)e.hasOwnProperty(i)&&(o[i]=r.util.clone(e[i],t));return o;case"Array":if(t[r.util.objId(e)])return t[r.util.objId(e)];var o=[];return t[r.util.objId(e)]=o,e.forEach((function(e,n){o[n]=r.util.clone(e,t)})),o}return e}},languages:{extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var i in t)n[i]=t[i];return n},insertBefore:function(e,t,n,i){var o=(i=i||r.languages)[e];if(2==arguments.length){for(var a in n=arguments[1])n.hasOwnProperty(a)&&(o[a]=n[a]);return o}var s={};for(var c in o)if(o.hasOwnProperty(c)){if(c==t)for(var a in n)n.hasOwnProperty(a)&&(s[a]=n[a]);s[c]=o[c]}return r.languages.DFS(r.languages,(function(t,n){n===i[e]&&t!=e&&(this[t]=s)})),i[e]=s},DFS:function(e,t,n,i){for(var o in i=i||{},e)e.hasOwnProperty(o)&&(t.call(e,o,e[o],n||o),"Object"!==r.util.type(e[o])||i[r.util.objId(e[o])]?"Array"!==r.util.type(e[o])||i[r.util.objId(e[o])]||(i[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,o,i)):(i[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,null,i)))}},plugins:{},highlight:function(e,t,n){var i={code:e,grammar:t,language:n};return i.tokens=r.tokenize(i.code,i.grammar),o.stringify(r.util.encode(i.tokens),i.language)},matchGrammar:function(e,t,n,i,o,a,s){var c=r.Token;for(var d in n)if(n.hasOwnProperty(d)&&n[d]){if(d==s)return;var p=n[d];p="Array"===r.util.type(p)?p:[p];for(var u=0;u<p.length;++u){var l=p[u],h=l.inside,m=!!l.lookbehind,f=!!l.greedy,y=0,g=l.alias;if(f&&!l.pattern.global){var b=l.pattern.toString().match(/[imuy]*$/)[0];l.pattern=RegExp(l.pattern.source,b+"g")}l=l.pattern||l;for(var A=i,D=o;A<t.length;D+=t[A].length,++A){var C=t[A];if(t.length>e.length)return;if(!(C instanceof c)){if(f&&A!=t.length-1){if(l.lastIndex=D,!(P=l.exec(e)))break;for(var T=P.index+(m?P[1].length:0),I=P.index+P[0].length,R=A,S=D,N=t.length;R<N&&(S<I||!t[R].type&&!t[R-1].greedy);++R)T>=(S+=t[R].length)&&(++A,D=S);if(t[A]instanceof c)continue;v=R-A,C=e.slice(D,S),P.index-=D}else{l.lastIndex=0;var P=l.exec(C),v=1}if(P){m&&(y=P[1]?P[1].length:0),I=(T=P.index+y)+(P=P[0].slice(y)).length;var B=C.slice(0,T),x=C.slice(I),w=[A,v];B&&(++A,D+=B.length,w.push(B));var L=new c(d,h?r.tokenize(P,h):P,g,P,f);if(w.push(L),x&&w.push(x),Array.prototype.splice.apply(t,w),1!=v&&r.matchGrammar(e,t,n,A,D,!0,d),a)break}else if(a)break}}}}},hooks:{add:function(){}},tokenize:function(e,t,n){var i=[e],o=t.rest;if(o){for(var a in o)t[a]=o[a];delete t.rest}return r.matchGrammar(e,i,t,0,0,!1),i}},(o=r.Token=function(e,t,n,i,r){this.type=e,this.content=t,this.alias=n,this.length=0|(i||"").length,this.greedy=!!r}).stringify=function(e,t,n){if("string"==typeof e)return e;if("Array"===r.util.type(e))return e.map((function(n){return o.stringify(n,t,e)})).join("");var i={type:e.type,content:o.stringify(e.content,t,n),tag:"span",classes:["token",e.type],attributes:{},language:t,parent:n};if(e.alias){var a="Array"===r.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,a)}var s=Object.keys(i.attributes).map((function(e){return e+'="'+(i.attributes[e]||"").replace(/"/g,"&quot;")+'"'})).join(" ");return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+(s?" "+s:"")+">"+i.content+"</"+i.tag+">"},r);a.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},a.languages.markup.tag.inside["attr-value"].inside.entity=a.languages.markup.entity,a.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(a.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:a.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var i={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};i["language-"+t]={pattern:/[\s\S]+/,inside:a.languages[t]};var r={};r[e]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,e),"i"),lookbehind:!0,greedy:!0,inside:i},a.languages.insertBefore("markup","cdata",r)}}),a.languages.xml=a.languages.extend("markup",{}),a.languages.html=a.languages.markup,a.languages.mathml=a.languages.markup,a.languages.svg=a.languages.markup,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b\w+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:n},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0},{pattern:/(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/,greedy:!0,inside:n}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:n.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}};for(var i=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],r=n.variable[1].inside,o=0;o<i.length;o++)r[i[o]]=e.languages.bash[i[o]];e.languages.shell=e.languages.bash}(a),a.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},a.languages.c=a.languages.extend("clike",{"class-name":{pattern:/(\b(?:enum|struct)\s+)\w+/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/,number:/(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i}),a.languages.insertBefore("c","string",{macro:{pattern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,alias:"property",inside:{string:{pattern:/(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,lookbehind:!0},directive:{pattern:/(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,lookbehind:!0,alias:"keyword"}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete a.languages.c.boolean,a.languages.cpp=a.languages.extend("c",{"class-name":{pattern:/(\b(?:class|enum|struct)\s+)\w+/,lookbehind:!0},keyword:/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i,greedy:!0},operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),a.languages.insertBefore("cpp","string",{"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),function(e){var t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,inside:{rule:/@[\w-]+/}},url:{pattern:RegExp("url\\((?:"+t.source+"|[^\n\r()]*)\\)","i"),inside:{function:/^url/i,punctuation:/^\(|\)$/}},selector:RegExp("[^{}\\s](?:[^{};\"']|"+t.source+")*?(?=\\s*\\{)"),string:{pattern:t,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),e.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:n.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:e.languages.css}},alias:"language-css"}},n.tag))}(a),a.languages.css.selector={pattern:a.languages.css.selector,inside:{"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-:.\w]+/,id:/#[-:.\w]+/,attribute:{pattern:/\[(?:[^[\]"']|("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1)*\]/,greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)[-*\w\xA0-\uFFFF]*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},attribute:{pattern:/^(\s*)[-\w\xA0-\uFFFF]+/,lookbehind:!0},value:[/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,{pattern:/(=\s*)[-\w\xA0-\uFFFF]+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],punctuation:/[()]/}},a.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*/i,lookbehind:!0}}),a.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:/#[\da-f]{3,8}/i,entity:/\\[\da-f]{1,8}/i,unit:{pattern:/(\d)(?:%|[a-z]+)/,lookbehind:!0},number:/-?[\d.]+/}),a.languages.javascript=a.languages.extend("clike",{"class-name":[a.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,function:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),a.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,a.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:a.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:a.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:a.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:a.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),a.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:a.languages.javascript}},string:/[\s\S]+/}}}),a.languages.markup&&a.languages.markup.tag.addInlined("script","javascript"),a.languages.js=a.languages.javascript,function(e){var t=e.util.clone(e.languages.javascript);e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=/<\/?(?:[\w.:-]+\s*(?:\s+(?:[\w.:-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s{'">=]+|\{(?:\{(?:\{[^}]*\}|[^{}])*\}|[^{}])+\}))?|\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}))*\s*\/?)?>/i,e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/i,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.insertBefore("inside","attr-name",{spread:{pattern:/\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}/,inside:{punctuation:/\.{3}|[{}.]/,"attr-value":/\w+/}}},e.languages.jsx.tag),e.languages.insertBefore("inside","attr-value",{script:{pattern:/=(\{(?:\{(?:\{[^}]*\}|[^}])*\}|[^}])+\})/i,inside:{"script-punctuation":{pattern:/^=(?={)/,alias:"punctuation"},rest:e.languages.jsx},alias:"language-javascript"}},e.languages.jsx.tag);var n=function e(t){return t?"string"==typeof t?t:"string"==typeof t.content?t.content:t.content.map(e).join(""):""};e.hooks.add("after-tokenize",(function(t){"jsx"!==t.language&&"tsx"!==t.language||function t(i){for(var r=[],o=0;o<i.length;o++){var a=i[o],s=!1;if("string"!=typeof a&&("tag"===a.type&&a.content[0]&&"tag"===a.content[0].type?"</"===a.content[0].content[0].content?r.length>0&&r[r.length-1].tagName===n(a.content[0].content[1])&&r.pop():"/>"===a.content[a.content.length-1].content||r.push({tagName:n(a.content[0].content[1]),openedBraces:0}):r.length>0&&"punctuation"===a.type&&"{"===a.content?r[r.length-1].openedBraces++:r.length>0&&r[r.length-1].openedBraces>0&&"punctuation"===a.type&&"}"===a.content?r[r.length-1].openedBraces--:s=!0),(s||"string"==typeof a)&&r.length>0&&0===r[r.length-1].openedBraces){var c=n(a);o<i.length-1&&("string"==typeof i[o+1]||"plain-text"===i[o+1].type)&&(c+=n(i[o+1]),i.splice(o+1,1)),o>0&&("string"==typeof i[o-1]||"plain-text"===i[o-1].type)&&(c=n(i[o-1])+c,i.splice(o-1,1),o--),i[o]=new e.Token("plain-text",c,null,c)}a.content&&"string"!=typeof a.content&&t(a.content)}}(t.tokens)}))}(a),function(e){var t=e.languages.javadoclike={parameter:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(t,"addSupport",{value:function(t,n){"string"==typeof t&&(t=[t]),t.forEach((function(t){!function(t,n){var i=e.languages[t];if(i){var r=i["doc-comment"];if(!r){var o={"doc-comment":{pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,alias:"comment"}};r=(i=e.languages.insertBefore(t,"comment",o))["doc-comment"]}if(r instanceof RegExp&&(r=i["doc-comment"]={pattern:r}),Array.isArray(r))for(var a=0,s=r.length;a<s;a++)r[a]instanceof RegExp&&(r[a]={pattern:r[a]}),n(r[a]);else n(r)}}(t,(function(e){e.inside||(e.inside={}),e.inside.rest=n}))}))}}),t.addSupport(["java","javascript","php"],t)}(a),function(e){var t=/\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\b/,n=/\b[A-Z](?:\w*[a-z]\w*)?\b/;e.languages.java=e.languages.extend("clike",{"class-name":[n,/\b[A-Z]\w*(?=\s+\w+\s*[;,=())])/],keyword:t,function:[e.languages.clike.function,{pattern:/(\:\:)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x[\da-f_]*\.?[\da-f_p+-]+\b|(?:\b\d[\d_]*\.?[\d_]*|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\2|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore("java","class-name",{annotation:{alias:"punctuation",pattern:/(^|[^.])@\w+/,lookbehind:!0},namespace:{pattern:/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)[a-z]\w*(\.[a-z]\w*)+/,lookbehind:!0,inside:{punctuation:/\./}},generics:{pattern:/<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,inside:{"class-name":n,keyword:t,punctuation:/[<>(),.:]/,operator:/[?&|]/}}})}(a),function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,i,r,o){if(n.language===i){var a=n.tokenStack=[];n.code=n.code.replace(r,(function(e){if("function"==typeof o&&!o(e))return e;for(var r,s=a.length;-1!==n.code.indexOf(r=t(i,s));)++s;return a[s]=e,r})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,i){if(n.language===i&&n.tokenStack){n.grammar=e.languages[i];var r=0,o=Object.keys(n.tokenStack);!function a(s){for(var c=0;c<s.length&&!(r>=o.length);c++){var d=s[c];if("string"==typeof d||d.content&&"string"==typeof d.content){var p=o[r],u=n.tokenStack[p],l="string"==typeof d?d:d.content,h=t(i,p),m=l.indexOf(h);if(m>-1){++r;var f=l.substring(0,m),y=new e.Token(i,e.tokenize(u,n.grammar),"language-"+i,u),g=l.substring(m+h.length),b=[];f&&b.push.apply(b,a([f])),b.push(y),g&&b.push.apply(b,a([g])),"string"==typeof d?s.splice.apply(s,[c,1].concat(b)):d.content=b}}else d.content&&a(d.content)}return s}(n.tokens)}}}})}(a),function(e){e.languages.php=e.languages.extend("clike",{keyword:/\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,boolean:{pattern:/\b(?:false|true)\b/i,alias:"constant"},constant:[/\b[A-Z_][A-Z0-9_]*\b/,/\b(?:null)\b/i],comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0}}),e.languages.insertBefore("php","string",{"shell-comment":{pattern:/(^|[^\\])#.*/,lookbehind:!0,alias:"comment"}}),e.languages.insertBefore("php","comment",{delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"}}),e.languages.insertBefore("php","keyword",{variable:/\$+(?:\w+\b|(?={))/i,package:{pattern:/(\\|namespace\s+|use\s+)[\w\\]+/,lookbehind:!0,inside:{punctuation:/\\/}}}),e.languages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/,lookbehind:!0}});var t={pattern:/{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,lookbehind:!0,inside:{rest:e.languages.php}};e.languages.insertBefore("php","string",{"nowdoc-string":{pattern:/<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},"heredoc-string":{pattern:/<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:t}},"single-quoted-string":{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0,alias:"string"},"double-quoted-string":{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,alias:"string",inside:{interpolation:t}}}),delete e.languages.php.string,e.hooks.add("before-tokenize",(function(t){if(/<\?/.test(t.code)){e.languages["markup-templating"].buildPlaceholders(t,"php",/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#)(?:[^?\n\r]|\?(?!>))*|\/\*[\s\S]*?(?:\*\/|$))*?(?:\?>|$)/gi)}})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"php")}))}(a),function(e){var t=e.languages.javascript,n=/{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source,i="(@(?:param|arg|argument|property)\\s+(?:"+n+"\\s+)?)";e.languages.jsdoc=e.languages.extend("javadoclike",{parameter:{pattern:RegExp(i+/[$\w\xA0-\uFFFF.]+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),e.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(i+/\[[$\w\xA0-\uFFFF.]+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:t,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp("(@[a-z]+\\s+)"+n),lookbehind:!0,inside:{punctuation:/[.,:?=<>|{}()[\]]/}},{pattern:/(@(?:augments|extends|class|interface|memberof!?|this)\s+)[A-Z]\w*(?:\.[A-Z]\w*)*/,lookbehind:!0,inside:{punctuation:/\./}}],example:{pattern:/(@example\s+)[^@]+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^(\s*(?:\*\s*)?).+$/m,lookbehind:!0,inside:t,alias:"language-javascript"}}}}),e.languages.javadoclike.addSupport("javascript",e.languages.jsdoc)}(a),a.languages.actionscript=a.languages.extend("javascript",{keyword:/\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\b/,operator:/\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),a.languages.actionscript["class-name"].alias="function",a.languages.markup&&a.languages.insertBefore("actionscript","string",{xml:{pattern:/(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,lookbehind:!0,inside:{rest:a.languages.markup}}}),function(e){var t=/#(?!\{).+/,n={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:n}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},rest:e.languages.javascript}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:n}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(a),function(e){e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:/(\.\s*)#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*/,lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var t=["function","function-variable","method","method-variable","property-access"],n=0;n<t.length;n++){var i=t[n],r=e.languages.javascript[i];"RegExp"===e.util.type(r)&&(r=e.languages.javascript[i]={pattern:r});var o=r.inside||{};r.inside=o,o["maybe-class-name"]=/^[A-Z][\s\S]*/}}(a),function(e){e.languages.flow=e.languages.extend("javascript",{}),e.languages.insertBefore("flow","keyword",{type:[{pattern:/\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\b/,alias:"tag"}]}),e.languages.flow["function-variable"].pattern=/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,delete e.languages.flow.parameter,e.languages.insertBefore("flow","operator",{"flow-punctuation":{pattern:/\{\||\|\}/,alias:"punctuation"}}),Array.isArray(e.languages.flow.keyword)||(e.languages.flow.keyword=[e.languages.flow.keyword]),e.languages.flow.keyword.unshift({pattern:/(^|[^$]\b)(?:type|opaque|declare|Class)\b(?!\$)/,lookbehind:!0},{pattern:/(^|[^$]\B)\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\b(?!\$)/,lookbehind:!0})}(a),a.languages.n4js=a.languages.extend("javascript",{keyword:/\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/}),a.languages.insertBefore("n4js","constant",{annotation:{pattern:/@+\w+/,alias:"operator"}}),a.languages.n4jsd=a.languages.n4js,a.languages.typescript=a.languages.extend("javascript",{keyword:/\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\b/,builtin:/\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/}),a.languages.ts=a.languages.typescript,function(e){var t=e.languages.javascript["template-string"],n=t.pattern.source,i=t.inside.interpolation,r=i.inside["interpolation-punctuation"],o=i.pattern.source;function a(t,i){if(e.languages[t])return{pattern:RegExp("((?:"+i+")\\s*)"+n),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function s(e,t){return"___"+t.toUpperCase()+"_"+e+"___"}function c(t,n,i){var r={code:t,grammar:n,language:i};return e.hooks.run("before-tokenize",r),r.tokens=e.tokenize(r.code,r.grammar),e.hooks.run("after-tokenize",r),r.tokens}function d(t){var n={};n["interpolation-punctuation"]=r;var o=e.tokenize(t,n);if(3===o.length){var a=[1,1];a.push.apply(a,c(o[1],e.languages.javascript,"javascript")),o.splice.apply(o,a)}return new e.Token("interpolation",o,i.alias,t)}function p(t,n,i){var r=e.tokenize(t,{interpolation:{pattern:RegExp(o),lookbehind:!0}}),a=0,p={},u=c(r.map((function(e){if("string"==typeof e)return e;for(var n,r=e.content;-1!==t.indexOf(n=s(a++,i)););return p[n]=r,n})).join(""),n,i),l=Object.keys(p);return a=0,function e(t){for(var n=0;n<t.length;n++){if(a>=l.length)return;var i=t[n];if("string"==typeof i||"string"==typeof i.content){var r=l[a],o="string"==typeof i?i:i.content,s=o.indexOf(r);if(-1!==s){++a;var c=o.substring(0,s),u=d(p[r]),h=o.substring(s+r.length),m=[];if(c&&m.push(c),m.push(u),h){var f=[h];e(f),m.push.apply(m,f)}"string"==typeof i?(t.splice.apply(t,[n,1].concat(m)),n+=m.length-1):i.content=m}}else{var y=i.content;Array.isArray(y)?e(y):e([y])}}}(u),new e.Token(i,u,"language-"+i,t)}e.languages.javascript["template-string"]=[a("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),a("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),a("svg",/\bsvg/.source),a("markdown",/\b(?:md|markdown)/.source),a("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),t].filter(Boolean);var u={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function l(e){return"string"==typeof e?e:Array.isArray(e)?e.map(l).join(""):l(e.content)}e.hooks.add("after-tokenize",(function(t){t.language in u&&function t(n){for(var i=0,r=n.length;i<r;i++){var o=n[i];if("string"!=typeof o){var a=o.content;if(Array.isArray(a))if("template-string"===o.type){var s=a[1];if(3===a.length&&"string"!=typeof s&&"embedded-code"===s.type){var c=l(s),d=s.alias,u=Array.isArray(d)?d[0]:d,h=e.languages[u];if(!h)continue;a[1]=p(c,h,u)}}else t(a);else"string"!=typeof a&&t([a])}}}(t.tokens)}))}(a),a.languages.graphql={comment:/#.*/,string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:true|false)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+)[a-zA-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\b/,operator:/[!=|]|\.{3}/,punctuation:/[!(){}\[\]:=,]/,constant:/\b(?!ID\b)[A-Z][A-Z_\d]*\b/},function(e){var t=/(?:\\.|[^\\\n\r]|(?:\r?\n|\r)(?!\r?\n|\r))/.source;function n(e,n){return e=e.replace(/<inner>/g,t),n&&(e=e+"|"+e.replace(/_/g,"\\*")),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var i=/(?:\\.|``.+?``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,r=/\|?__(?:\|__)+\|?(?:(?:\r?\n|\r)|$)/.source.replace(/__/g,i),o=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\r?\n|\r)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+r+o+"(?:"+r+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+r+o+")(?:"+r+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(i),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+r+")"+o+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+r+"$"),inside:{"table-header":{pattern:RegExp(i),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/(^[ \t]*(?:\r?\n|\r))(?: {4}|\t).+(?:(?:\r?\n|\r)(?: {4}|\t).+)*/m,lookbehind:!0,alias:"keyword"},{pattern:/``.+?``|`[^`\r\n]+`/,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\r?\n|\r))[\s\S]+?(?=(?:\r?\n|\r)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\r?\n|\r)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#+.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+?\2/.source,!1),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[(?:(?!\])<inner>)+\])/.source,!1),lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(\[)[^\]]+(?=\]$)/,lookbehind:!0},content:{pattern:/(^!?\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},string:{pattern:/"(?:\\.|[^"\\])*"(?=\)$)/}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,i=t.length;n<i;n++){var r=t[n];if("code"===r.type){var o=r.content[1],a=r.content[3];if(o&&a&&"code-language"===o.type&&"code-block"===a.type&&"string"==typeof o.content){var s="language-"+o.content.trim().split(/\s+/)[0].toLowerCase();a.alias?"string"==typeof a.alias?a.alias=[a.alias,s]:a.alias.push(s):a.alias=[s]}}else e(r.content)}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",i=0,r=t.classes.length;i<r;i++){var o=t.classes[i],a=/language-(.+)/.exec(o);if(a){n=a[1];break}}var s=e.languages[n];if(s){var c=t.content.replace(/&lt;/g,"<").replace(/&amp;/g,"&");t.content=e.highlight(c,s,n)}else if(n&&"none"!==n&&e.plugins.autoloader){var d="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=d,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(d);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))}))}}})),e.languages.md=e.languages.markdown}(a),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d+.*$/m]};var t={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(t).forEach((function(n){var i=t[n],r=[];/^\w+$/.test(n)||r.push(/\w+/.exec(n)[0]),"diff"===n&&r.push("bold"),e.languages.diff[n]={pattern:RegExp("^(?:["+i+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:r}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:t})}(a),a.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/m}},coord:/^@@.*@@$/m,commit_sha1:/^commit \w{40}$/m},a.languages.go=a.languages.extend("clike",{keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,builtin:/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,boolean:/\b(?:_|iota|nil|true|false)\b/,operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,number:/(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i,string:{pattern:/(["'`])(\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0}}),delete a.languages.go["class-name"],function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/i,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:true|false)\b/,block:{pattern:/^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(t){e.languages["markup-templating"].buildPlaceholders(t,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"handlebars")}))}(a),a.languages.json={property:{pattern:/"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,greedy:!0},string:{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:!0},comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,number:/-?\d+\.?\d*(e[+-]?\d+)?/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},a.languages.less=a.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-]+?(?:\([^{}]+\)|[^(){};])*?(?=\s*\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\([^{}]*\)|[^{};@])*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,operator:/[+\-*\/]/}),a.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/,lookbehind:!0,alias:"function"}}),a.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},builtin:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,symbol:{pattern:/^[^:=\r\n]+(?=\s*:(?!=))/m,inside:{variable:/\$+(?:[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:[/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,{pattern:/(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},a.languages.objectivec=a.languages.extend("c",{keyword:/\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,string:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete a.languages.objectivec["class-name"],a.languages.ocaml={comment:/\(\*[\s\S]*?\*\)/,string:[{pattern:/"(?:\\.|[^\\\r\n"])*"/,greedy:!0},{pattern:/(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,greedy:!0}],number:/\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,type:{pattern:/\B['`]\w*/,alias:"variable"},directive:{pattern:/\B#\w+/,alias:"function"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\b/,boolean:/\b(?:false|true)\b/,operator:/:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\b/,punctuation:/[(){}\[\]|_.,:;]/},a.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^\s*)@\w+(?:\.\w+)*/i,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},a.languages.python["string-interpolation"].inside.interpolation.inside.rest=a.languages.python,a.languages.py=a.languages.python,a.languages.reason=a.languages.extend("clike",{comment:{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/}),a.languages.insertBefore("reason","class-name",{character:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,alias:"string"},constructor:{pattern:/\b[A-Z]\w*\b(?!\s*\.)/,alias:"variable"},label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete a.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,lookbehind:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,inside:{atrule:/(?:@[\w-]+|[+=])/m}}}),delete e.languages.sass.atrule;var t=/\$[-\w]+|#\{\$[-\w]+\}/,n=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/,{pattern:/(\s+)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,inside:{punctuation:/:/,variable:t,operator:n}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:n,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,lookbehind:!0}})}(a),a.languages.scss=a.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),a.languages.insertBefore("scss","atrule",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),a.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),a.languages.insertBefore("scss","function",{placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,lookbehind:!0}}),a.languages.scss.atrule.inside.rest=a.languages.scss,a.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t={url:/url\((["']?).*?\1\)/i,string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,number:/\b\d+(?:\.\d+)?%?/,boolean:/\b(?:true|false)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.+|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],punctuation:/[{}()\[\];:,]/};t.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^{|}$/,alias:"punctuation"},rest:t}},t.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:t}},e.languages.stylus={comment:{pattern:/(^|[^\\])(\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},"atrule-declaration":{pattern:/(^\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:t}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:(?:\{[^}]*\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:t}},statement:{pattern:/(^[ \t]*)(?:if|else|for|return|unless)[ \t]+.+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:t}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(\r?\n|\r)(?:\{|\2[ \t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,lookbehind:!0,inside:{interpolation:t.interpolation,punctuation:/[{},]/}},func:t.func,string:t.string,interpolation:t.interpolation,punctuation:/[{}()\[\];:.]/}}(a);var s=a.util.clone(a.languages.typescript);a.languages.tsx=a.languages.extend("jsx",s),a.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^_`|~]+/i,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},a.languages.yaml={scalar:{pattern:/([\-:]\s*(?:![^\s]+)?[ \t]*[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/,lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:/(\s*(?:^|[:\-,[{\r\n?])[ \t]*(?:![^\s]+)?[ \t]*)[^\r\n{[\]},#\s]+?(?=\s*:\s)/,lookbehind:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?)(?=[ \t]*(?:$|,|]|}))/m,lookbehind:!0,alias:"number"},boolean:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:true|false)[ \t]*(?=$|,|]|})/im,lookbehind:!0,alias:"important"},null:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:null|~)[ \t]*(?=$|,|]|})/im,lookbehind:!0,alias:"important"},string:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)("|')(?:(?!\2)[^\\\r\n]|\\.)*\2(?=[ \t]*(?:$|,|]|}|\s*#))/m,lookbehind:!0,greedy:!0},number:{pattern:/([:\-,[{]\s*(?:![^\s]+)?[ \t]*)[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)[ \t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\s]+/,important:/[&*][\w]+/,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},a.languages.yml=a.languages.yaml,t.a=a},SlEa:function(e,t,n){"use strict";n.d(t,"h",(function(){return a})),n.d(t,"a",(function(){return s})),n.d(t,"i",(function(){return c})),n.d(t,"e",(function(){return d})),n.d(t,"g",(function(){return p})),n.d(t,"d",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"f",(function(){return h}));n("jm62"),n("ioFf"),n("RW0V"),n("pIFo"),n("rGqo"),n("yt8O"),n("Btvt"),n("hhXQ"),n("INYr");function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a={small:"576px",medium:"768px",large:"992px",xLarge:"1200px",xxLarge:"1500px",xxxLarge:"1800px"},s=r(r({},a),{},{mobileMenu:"895px"}),c={logo:"244px",gutter:"20px",container:"1400px",sidebarLeft:"270px",sidebarRight:"200px",content:"1200px",dropdown:"270px"},d={header:"60px"},p={content:"1200px"},u={body:'"Source Sans Pro",sans-serif',monospace:'"Roboto Mono",monospace',heading:'"Hurme Geometric Sans 1",sans-serif'},l={brandDark:"#000",brandLight:"#fff",brandPrimary:"#FF9A00",brandPrimaryDark:"#EA7500",brandPrimaryDarker:"#C95D00",brandPrimaryDarkest:"#000",brandPrimaryLight:"#000",brandPrimaryLighter:"#000",brandPrimaryLightest:"#000",brandSecondary:"#6B99DD",brandSecondaryDark:"#3389D7",brandSecondaryDarker:"#6C7F98",brandSecondaryDarkest:"#0D326E",brandSecondaryLight:"#B4D8F1",brandSecondaryLighter:"#000",brandSecondaryLightest:"#000",brandTertiary:"#000",brandTertiaryDark:"#000",brandTertiaryDarker:"#000",brandTertiaryDarkest:"#000",brandTertiaryLight:"#000",brandTertiaryLighter:"#000",brandTertiaryLightest:"#000",brandGray:"#E0E0E0",brandGrayDark:"#8F9DB0",brandGrayDarker:"#6C7F98",brandGrayDarkest:"#0B2145",brandGrayLight:"#E1EFF9",brandGrayLighter:"#EBF1F5",brandGrayLightest:"#F3F8FB",brandGreen:"#4EBE7E",brandGreenDark:"#178880",brandGreenDarker:"#125A66",brandGreenDarkest:"#000",brandGreenLlight:"#000",brandGreenLighter:"#000",brandGreenLightest:"#000",brandRed:"#F95757",brandRedDark:"#C22C41",brandRedDarker:"#7C0F2F",brandRedDarkest:"#000",brandRedLight:"#000",brandRedLighter:"#000",brandRedLightest:"#000",brandDisabled:"#000",brandSuccess:"#4EBE7E",brandSuccessDark:"#178880",brandWarning:"#FF9A00",brandWarningDark:"#C95D00",brandDanger:"#F95757",brandDangerDark:"#C22C41",brandInfo:"#0D326E",brandInfoDark:"#0B2145",brandNeutral:"#E0E0E0",brandTextPrimary:"#000",brandTextSecondary:"#000",brandTextDisabled:"#000",downriver:"#031563",cornflowerBlue:"#e2eff9",whiteLilac:"#fafbfd",frenchPass:"#b3defd",nobel:"#b5b5b5",alabaster:"#fbfbfb",aliceBlue:"#EFF8FF",lynch:"#6c7f98",ceruleanBlue:"#3048D1",pictonBlue:"#4e99e9",emerald:"#00CF8A",indigo:"#5644D3",red:"#F00000",baliHai:"#6C7f98",dodgerBlue:"#45B0FF",blackSqueeze:"#f3fbfb",concrete:"#F2F2F2",alto:"#E0E0E0",billionaireBlue:"#3048D1",businessBlue:"#031563",bonusBlue:"#E1EFF9",highlightOrange:"#F55200",hoverOrange:"#0D326E",body:"#454B6C",hippieGreen:"#678d4b",dustyGray:"#9b9b9b",gray:"#7F7F7F",richRed:"#D00202"},h={get:l.dodgerBlue,post:l.emerald,patch:l.indigo,delete:l.red,request:l.downriver,response:l.gray,default:l.brandDark};t.c={space:[0,10,20,30,40,50,60,70,80],colors:l,fonts:u,fontSizes:{xSmall:18.6,small:15.6,base:25.6,medium:27.6,large:28.6,xLarge:31.6,xxLarge:42},breakpoints:Object.values(a),httpMethodColors:h}},SlkY:function(e,t,n){var i=n("m0Pp"),r=n("H6hf"),o=n("M6Qj"),a=n("y3w9"),s=n("ne8i"),c=n("J+6e"),d={},p={};(t=e.exports=function(e,t,n,u,l){var h,m,f,y,g=l?function(){return e}:c(e),b=i(n,u,t?2:1),A=0;if("function"!=typeof g)throw TypeError(e+" is not iterable!");if(o(g)){for(h=s(e.length);h>A;A++)if((y=t?b(a(m=e[A])[0],m[1]):b(e[A]))===d||y===p)return y}else for(f=g.call(e);!(m=f.next()).done;)if((y=r(f,b,m.value,t))===d||y===p)return y}).BREAK=d,t.RETURN=p},SoeO:function(e,t,n){"use strict";t.a={plain:{color:"#9CDCFE",backgroundColor:"#1E1E1E"},styles:[{types:["prolog"],style:{color:"rgb(0, 0, 128)"}},{types:["comment"],style:{color:"rgb(106, 153, 85)"}},{types:["builtin","changed","keyword"],style:{color:"rgb(86, 156, 214)"}},{types:["number","inserted"],style:{color:"rgb(181, 206, 168)"}},{types:["constant"],style:{color:"rgb(100, 102, 149)"}},{types:["attr-name","variable"],style:{color:"rgb(156, 220, 254)"}},{types:["deleted","string","attr-value"],style:{color:"rgb(206, 145, 120)"}},{types:["selector"],style:{color:"rgb(215, 186, 125)"}},{types:["tag"],style:{color:"rgb(78, 201, 176)"}},{types:["tag"],languages:["markup"],style:{color:"rgb(86, 156, 214)"}},{types:["punctuation","operator"],style:{color:"rgb(212, 212, 212)"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"rgb(220, 220, 170)"}},{types:["class-name"],style:{color:"rgb(78, 201, 176)"}},{types:["char"],style:{color:"rgb(209, 105, 105)"}}]}},T39b:function(e,t,n){"use strict";var i=n("wmvG"),r=n("s5qY");e.exports=n("4LiD")("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return i.def(r(this,"Set"),e=0===e?0:e,e)}},i)},TAZq:function(e,t,n){n("KKXr"),n("8+KV"),e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(n){}}return function(n,i,r,o,a,s,c,d,p,u){switch(n){case 1:if(0===p&&64===i.charCodeAt(0))return e(i+";"),"";break;case 2:if(0===d)return i+"/*|*/";break;case 3:switch(d){case 102:case 112:return e(r[0]+i),"";default:return i+(0===u?"/*|*/":"")}case-2:i.split("/*|*/}").forEach(t)}}}}()},TIAS:function(e,t,n){"use strict";n.r(t);n("91GP"),n("a1Th"),n("Btvt"),n("9XZr");var i=n("q1tI"),r=n.n(i),o=n("vOnD"),a=n("vRuI"),s=n("SlEa"),c=Object(o.b)(a.d).withConfig({componentId:"id16hd-0"})(["display:block;margin-bottom:15px;background:",";border-radius:4px;width:",";.el-input{color:",";border-radius:5px;&:hover{background:",";color:",";.el-input__icon{color:",";}}&:focus{background:",";color:",";}}.el-input__inner{background:inherit;color:inherit;font-weight:bold;font-family:",";box-shadow:none;}.el-input__icon{position:absolute;width:35px;top:0;right:0;cursor:pointer;color:",";&:hover{color:",";}&.el-icon-caret-top:before{display:block;transform:rotate(0);content:'\\EA13';}&.el-icon-caret-top.is-reverse:before{transform:rotate(180deg);}}.el-select-dropdown{margin:0;background:",";color:",";border-radius:4px;box-shadow:none;overflow:hidden;box-shadow:0 3px 10px rgba(105,176,225,.2);&__item{&.selected{color:",";background-color:",";}&.hover{color:",";background-color:",";}}}.el-select-dropdown__list{padding:0;font-weight:400;font-style:normal;font-family:",";}"],s.b.blackSqueeze,s.i.dropdown,s.b.businessBlue,s.b.businessBlue,s.b.brandLight,s.b.brandLight,s.b.blackSqueeze,s.b.billionaireBlue,s.d.heading,s.b.businessBlue,s.b.brandLight,s.b.brandLight,s.b.brandSecondaryDark,s.b.highlightOrange,s.b.brandLight,s.b.highlightOrange,s.b.brandLight,s.d.body),d=Object(o.b)(a.e).withConfig({componentId:"id16hd-1"})(["display:flex;align-items:center;padding:3px 3px 3px 20px;box-sizing:content-box;font-size:14px;&:hover{background:rgba(255,154,0,0.09);}"]),p=n("P5Jw"),u=n.n(p),l=n("V70Y"),h=n("8o2o"),m=n("9Hrx"),f=n("i8i4"),y=n.n(f),g=!1,b=r.a.createContext(null),A=function(e){function t(t,n){var i;i=e.call(this,t,n)||this;var r,o=n&&!n.isMounting?t.enter:t.appear;return i.appearStatus=null,t.in?o?(r="exited",i.appearStatus="entering"):r="entered":r=t.unmountOnExit||t.mountOnEnter?"unmounted":"exited",i.state={status:r},i.nextCallback=null,i}Object(m.a)(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&"unmounted"===t.status?{status:"exited"}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?"entering"!==n&&"entered"!==n&&(t="entering"):"entering"!==n&&"entered"!==n||(t="exiting")}this.updateStatus(!1,t)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var e,t,n,i=this.props.timeout;return e=t=n=i,null!=i&&"number"!=typeof i&&(e=i.exit,t=i.enter,n=void 0!==i.appear?i.appear:t),{exit:e,enter:t,appear:n}},n.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t){this.cancelNextCallback();var n=y.a.findDOMNode(this);"entering"===t?this.performEnter(n,e):this.performExit(n)}else this.props.unmountOnExit&&"exited"===this.state.status&&this.setState({status:"unmounted"})},n.performEnter=function(e,t){var n=this,i=this.props.enter,r=this.context?this.context.isMounting:t,o=this.getTimeouts(),a=r?o.appear:o.enter;!t&&!i||g?this.safeSetState({status:"entered"},(function(){n.props.onEntered(e)})):(this.props.onEnter(e,r),this.safeSetState({status:"entering"},(function(){n.props.onEntering(e,r),n.onTransitionEnd(e,a,(function(){n.safeSetState({status:"entered"},(function(){n.props.onEntered(e,r)}))}))})))},n.performExit=function(e){var t=this,n=this.props.exit,i=this.getTimeouts();n&&!g?(this.props.onExit(e),this.safeSetState({status:"exiting"},(function(){t.props.onExiting(e),t.onTransitionEnd(e,i.exit,(function(){t.safeSetState({status:"exited"},(function(){t.props.onExited(e)}))}))}))):this.safeSetState({status:"exited"},(function(){t.props.onExited(e)}))},n.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},n.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(i){n&&(n=!1,t.nextCallback=null,e(i))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},n.onTransitionEnd=function(e,t,n){this.setNextCallback(n);var i=null==t&&!this.props.addEndListener;e&&!i?(this.props.addEndListener&&this.props.addEndListener(e,this.nextCallback),null!=t&&setTimeout(this.nextCallback,t)):setTimeout(this.nextCallback,0)},n.render=function(){var e=this.state.status;if("unmounted"===e)return null;var t=this.props,n=t.children,i=Object(h.a)(t,["children"]);if(delete i.in,delete i.mountOnEnter,delete i.unmountOnExit,delete i.appear,delete i.enter,delete i.exit,delete i.timeout,delete i.addEndListener,delete i.onEnter,delete i.onEntering,delete i.onEntered,delete i.onExit,delete i.onExiting,delete i.onExited,"function"==typeof n)return r.a.createElement(b.Provider,{value:null},n(e,i));var o=r.a.Children.only(n);return r.a.createElement(b.Provider,{value:null},r.a.cloneElement(o,i))},t}(r.a.Component);function D(){}A.contextType=b,A.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:D,onEntering:D,onEntered:D,onExit:D,onExiting:D,onExited:D},A.UNMOUNTED=0,A.EXITED=1,A.ENTERING=2,A.ENTERED=3,A.EXITING=4;var C,T=A;!function(e){e.ENTERING="entering",e.ENTERED="entered",e.EXITING="exiting",e.EXITED="exited"}(C||(C={}));var I,R,S=o.b.div.withConfig({componentId:"gcgp5r-0"})(["display:flex;justify-content:center;align-items:center;width:100%;height:100%;"]),N=o.b.div.withConfig({componentId:"gcgp5r-1"})(["padding:22px 42px;font-family:'Roboto Mono',monospace;font-size:13px;font-weight:bold;background-color:#f2f2f2;",""],(function(e){var t=e.state;return t===C.ENTERING||t===C.ENTERED?"\n        opacity: 1;\n        transition: opacity 0s;\n    ":t===C.EXITING?"\n        opacity: 1;\n        transition: opacity 1s;\n    ":t===C.EXITED?"\n        opacity: 0;\n        transition: opacity 1s;\n    ":void 0})),P=n("qKvR"),v=function(e){var t=e.message,n=e.showCodeOverlay;return Object(P.b)(S,null,Object(P.b)(T,{in:n,enter:!1,timeout:0},(function(e){return Object(P.b)(N,{state:e},t)})))},B=o.b.article.withConfig({componentId:"sc-1hn0vf4-0"})(["position:relative;margin-bottom:30px;border-radius:5px;overflow:hidden;"]),x=o.b.header.withConfig({componentId:"sc-1hn0vf4-1"})(["display:flex;justify-content:space-between;align-items:center;padding:13px 5px 15px 15px;background-color:",";font-size:16px;color:",";"],(function(e){return e.color}),s.b.brandLight),w=o.b.h4.withConfig({componentId:"sc-1hn0vf4-2"})(["margin:0;padding-right:5px;font-size:16px;line-height:20px;color:inherit;text-transform:capitalize;font-family:'Roboto Mono',monospace;"]),L=o.b.button.attrs({type:"button"}).withConfig({componentId:"sc-1hn0vf4-3"})(["padding:0;border:none;font-family:inherit;line-height:1.15;font-size:13px;color:inherit;background:none;cursor:pointer;"]),O=o.b.div.withConfig({componentId:"sc-1hn0vf4-4"})(["padding:20px 2px 20px 15px;font-family:'RobotoMono-Regular','Roboto Mono',sans-serif;font-size:14px;font-weight:400;font-style:normal;text-align:left;line-height:normal;background:#1e1e1e;overflow:visible;overflow-x:scroll;"]),M=o.b.div.withConfig({componentId:"sc-1hn0vf4-5"})(["position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:none;"]),U=function(e){var t=e.codeblock,n=t.title,r=t.codeSnippet,o=t.copyCode,a=t.color,s=t.language,c=Object(i.useState)(!1),d=c[0],p=c[1],h=-1;return Object(i.useEffect)((function(){return h=setTimeout((function(){return p(!1)}),2500),function(){clearTimeout(h)}}),[d]),Object(P.b)(B,null,Object(P.b)(x,{color:a},Object(P.b)(w,null,n),o&&Object(P.b)(u.a,{text:r,onCopy:function(){return p(!d)}},Object(P.b)(L,null,"Copy code"))),Object(P.b)(O,null,Object(P.b)(l.a,{code:r,language:s})),Object(P.b)(M,null,Object(P.b)(v,{showCodeOverlay:d,message:"Code copied"})))},E=n("61Ie"),F=(n("rGqo"),n("yt8O"),n("RW0V"),o.b.div.withConfig({componentId:"sc-12onc3a-0"})(["font-size:12px;color:",";font-family:'Roboto Mono',monospace;"],s.b.brandSecondaryDarker)),X=function e(t){var n=t.allProperties,i=t.requiredPropertyKeys;return Object(P.b)(r.a.Fragment,null,Object.keys(n).map((function(t){var o,s=n[t],c=s.type,d=s.description,p=s.items,u=s.properties,l=s.required,h=s.enum,m=!!u,f=!!p&&p.properties;return Object(P.b)(E.d,{key:t},Object(P.b)(E.f,{className:"great-primer"},t),c&&Object(P.b)(r.a.Fragment,null,Object(P.b)(E.k,null," ",c),",","  "),i&&(o=t,i.some((function(e){return e===o})))&&Object(P.b)(E.i,null,"Required"),d&&Object(P.b)(E.e,null,d),h&&Object(P.b)(F,null,h.join(", ")),(m||f)&&Object(P.b)(E.c,{nested:!0},Object(P.b)(a.b,null,Object(P.b)(a.c,{title:"Show children",nested:!0},m&&Object(P.b)(e,{allProperties:u,requiredPropertyKeys:l}),f&&Object(P.b)(e,{allProperties:p.properties,requiredPropertyKeys:p.required})))))})))},K=n("VdAu"),q=n("VvNK"),G=o.b.div.withConfig({componentId:"qzk8vd-0"})(["display:flex;justify-content:space-between;margin-top:70px;"]),j=(Object(o.b)(K.b).withConfig({componentId:"qzk8vd-1"})([""]),Object(o.a)(["border-bottom:dashed 1px ",";"],s.b.brandGray)),k=Object(o.b)(E.c).withConfig({componentId:"sc-172m86z-0"})(["",""],(function(e){return e._css})),H=function(e){var t=e.path,n=e.type,i=e.apiData,o=e.codeblocks,a=function(e,t,n){var i=e.paths[t][n].requestBody;if(i){var r=i.content["application/json"].schema;return[r.properties,r.required]}return[!1,!1]}(i,t,n),s=a[0],c=a[1];return s?Object(P.b)(r.a.Fragment,null,Object(P.b)(G,null,Object(P.b)(E.a,{as:"h4",className:"double-pica"},"Request Payload ",Object(P.b)(E.h,null,"(application/json)"))),Object(P.b)(E.b,null,Object(P.b)(q.g,null,Object(P.b)(q.c,null,Object(P.b)(k,{border:!0,_css:j},Object(P.b)(X,{allProperties:s,requiredPropertyKeys:c}))),Object(P.b)(q.a,null,!!o&&o.map((function(e,t){return Object(P.b)(U,{codeblock:e,key:t})})))))):null},V=o.b.div.withConfig({componentId:"v0xevr-0"})(["margin-top:70px;"]),W=(Object(o.b)(K.b).withConfig({componentId:"v0xevr-1"})([""]),function(e){var t=e.path,n=e.type,i=e.apiData,o=e.codeblocks,s=i.paths[t][n].responses;return Object(P.b)(r.a.Fragment,null,Object(P.b)(V,null,Object(P.b)(E.a,{as:"h4",className:"double-pica"},"Response ",Object(P.b)(E.h,null,"(application/json)"))),Object(P.b)(E.b,null,Object(P.b)(q.g,null,Object(P.b)(q.c,null,Object(P.b)(E.c,{nested:!0,border:!0},Object.keys(s).map((function(e,t){return Object(P.b)(E.d,{key:t},Object(P.b)(E.f,{className:"great-primer"},e," "),s[e].description&&Object(P.b)(E.e,{as:"span",className:"body-copy"},s[e].description,!!s[e].content&&Object(P.b)(a.b,null,Object(P.b)(a.c,{title:"Response model",nested:!0},Object(P.b)(X,{allProperties:(n=s[e],!!n.content&&n.content["application/json"].schema.properties),requiredPropertyKeys:[]})))));var n})))),Object(P.b)(q.a,null,!!o&&o.map((function(e,t){return Object(P.b)(U,{codeblock:e,key:t})}))))))}),Y=(n("f3/d"),function(e){var t=e.parameters,n=e.codeblocks;return Object(P.b)(r.a.Fragment,null,Object(P.b)(E.a,{as:"h4",className:"double-pica"},"Parameters"),Object(P.b)(E.b,null,Object(P.b)(q.g,null,Object(P.b)(q.c,null,Object(P.b)(E.c,{border:!0},t.map((function(e){return Object(P.b)(E.d,{key:e.name},Object(P.b)(E.f,{className:"great-primer"},e.name),e.schema&&e.schema.type&&Object(P.b)(r.a.Fragment,null,Object(P.b)(E.k,null," ",e.schema.type),",","  "),e.in&&Object(P.b)(r.a.Fragment,null,Object(P.b)(E.g,null,e.in)),e.required&&Object(P.b)(r.a.Fragment,null,", ",Object(P.b)(E.i,null,"Required")),e.description&&Object(P.b)(E.e,null,e.description))})))),Object(P.b)(q.a,null,!!n&&n.map((function(e,t){return Object(P.b)(U,{codeblock:e,key:t})}))))))}),Z=n("M4XY"),_=n.n(Z),J=o.b.ul.withConfig({componentId:"sc-1q2lckj-0"})(["padding:20px 20px;border:1px solid ",";list-style:none;margin-bottom:20px;border-radius:4px;"],s.b.brandGray),z=o.b.li.withConfig({componentId:"sc-1q2lckj-1"})(["margin:0px;& + &{margin-top:10px;}"]),$=o.b.h4.withConfig({componentId:"sc-1q2lckj-2"})(["margin-bottom:20px;font-size:20px;font-family:",";font-weight:600;color:",";line-height:40px;"],s.d.body,s.b.downriver),Q=o.b.a.withConfig({componentId:"sc-1q2lckj-3"})(["color:",";font-size:16px;line-height:28px;&:hover{color:",";}"],s.b.highlightOrange,s.b.hoverOrange),ee=function(e){var t=e.webhooks;return t.length<1?Object(P.b)(r.a.Fragment,null):Object(P.b)(r.a.Fragment,null,Object(P.b)($,null,"Associated Webhooks"),Object(P.b)(J,null,!!t&&t.map((function(e,t){return Object(P.b)(z,{key:t},Object(P.b)(Q,{href:"/docs/webhooks/#"+_()(e.toLowerCase())},e))}))))},te={get:s.b.dodgerBlue,post:s.b.emerald,patch:s.b.indigo,delete:s.b.red},ne=o.b.code.withConfig({componentId:"sc-19hnfr4-0"})(["display:inline-flex;margin:15px 0 10px 0;padding:12px 10px;font-size:14px;font-family:",";letter-spacing:0;color:",";overflow-x:scroll;width:auto;max-width:100%;border-radius:0;background:",";-ms-overflow-style:none;&::-webkit-scrollbar{display:none;}"],s.d.monospace,s.b.brandLight,(function(e){var t=e.type;return t in te?te[t]:s.b.brandSecondaryDark})),ie=function(e){var t=e.code,n=e.type,i=e.className;return Object(P.b)(ne,{type:n,className:i},t)},re=(n("dRSK"),n("hhXQ"),n("35Dr"));!function(e){e.REQUEST="request",e.RESPONSE="response"}(I||(I={})),function(e){e.Success="#678D4B",e["Bad Request"]="#F00000",e.Request="#031563",e.Default="#031563"}(R||(R={}));var oe=function(e){return JSON.stringify(e,null,2)},ae=function(e){return R[e.description]||R.Default},se=function(e,t){return e===I.RESPONSE?t.description:e},ce=function(e,t){var n=Object(re.sample)(t.content["application/json"].schema);return{title:se(e,t),section:e,color:ae(t),language:"json",codeSnippet:oe(n)}},de=n("FwON"),pe=n("5xg7");function ue(){return(ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var le=function(e,t,n){void 0===t&&(t=[]);var i=t.filter((function(t){return t.section===e}));return i.length>=1?i:function(e,t){if(!t)return null;var n=[];if(e===I.REQUEST)n.push(ce(e,t));else if(e===I.RESPONSE)for(var i=0,r=Object.values(t);i<r.length;i++){var o=r[i];o.hasOwnProperty("content")&&n.push(ce(e,o))}return n}(e,n)},he=function(e){var t=e.title,n=e.message,o=e.children,a=e.type,s=e.endpoints,p=e.boxProps,u=Object(i.useState)(0),l=u[0],h=u[1],m=!!o,f=s[l];if(!s.length||void 0===f)return null;var y=f.path,g=f.description,b=f.codeblocks,A=f.version,D=f.webhooks,C=pe[A].paths[y][a],T=C.summary,I=C.description,R=C.parameters,S=C.requestBody,N=C.responses,v=Object(P.b)(r.a.Fragment,null,Object(P.b)(q.k,{className:"code-type"},a),Object(P.b)(q.h,{className:"code-path"},Object(P.b)("span",null,y))),B=_()(t.toLowerCase()),x=function(e){void 0===e&&(e=[]);var t=Object(de.a)();return void 0===t?[]:e.map((function(e){return function(e,t){return e.find((function(e){return e.node.fields.slug===t})).node}(t.allMdx.edges,"/"+e).frontmatter.title}))}(D);return m?o(pe[A].paths[y][a]):Object(P.b)(q.b,ue({mt:["40px","40px"]},p,{className:"endpoint-block-container"}),Object(P.b)(q.j,{className:"endpoint-block-title mdx-subtitle",id:B},t),Object(P.b)(q.e,null,Object(P.b)(ie,{type:a,code:v,className:"endpoint-block-code"}),function(e,t,n){return Object(P.b)(c,{onChange:function(e){return t(e)},value:n,placeholder:"API Version"},e.map((function(e,t){var n=e.version,i="API Version "+parseInt(n,10).toString().padStart(3," ");return Object(P.b)(d,{key:t,label:i,value:t})})))}(s,h,l)),Object(P.b)(q.d,null,n),T&&Object(P.b)(q.i,null,T),function(e,t){return Object(P.b)(r.a.Fragment,null,t||Object(P.b)(q.d,{dangerouslySetInnerHTML:{__html:e}}))}(I,g),Object(P.b)(q.g,null,Object(P.b)(q.f,null,Object(P.b)(Y,{parameters:R,codeblocks:le("parameters",b)}),Object(P.b)(H,{path:y,type:a,apiData:pe[A],codeblocks:le("request",b,S)}),Object(P.b)(W,{path:y,type:a,apiData:pe[A],codeblocks:le("response",b,N)}),Object(P.b)(ee,{webhooks:x}))))};t.default={EndpointBlock:he,React:i}},TOwV:function(e,t,n){"use strict";e.exports=n("qT12")},TsN8:function(e,t,n){"use strict";n("91GP"),n("q1tI");var i=n("CnhX"),r=(n("dJPS"),n("M4XY")),o=n.n(r),a=n("xK/f"),s=n("gdQ2"),c=n("qKvR");function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}t.a={h1:function(e){return Object(c.b)(a.a,d({as:"h1","data-id":o()(e.children.toLowerCase())},e))},h2:function(e){return Object(c.b)(a.b,d({as:"h2",className:"cannon","data-id":o()(e.children.toLowerCase())},e))},h3:function(e){return Object(c.b)(a.c,d({as:"h3",className:"paragon mdx-subtitle",id:o()(e.children.toLowerCase())},e))},h4:function(e){return Object(c.b)(a.d,d({as:"h4",className:"double-pica","data-id":o()(e.children).toLowerCase()},e))},h5:function(e){return Object(c.b)(a.d,d({as:"h5",className:"great-primer","data-id":o()(e.children.toLowerCase())},e))},h6:function(e){return Object(c.b)(a.d,d({as:"h6",className:"long-primer","data-id":o()(e.children.toLowerCase())},e))},p:function(e){return Object(c.b)(a.i,d({as:"p",className:"body-copy"},e))},pre:function(e){return Object(c.b)(a.j,e)},code:i.a,a:function(e){return Object(c.b)(a.f,e)},ul:function(e){return Object(c.b)(a.g,d({className:"list"},e))},ol:function(e){return Object(c.b)(a.g,d({as:"ol",className:"list"},e))},li:function(e){return Object(c.b)(a.h,e)},img:function(e){return Object(c.b)(a.e,e)},table:function(e){return Object(c.b)(s.a,e)},thead:function(e){return Object(c.b)(s.e,e)},th:function(e){return Object(c.b)(s.d,e)},tbody:function(e){return Object(c.b)(s.b,e)},td:function(e){return Object(c.b)(s.c,d({},e,{className:"has-wrappable-content"}))},tr:function(e){return Object(c.b)(s.f,e)}}},Tze0:function(e,t,n){"use strict";n("qncB")("trim",(function(e){return function(){return e(this,3)}}))},UExd:function(e,t,n){var i=n("nh4g"),r=n("DVgA"),o=n("aCFj"),a=n("UqcF").f;e.exports=function(e){return function(t){for(var n,s=o(t),c=r(s),d=c.length,p=0,u=[];d>p;)n=c[p++],i&&!a.call(s,n)||u.push(e?[n,s[n]]:s[n]);return u}}},UUeW:function(e,t,n){var i=n("K0xU")("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[i]=!1,!"/./"[e](t)}catch(r){}}return!0}},Ugos:function(e,t,n){"use strict";var i,r,o=n("C/va"),a=RegExp.prototype.exec,s=String.prototype.replace,c=a,d=(i=/a/,r=/b*/g,a.call(i,"a"),a.call(r,"a"),0!==i.lastIndex||0!==r.lastIndex),p=void 0!==/()??/.exec("")[1];(d||p)&&(c=function(e){var t,n,i,r,c=this;return p&&(n=new RegExp("^"+c.source+"$(?!\\s)",o.call(c))),d&&(t=c.lastIndex),i=a.call(c,e),d&&i&&(c.lastIndex=c.global?i.index+i[0].length:t),p&&i&&i.length>1&&s.call(i[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(i[r]=void 0)})),i}),e.exports=c},UqcF:function(e,t){t.f={}.propertyIsEnumerable},UxWs:function(e,t,n){"use strict";n.r(t);n("91GP"),n("OG14"),n("SRfc");var i=n("xtsi"),r=n("q1tI"),o=n.n(r),a=n("i8i4"),s=n.n(a),c=n("YwZP"),d=n("7hJ6"),p=n("MMVs"),u=n.n(p),l=n("emEt"),h=n("YLt+"),m=n("5yr3"),f={id:"gatsby-announcer",style:{position:"absolute",top:0,width:1,height:1,padding:0,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",border:0},"aria-live":"assertive","aria-atomic":"true"},y=n("9Xx/"),g=n("+ZDr"),b=n("qKvR");function A(){return(A=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function D(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var C=h.reduce((function(e,t){return e[t.fromPath]=t,e}),{});function T(e){var t=C[e];return null!=t&&(window.___replace(t.toPath),!0)}var I=function(e,t){T(e.pathname)||Object(i.apiRunner)("onPreRouteUpdate",{location:e,prevLocation:t})},R=function(e,t){T(e.pathname)||Object(i.apiRunner)("onRouteUpdate",{location:e,prevLocation:t})},S=function(e,t){void 0===t&&(t={});var n=Object(g.parsePath)(e).pathname,r=C[n];if(r&&(e=r.toPath,n=Object(g.parsePath)(e).pathname),window.___swUpdated)window.location=n;else{var o=setTimeout((function(){m.a.emit("onDelayedLoadPageResources",{pathname:n}),Object(i.apiRunner)("onRouteUpdateDelayed",{location:window.location})}),1e3);l.default.loadPage(n).then((function(i){if(!i||i.status===l.PageResourceStatus.Error)return window.history.replaceState({},"",location.href),window.location=n,void clearTimeout(o);i&&i.page.webpackCompilationHash!==window.___webpackCompilationHash&&("serviceWorker"in navigator&&null!==navigator.serviceWorker.controller&&"activated"===navigator.serviceWorker.controller.state&&navigator.serviceWorker.controller.postMessage({gatsbyApi:"clearPathResources"}),console.log("Site has changed on server. Reloading browser"),window.location=n),Object(c.navigate)(e,t),clearTimeout(o)}))}};function N(e,t){var n=this,r=t.location,o=r.pathname,a=r.hash,s=Object(i.apiRunner)("shouldUpdateScroll",{prevRouterProps:e,pathname:o,routerProps:{location:r},getSavedScrollPosition:function(e){return n._stateStorage.read(e)}});if(s.length>0)return s[s.length-1];if(e&&e.location.pathname===o)return a?decodeURI(a.slice(1)):[0,0];return!0}var P=function(e){function t(t){var n;return(n=e.call(this,t)||this).announcementRef=o.a.createRef(),n}D(t,e);var n=t.prototype;return n.componentDidUpdate=function(e,t){var n=this;requestAnimationFrame((function(){var e="new page at "+n.props.location.pathname;document.title&&(e=document.title);var t=document.querySelectorAll("#gatsby-focus-wrapper h1");t&&t.length&&(e=t[0].textContent);var i="Navigated to "+e;n.announcementRef.current&&(n.announcementRef.current.innerText!==i&&(n.announcementRef.current.innerText=i))}))},n.render=function(){return Object(b.b)("div",A({},f,{ref:this.announcementRef}))},t}(o.a.Component),v=function(e){function t(t){var n;return n=e.call(this,t)||this,I(t.location,null),n}D(t,e);var n=t.prototype;return n.componentDidMount=function(){R(this.props.location,null)},n.componentDidUpdate=function(e,t,n){n&&R(this.props.location,e.location)},n.getSnapshotBeforeUpdate=function(e){return this.props.location.pathname!==e.location.pathname&&(I(this.props.location,e.location),!0)},n.render=function(){return Object(b.b)(o.a.Fragment,null,this.props.children,Object(b.b)(P,{location:location}))},t}(o.a.Component),B=n("IOVJ"),x=n("pCP8"),w=n.n(x);n("jm62"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V");function L(e,t){for(var n in e)if(!(n in t))return!0;for(var i in t)if(e[i]!==t[i])return!0;return!1}function O(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function M(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?O(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function U(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(e){var t,n;function i(t){var n;n=e.call(this)||this;var i=t.location,r=t.pageResources;return n.state={location:M({},i),pageResources:r||l.default.loadPageSync(i.pathname)},n}n=e,(t=i).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,i.getDerivedStateFromProps=function(e,t){var n=e.location;return t.location.href!==n.href?{pageResources:l.default.loadPageSync(n.pathname),location:M({},n)}:{location:M({},n)}};var r=i.prototype;return r.loadResources=function(e){var t=this;l.default.loadPage(e).then((function(n){n&&n.status!==l.PageResourceStatus.Error?t.setState({location:M({},window.location),pageResources:n}):(window.history.replaceState({},"",location.href),window.location=e)}))},r.shouldComponentUpdate=function(e,t){return t.pageResources?this.state.pageResources!==t.pageResources||(this.state.pageResources.component!==t.pageResources.component||(this.state.pageResources.json!==t.pageResources.json||(!(this.state.location.key===t.location.key||!t.pageResources.page||!t.pageResources.page.matchPath&&!t.pageResources.page.path)||function(e,t,n){return L(e.props,t)||L(e.state,n)}(this,e,t)))):(this.loadResources(e.location.pathname),!1)},r.render=function(){return this.props.children(this.state)},i}(o.a.Component),F=n("cSJ8"),X=n("vf9c");function K(){return(K=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var q=new l.ProdLoader(w.a,X);Object(l.setLoader)(q),q.setApiRunner(i.apiRunner),window.asyncRequires=w.a,window.___emitter=m.a,window.___loader=l.publicLoader,y.globalHistory.listen((function(e){e.location.action=e.action})),window.___push=function(e){return S(e,{replace:!1})},window.___replace=function(e){return S(e,{replace:!0})},window.___navigate=function(e,t){return S(e,t)},T(window.location.pathname),Object(i.apiRunnerAsync)("onClientEntry").then((function(){Object(i.apiRunner)("registerServiceWorker").length>0&&n("NSX3");var e=function(e){return Object(b.b)(c.BaseContext.Provider,{value:{baseuri:"/",basepath:"/"}},Object(b.b)(B.a,e))},t=function(t){var n,i;function r(){return t.apply(this,arguments)||this}return i=t,(n=r).prototype=Object.create(i.prototype),n.prototype.constructor=n,n.__proto__=i,r.prototype.render=function(){var t=this,n=this.props.location;return Object(b.b)(E,{location:n},(function(n){var i=n.pageResources,r=n.location;return Object(b.b)(v,{location:r},Object(b.b)(d.ScrollContext,{location:r,shouldUpdateScroll:N},Object(b.b)(c.Router,{basepath:"",location:r,id:"gatsby-focus-wrapper"},Object(b.b)(e,K({path:"/404.html"===i.page.path?Object(F.a)(r.pathname,""):encodeURI(i.page.matchPath||i.page.path)},t.props,{location:r,pageResources:i},i.json)))))}))},r}(o.a.Component),r=window,a=r.pagePath,p=r.location;a&&""+a!==p.pathname&&!(q.findMatchPath(Object(F.a)(p.pathname,""))||"/404.html"===a||a.match(/^\/404\/?$/)||a.match(/^\/offline-plugin-app-shell-fallback\/?$/))&&Object(c.navigate)(""+a+p.search+p.hash,{replace:!0}),l.publicLoader.loadPage(p.pathname).then((function(e){if(!e||e.status===l.PageResourceStatus.Error)throw new Error("page resources for "+p.pathname+" not found. Not rendering React");window.___webpackCompilationHash=e.page.webpackCompilationHash;var n=function(){return Object(b.b)(c.Location,null,(function(e){return Object(b.b)(t,e)}))},r=Object(i.apiRunner)("wrapRootElement",{element:Object(b.b)(n,null)},Object(b.b)(n,null),(function(e){return{element:e.result}})).pop(),o=function(){return r},a=Object(i.apiRunner)("replaceHydrateFunction",void 0,s.a.hydrate)[0];u()((function(){a(Object(b.b)(o,null),"undefined"!=typeof window?document.getElementById("___gatsby"):void 0,(function(){Object(i.apiRunner)("onInitialClientRender")}))}))}))}))},"V+eJ":function(e,t,n){"use strict";var i=n("XKFU"),r=n("w2a5")(!1),o=[].indexOf,a=!!o&&1/[1].indexOf(1,-0)<0;i(i.P+i.F*(a||!n("LyE8")(o)),"Array",{indexOf:function(e){return a?o.apply(this,arguments)||0:r(this,e,arguments[1])}})},V70Y:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n("91GP"),n("q1tI");var i=n("3Mpw"),r=n("SoeO"),o=n("qKvR");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var s=function(e){var t=e.code,n=e.language;return Object(o.b)(i.a,a({},i.b,{code:t,language:n,theme:r.a}),(function(e){var t=e.className,n=e.style,i=e.tokens,r=e.getLineProps,s=e.getTokenProps;return Object(o.b)("pre",{className:t,style:n},i.map((function(e,t){return Object(o.b)("div",a({key:t},r({line:e,key:t})),e.map((function(e,t){return Object(o.b)("span",a({key:t},s({token:e,key:t})))})))})))}))}},VRzm:function(e,t,n){"use strict";var i,r,o,a,s=n("LQAc"),c=n("dyZX"),d=n("m0Pp"),p=n("I8a+"),u=n("XKFU"),l=n("0/R4"),h=n("2OiF"),m=n("9gX7"),f=n("SlkY"),y=n("69bn"),g=n("GZEu").set,b=n("gHnn")(),A=n("pbhE"),D=n("nICZ"),C=n("ol8x"),T=n("vKrd"),I=c.TypeError,R=c.process,S=R&&R.versions,N=S&&S.v8||"",P=c.Promise,v="process"==p(R),B=function(){},x=r=A.f,w=!!function(){try{var e=P.resolve(1),t=(e.constructor={})[n("K0xU")("species")]=function(e){e(B,B)};return(v||"function"==typeof PromiseRejectionEvent)&&e.then(B)instanceof t&&0!==N.indexOf("6.6")&&-1===C.indexOf("Chrome/66")}catch(i){}}(),L=function(e){var t;return!(!l(e)||"function"!=typeof(t=e.then))&&t},O=function(e,t){if(!e._n){e._n=!0;var n=e._c;b((function(){for(var i=e._v,r=1==e._s,o=0,a=function(t){var n,o,a,s=r?t.ok:t.fail,c=t.resolve,d=t.reject,p=t.domain;try{s?(r||(2==e._h&&E(e),e._h=1),!0===s?n=i:(p&&p.enter(),n=s(i),p&&(p.exit(),a=!0)),n===t.promise?d(I("Promise-chain cycle")):(o=L(n))?o.call(n,c,d):c(n)):d(i)}catch(u){p&&!a&&p.exit(),d(u)}};n.length>o;)a(n[o++]);e._c=[],e._n=!1,t&&!e._h&&M(e)}))}},M=function(e){g.call(c,(function(){var t,n,i,r=e._v,o=U(e);if(o&&(t=D((function(){v?R.emit("unhandledRejection",r,e):(n=c.onunhandledrejection)?n({promise:e,reason:r}):(i=c.console)&&i.error&&i.error("Unhandled promise rejection",r)})),e._h=v||U(e)?2:1),e._a=void 0,o&&t.e)throw t.v}))},U=function(e){return 1!==e._h&&0===(e._a||e._c).length},E=function(e){g.call(c,(function(){var t;v?R.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})}))},F=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),O(t,!0))},X=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw I("Promise can't be resolved itself");(t=L(e))?b((function(){var i={_w:n,_d:!1};try{t.call(e,d(X,i,1),d(F,i,1))}catch(r){F.call(i,r)}})):(n._v=e,n._s=1,O(n,!1))}catch(i){F.call({_w:n,_d:!1},i)}}};w||(P=function(e){m(this,P,"Promise","_h"),h(e),i.call(this);try{e(d(X,this,1),d(F,this,1))}catch(t){F.call(this,t)}},(i=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n("3Lyj")(P.prototype,{then:function(e,t){var n=x(y(this,P));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=v?R.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&O(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new i;this.promise=e,this.resolve=d(X,e,1),this.reject=d(F,e,1)},A.f=x=function(e){return e===P||e===a?new o(e):r(e)}),u(u.G+u.W+u.F*!w,{Promise:P}),n("fyDq")(P,"Promise"),n("elZq")("Promise"),a=n("g3g5").Promise,u(u.S+u.F*!w,"Promise",{reject:function(e){var t=x(this);return(0,t.reject)(e),t.promise}}),u(u.S+u.F*(s||!w),"Promise",{resolve:function(e){return T(s&&this===a?P:this,e)}}),u(u.S+u.F*!(w&&n("XMVh")((function(e){P.all(e).catch(B)}))),"Promise",{all:function(e){var t=this,n=x(t),i=n.resolve,r=n.reject,o=D((function(){var n=[],o=0,a=1;f(e,!1,(function(e){var s=o++,c=!1;n.push(void 0),a++,t.resolve(e).then((function(e){c||(c=!0,n[s]=e,--a||i(n))}),r)})),--a||i(n)}));return o.e&&r(o.v),n.promise},race:function(e){var t=this,n=x(t),i=n.reject,r=D((function(){f(e,!1,(function(e){t.resolve(e).then(n.resolve,i)}))}));return r.e&&i(r.v),n.promise}})},VTer:function(e,t,n){var i=n("g3g5"),r=n("dyZX"),o=r["__core-js_shared__"]||(r["__core-js_shared__"]={});(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:i.version,mode:n("LQAc")?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},Vd3H:function(e,t,n){"use strict";var i=n("XKFU"),r=n("2OiF"),o=n("S/j/"),a=n("eeVq"),s=[].sort,c=[1,2,3];i(i.P+i.F*(a((function(){c.sort(void 0)}))||!a((function(){c.sort(null)}))||!n("LyE8")(s)),"Array",{sort:function(e){return void 0===e?s.call(o(this)):s.call(o(this),r(e))}})},VdAu:function(e,t,n){"use strict";n.d(t,"b",(function(){return s}));n("91GP");var i=n("q1tI"),r=n.n(i),o=n("dJMH");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return o.Box}));var s=Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,tx:"text"},e))}));Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,as:"h2",tx:"text",variant:"heading"},e,{__css:{fontSize:4,fontFamily:"heading",fontWeight:"heading",lineHeight:"heading"}}))})),Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,as:"a",variant:"link"},e))})),Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,as:"button",tx:"buttons",variant:"primary"},e,{__css:{appearance:"none",display:"inline-block",textAlign:"center",lineHeight:"inherit",textDecoration:"none",fontSize:"inherit",px:3,py:2,color:"white",bg:"primary",border:0,borderRadius:4}}))})),Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,as:"img"},e,{__css:{maxWidth:"100%",height:"auto"}}))})),Object(i.forwardRef)((function(e,t){return r.a.createElement(o.Box,a({ref:t,variant:"card"},e))}))},VvNK:function(e,t,n){"use strict";n.d(t,"j",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"g",(function(){return c})),n.d(t,"f",(function(){return d})),n.d(t,"c",(function(){return p})),n.d(t,"a",(function(){return u})),n.d(t,"e",(function(){return l})),n.d(t,"k",(function(){return h})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return f})),n.d(t,"d",(function(){return y}));var i=n("vOnD"),r=n("VdAu"),o=n("SlEa"),a=i.b.h1.withConfig({componentId:"u5ipo5-0"})(["font-family:",";scroll-margin-top:90px;"],o.d.heading),s=Object(i.b)(r.a).withConfig({componentId:"u5ipo5-1"})([""]),c=i.b.div.withConfig({componentId:"u5ipo5-2"})(["display:flex;flex-wrap:wrap;@media screen and (min-width:","){flex-wrap:nowrap;}"],o.a.large),d=i.b.div.withConfig({componentId:"u5ipo5-3"})(["flex:1 1 0;min-width:100%;@media screen and (min-width:","){margin-right:35px;min-width:0;}"],o.a.large),p=i.b.div.withConfig({componentId:"u5ipo5-4"})(["flex:1 1 0;min-width:100%;@media screen and (min-width:","){margin-right:35px;min-width:0;}ul > li{padding-right:20px;}"],o.a.large),u=i.b.div.withConfig({componentId:"u5ipo5-5"})(["flex:1 1 0;width:100%;display:none;@media screen and (min-width:","){display:block;min-width:0;flex:1 1 0;}"],o.a.xLarge),l=i.b.div.withConfig({componentId:"u5ipo5-6"})(["margin-bottom:15px;width:100%;"]),h=i.b.span.withConfig({componentId:"u5ipo5-7"})(["padding-right:10px;text-transform:uppercase;"]),m=i.b.span.withConfig({componentId:"u5ipo5-8"})([""]),f=i.b.p.withConfig({componentId:"u5ipo5-9"})([""]),y=i.b.p.withConfig({componentId:"u5ipo5-10"})([""])},WLL4:function(e,t,n){var i=n("XKFU");i(i.S+i.F*!n("nh4g"),"Object",{defineProperties:n("FJW5")})},Wwog:function(e,t,n){"use strict";function i(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}t.a=function(e,t){var n;void 0===t&&(t=i);var r,o=[],a=!1;return function(){for(var i=[],s=0;s<arguments.length;s++)i[s]=arguments[s];return a&&n===this&&t(i,o)||(r=e.apply(this,i),a=!0,n=this,o=i),r}}},X8hv:function(e,t,n){function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function r(e,t,n){return(r=i()?Reflect.construct:function(e,t,n){var i=[null];i.push.apply(i,t);var r=new(Function.bind.apply(e,i));return n&&o(r,n.prototype),r}).apply(null,arguments)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n("jm62"),n("yt8O"),n("RW0V"),n("XfO3"),n("HEwt"),n("rE2o"),n("ioFf"),n("rGqo"),n("a1Th"),n("Btvt"),n("I5cv"),n("I5cv"),n("XfO3"),n("HEwt"),n("a1Th"),n("rE2o"),n("jm62"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V");var p=n("q1tI"),u=n("7ljp"),l=u.useMDXComponents,h=u.mdx,m=n("BfwJ").useMDXScope;e.exports=function(e){var t=e.scope,n=e.components,i=e.children,o=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["scope","components","children"]),s=l(n),d=m(t),u=p.useMemo((function(){if(!i)return null;var e=c({React:p,mdx:h},d),t=Object.keys(e),n=t.map((function(t){return e[t]}));return r(Function,["_fn"].concat(a(t),[""+i])).apply(void 0,[{}].concat(a(n)))}),[i,t]);return p.createElement(u,c({components:s},o))}},XEEL:function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},XKFU:function(e,t,n){var i=n("dyZX"),r=n("g3g5"),o=n("Mukb"),a=n("KroJ"),s=n("m0Pp"),c=function(e,t,n){var d,p,u,l,h=e&c.F,m=e&c.G,f=e&c.S,y=e&c.P,g=e&c.B,b=m?i:f?i[t]||(i[t]={}):(i[t]||{}).prototype,A=m?r:r[t]||(r[t]={}),D=A.prototype||(A.prototype={});for(d in m&&(n=t),n)u=((p=!h&&b&&void 0!==b[d])?b:n)[d],l=g&&p?s(u,i):y&&"function"==typeof u?s(Function.call,u):u,b&&a(b,d,u,e&c.U),A[d]!=u&&o(A,d,l),y&&D[d]!=u&&(D[d]=u)};i.core=r,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},XMVh:function(e,t,n){var i=n("K0xU")("iterator"),r=!1;try{var o=[7][i]();o.return=function(){r=!0},Array.from(o,(function(){throw 2}))}catch(a){}e.exports=function(e,t){if(!t&&!r)return!1;var n=!1;try{var o=[7],s=o[i]();s.next=function(){return{done:n=!0}},o[i]=function(){return s},e(o)}catch(a){}return n}},Xbzi:function(e,t,n){var i=n("0/R4"),r=n("i5dc").set;e.exports=function(e,t,n){var o,a=t.constructor;return a!==n&&"function"==typeof a&&(o=a.prototype)!==n.prototype&&i(o)&&r&&r(e,o),e}},XfO3:function(e,t,n){"use strict";var i=n("AvRE")(!0);n("Afnz")(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=i(t,n),this._i+=e.length,{value:e,done:!1})}))},Xtr8:function(e,t,n){var i=n("XKFU"),r=n("g3g5"),o=n("eeVq");e.exports=function(e,t){var n=(r.Object||{})[e]||Object[e],a={};a[e]=t(n),i(i.S+i.F*o((function(){n(1)})),"Object",a)}},Xxuz:function(e,t,n){"use strict";var i=n("I8a+"),r=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var o=n.call(e,t);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==i(e))throw new TypeError("RegExp#exec called on incompatible receiver");return r.call(e,t)}},"YLt+":function(e){e.exports=JSON.parse('[{"fromPath":"/","isPermanent":false,"redirectInBrowser":true,"toPath":"/docs/introduction"}]')},YTvA:function(e,t,n){var i=n("VTer")("keys"),r=n("ylqs");e.exports=function(e){return i[e]||(i[e]=r(e))}},Ymqv:function(e,t,n){var i=n("LZWt");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},YuTi:function(e,t,n){n("HAE/"),e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},YwZP:function(e,t,n){"use strict";n.r(t),n.d(t,"Link",(function(){return L})),n.d(t,"Location",(function(){return A})),n.d(t,"LocationProvider",(function(){return D})),n.d(t,"Match",(function(){return X})),n.d(t,"Redirect",(function(){return F})),n.d(t,"Router",(function(){return I})),n.d(t,"ServerLocation",(function(){return C})),n.d(t,"isRedirect",(function(){return M})),n.d(t,"redirectTo",(function(){return U})),n.d(t,"useLocation",(function(){return K})),n.d(t,"useNavigate",(function(){return q})),n.d(t,"useParams",(function(){return G})),n.d(t,"useMatch",(function(){return j})),n.d(t,"BaseContext",(function(){return T}));n("bWfx"),n("pIFo"),n("DNiP"),n("VRzm"),n("Btvt"),n("/SS/"),n("hHhE"),n("V+eJ"),n("91GP");var i=n("q1tI"),r=n.n(i),o=n("yJwK"),a=n.n(o),s=n("nqlD"),c=n.n(s),d=n("94VI"),p=n("LYrO");n.d(t,"matchPath",(function(){return p.b}));var u=n("9Xx/");n.d(t,"createHistory",(function(){return u.createHistory})),n.d(t,"createMemorySource",(function(){return u.createMemorySource})),n.d(t,"navigate",(function(){return u.navigate})),n.d(t,"globalHistory",(function(){return u.globalHistory}));var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e};function h(e,t){var n={};for(var i in e)t.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function y(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var g=function(e,t){var n=c()(t);return n.displayName=e,n},b=g("Location"),A=function(e){var t=e.children;return r.a.createElement(b.Consumer,null,(function(e){return e?t(e):r.a.createElement(D,null,t)}))},D=function(e){function t(){var n,i;m(this,t);for(var r=arguments.length,o=Array(r),a=0;a<r;a++)o[a]=arguments[a];return n=i=f(this,e.call.apply(e,[this].concat(o))),i.state={context:i.getContext(),refs:{unlisten:null}},f(i,n)}return y(t,e),t.prototype.getContext=function(){var e=this.props.history;return{navigate:e.navigate,location:e.location}},t.prototype.componentDidCatch=function(e,t){if(!M(e))throw e;(0,this.props.history.navigate)(e.uri,{replace:!0})},t.prototype.componentDidUpdate=function(e,t){t.context.location!==this.state.context.location&&this.props.history._onTransitionComplete()},t.prototype.componentDidMount=function(){var e=this,t=this.state.refs,n=this.props.history;n._onTransitionComplete(),t.unlisten=n.listen((function(){Promise.resolve().then((function(){requestAnimationFrame((function(){e.unmounted||e.setState((function(){return{context:e.getContext()}}))}))}))}))},t.prototype.componentWillUnmount=function(){var e=this.state.refs;this.unmounted=!0,e.unlisten()},t.prototype.render=function(){var e=this.state.context,t=this.props.children;return r.a.createElement(b.Provider,{value:e},"function"==typeof t?t(e):t||null)},t}(r.a.Component);D.defaultProps={history:u.globalHistory};var C=function(e){var t=e.url,n=e.children,i=t.indexOf("?"),o=void 0,a="";return i>-1?(o=t.substring(0,i),a=t.substring(i)):o=t,r.a.createElement(b.Provider,{value:{location:{pathname:o,search:a,hash:""},navigate:function(){throw new Error("You can't call navigate on the server.")}}},n)},T=g("Base",{baseuri:"/",basepath:"/"}),I=function(e){return r.a.createElement(T.Consumer,null,(function(t){return r.a.createElement(A,null,(function(n){return r.a.createElement(R,l({},t,n,e))}))}))},R=function(e){function t(){return m(this,t),f(this,e.apply(this,arguments))}return y(t,e),t.prototype.render=function(){var e=this.props,t=e.location,n=e.navigate,i=e.basepath,o=e.primary,a=e.children,s=(e.baseuri,e.component),c=void 0===s?"div":s,d=h(e,["location","navigate","basepath","primary","children","baseuri","component"]),u=r.a.Children.toArray(a).reduce((function(e,t){var n=H(i)(t);return e.concat(n)}),[]),m=t.pathname,f=Object(p.c)(u,m);if(f){var y=f.params,g=f.uri,b=f.route,A=f.route.value;i=b.default?i:b.path.replace(/\*$/,"");var D=l({},y,{uri:g,location:t,navigate:function(e,t){return n(Object(p.d)(e,g),t)}}),C=r.a.cloneElement(A,D,A.props.children?r.a.createElement(I,{location:t,primary:o},A.props.children):void 0),R=o?N:c,S=o?l({uri:g,location:t,component:c},d):d;return r.a.createElement(T.Provider,{value:{baseuri:g,basepath:i}},r.a.createElement(R,S,C))}return null},t}(r.a.PureComponent);R.defaultProps={primary:!0};var S=g("Focus"),N=function(e){var t=e.uri,n=e.location,i=e.component,o=h(e,["uri","location","component"]);return r.a.createElement(S.Consumer,null,(function(e){return r.a.createElement(B,l({},o,{component:i,requestFocus:e,uri:t,location:n}))}))},P=!0,v=0,B=function(e){function t(){var n,i;m(this,t);for(var r=arguments.length,o=Array(r),a=0;a<r;a++)o[a]=arguments[a];return n=i=f(this,e.call.apply(e,[this].concat(o))),i.state={},i.requestFocus=function(e){!i.state.shouldFocus&&e&&e.focus()},f(i,n)}return y(t,e),t.getDerivedStateFromProps=function(e,t){if(null==t.uri)return l({shouldFocus:!0},e);var n=e.uri!==t.uri,i=t.location.pathname!==e.location.pathname&&e.location.pathname===e.uri;return l({shouldFocus:n||i},e)},t.prototype.componentDidMount=function(){v++,this.focus()},t.prototype.componentWillUnmount=function(){0===--v&&(P=!0)},t.prototype.componentDidUpdate=function(e,t){e.location!==this.props.location&&this.state.shouldFocus&&this.focus()},t.prototype.focus=function(){var e=this.props.requestFocus;e?e(this.node):P?P=!1:this.node&&(this.node.contains(document.activeElement)||this.node.focus())},t.prototype.render=function(){var e=this,t=this.props,n=(t.children,t.style),i=(t.requestFocus,t.component),o=void 0===i?"div":i,a=(t.uri,t.location,h(t,["children","style","requestFocus","component","uri","location"]));return r.a.createElement(o,l({style:l({outline:"none"},n),tabIndex:"-1",ref:function(t){return e.node=t}},a),r.a.createElement(S.Provider,{value:this.requestFocus},this.props.children))},t}(r.a.Component);Object(d.polyfill)(B);var x=function(){},w=r.a.forwardRef;void 0===w&&(w=function(e){return e});var L=w((function(e,t){var n=e.innerRef,i=h(e,["innerRef"]);return r.a.createElement(T.Consumer,null,(function(e){e.basepath;var o=e.baseuri;return r.a.createElement(A,null,(function(e){var a=e.location,s=e.navigate,c=i.to,d=i.state,u=i.replace,m=i.getProps,f=void 0===m?x:m,y=h(i,["to","state","replace","getProps"]),g=Object(p.d)(c,o),b=encodeURI(g),A=a.pathname===b,D=Object(p.f)(a.pathname,b);return r.a.createElement("a",l({ref:t||n,"aria-current":A?"page":void 0},y,f({isCurrent:A,isPartiallyCurrent:D,href:g,location:a}),{href:g,onClick:function(e){if(y.onClick&&y.onClick(e),V(e)){e.preventDefault();var t=u;if("boolean"!=typeof u&&A){var n=l({},a.state),i=(n.key,h(n,["key"]));t=Object(p.e)(l({},d),i)}s(g,{state:d,replace:t})}}}))}))}))}));function O(e){this.uri=e}L.displayName="Link";var M=function(e){return e instanceof O},U=function(e){throw new O(e)},E=function(e){function t(){return m(this,t),f(this,e.apply(this,arguments))}return y(t,e),t.prototype.componentDidMount=function(){var e=this.props,t=e.navigate,n=e.to,i=(e.from,e.replace),r=void 0===i||i,o=e.state,a=(e.noThrow,e.baseuri),s=h(e,["navigate","to","from","replace","state","noThrow","baseuri"]);Promise.resolve().then((function(){var e=Object(p.d)(n,a);t(Object(p.a)(e,s),{replace:r,state:o})}))},t.prototype.render=function(){var e=this.props,t=(e.navigate,e.to),n=(e.from,e.replace,e.state,e.noThrow),i=e.baseuri,r=h(e,["navigate","to","from","replace","state","noThrow","baseuri"]),o=Object(p.d)(t,i);return n||U(Object(p.a)(o,r)),null},t}(r.a.Component),F=function(e){return r.a.createElement(T.Consumer,null,(function(t){var n=t.baseuri;return r.a.createElement(A,null,(function(t){return r.a.createElement(E,l({},t,{baseuri:n},e))}))}))},X=function(e){var t=e.path,n=e.children;return r.a.createElement(T.Consumer,null,(function(e){var i=e.baseuri;return r.a.createElement(A,null,(function(e){var r=e.navigate,o=e.location,a=Object(p.d)(t,i),s=Object(p.b)(a,o.pathname);return n({navigate:r,location:o,match:s?l({},s.params,{uri:s.uri,path:t}):null})}))}))},K=function(){var e=Object(i.useContext)(b);if(!e)throw new Error("useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");return e.location},q=function(){var e=Object(i.useContext)(b);if(!e)throw new Error("useNavigate hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");return e.navigate},G=function(){var e=Object(i.useContext)(T);if(!e)throw new Error("useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");var t=K(),n=Object(p.b)(e.basepath,t.pathname);return n?n.params:null},j=function(e){if(!e)throw new Error("useMatch(path: string) requires an argument of a string to match against");var t=Object(i.useContext)(T);if(!t)throw new Error("useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");var n=K(),r=Object(p.d)(e,t.baseuri),o=Object(p.b)(r,n.pathname);return o?l({},o.params,{uri:o.uri,path:e}):null},k=function(e){return e.replace(/(^\/+|\/+$)/g,"")},H=function e(t){return function(n){if(!n)return null;if(n.type===r.a.Fragment&&n.props.children)return r.a.Children.map(n.props.children,e(t));if(n.props.path||n.props.default||n.type===F||a()(!1),n.type!==F||n.props.from&&n.props.to||a()(!1),n.type!==F||Object(p.g)(n.props.from,n.props.to)||a()(!1),n.props.default)return{value:n,default:!0};var i=n.type===F?n.props.from:n.props.path,o="/"===i?t:k(t)+"/"+k(i);return{value:n,default:n.props.default,path:n.props.children?k(o)+"/*":o}}},V=function(e){return!e.defaultPrevented&&0===e.button&&!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}},Z2Ku:function(e,t,n){"use strict";var i=n("XKFU"),r=n("w2a5")(!0);i(i.P,"Array",{includes:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n("nGyu")("includes")},Z6vF:function(e,t,n){var i=n("ylqs")("meta"),r=n("0/R4"),o=n("aagx"),a=n("hswa").f,s=0,c=Object.isExtensible||function(){return!0},d=!n("eeVq")((function(){return c(Object.preventExtensions({}))})),p=function(e){a(e,i,{value:{i:"O"+ ++s,w:{}}})},u=e.exports={KEY:i,NEED:!1,fastKey:function(e,t){if(!r(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,i)){if(!c(e))return"F";if(!t)return"E";p(e)}return e[i].i},getWeak:function(e,t){if(!o(e,i)){if(!c(e))return!0;if(!t)return!1;p(e)}return e[i].w},onFreeze:function(e){return d&&u.NEED&&c(e)&&!o(e,i)&&p(e),e}}},ZD67:function(e,t,n){"use strict";var i=n("3Lyj"),r=n("Z6vF").getWeak,o=n("y3w9"),a=n("0/R4"),s=n("9gX7"),c=n("SlkY"),d=n("CkkT"),p=n("aagx"),u=n("s5qY"),l=d(5),h=d(6),m=0,f=function(e){return e._l||(e._l=new y)},y=function(){this.a=[]},g=function(e,t){return l(e.a,(function(e){return e[0]===t}))};y.prototype={get:function(e){var t=g(this,e);if(t)return t[1]},has:function(e){return!!g(this,e)},set:function(e,t){var n=g(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=h(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,o){var d=e((function(e,i){s(e,d,t,"_i"),e._t=t,e._i=m++,e._l=void 0,null!=i&&c(i,n,e[o],e)}));return i(d.prototype,{delete:function(e){if(!a(e))return!1;var n=r(e);return!0===n?f(u(this,t)).delete(e):n&&p(n,this._i)&&delete n[this._i]},has:function(e){if(!a(e))return!1;var n=r(e);return!0===n?f(u(this,t)).has(e):n&&p(n,this._i)}}),d},def:function(e,t,n){var i=r(o(t),!0);return!0===i?f(e).set(t,n):i[e._i]=n,e},ufstore:f}},ZfQF:function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=function(e,t){var n=(0,r.default)(e);if(void 0===t)return n?"pageYOffset"in n?n.pageYOffset:n.document.documentElement.scrollTop:e.scrollTop;n?n.scrollTo("pageXOffset"in n?n.pageXOffset:n.document.documentElement.scrollLeft,t):e.scrollTop=t};var r=i(n("8Y+z"));e.exports=t.default},a1Th:function(e,t,n){"use strict";n("OEbY");var i=n("y3w9"),r=n("C/va"),o=n("nh4g"),a=/./.toString,s=function(e){n("KroJ")(RegExp.prototype,"toString",e,!0)};n("eeVq")((function(){return"/a/b"!=a.call({source:"a",flags:"b"})}))?s((function(){var e=i(this);return"/".concat(e.source,"/","flags"in e?e.flags:!o&&e instanceof RegExp?r.call(e):void 0)})):"toString"!=a.name&&s((function(){return a.call(this)}))},aCFj:function(e,t,n){var i=n("Ymqv"),r=n("vhPU");e.exports=function(e){return i(r(e))}},aJjT:function(e,t,n){n("V+eJ"),n("KKXr"),n("Tze0"),n("pIFo"),e.exports=function e(t){"use strict";var n=/^\0+/g,i=/[\0\r\f]/g,r=/: */g,o=/zoo|gra/,a=/([,: ])(transform)/g,s=/,+\s*(?![^(]*[)])/g,c=/ +\s*(?![^(]*[)])/g,d=/ *[\0] */g,p=/,\r+?/g,u=/([\t\r\n ])*\f?&/g,l=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,h=/\W+/g,m=/@(k\w+)\s*(\S*)\s*/,f=/::(place)/g,y=/:(read-only)/g,g=/\s+(?=[{\];=:>])/g,b=/([[}=:>])\s+/g,A=/(\{[^{]+?);(?=\})/g,D=/\s{2,}/g,C=/([^\(])(:+) */g,T=/[svh]\w+-[tblr]{2}/,I=/\(\s*(.*)\s*\)/g,R=/([\s\S]*?);/g,S=/-self|flex-/g,N=/[^]*?(:[rp][el]a[\w-]+)[^]*/,P=/stretch|:\s*\w+\-(?:conte|avail)/,v=/([^-])(image-set\()/,B="-webkit-",x="-moz-",w="-ms-",L=59,O=125,M=123,U=40,E=41,F=10,X=13,K=32,q=45,G=42,j=44,k=58,H=47,V=1,W=1,Y=0,Z=1,_=1,J=1,z=0,$=0,Q=0,ee=[],te=[],ne=0,ie=null,re=0,oe=1,ae="",se="",ce="";function de(e,t,r,o,a){for(var s,c,p=0,u=0,l=0,h=0,g=0,b=0,A=0,D=0,T=0,R=0,S=0,N=0,P=0,v=0,x=0,w=0,z=0,te=0,ie=0,ue=r.length,ge=ue-1,be="",Ae="",De="",Ce="",Te="",Ie="";x<ue;){if(A=r.charCodeAt(x),x===ge&&u+h+l+p!==0&&(0!==u&&(A=u===H?F:H),h=l=p=0,ue++,ge++),u+h+l+p===0){if(x===ge&&(w>0&&(Ae=Ae.replace(i,"")),Ae.trim().length>0)){switch(A){case K:case 9:case L:case X:case F:break;default:Ae+=r.charAt(x)}A=L}if(1===z)switch(A){case M:case O:case L:case 34:case 39:case U:case E:case j:z=0;case 9:case X:case F:case K:break;default:for(z=0,ie=x,g=A,x--,A=L;ie<ue;)switch(r.charCodeAt(ie++)){case F:case X:case L:++x,A=g,ie=ue;break;case k:w>0&&(++x,A=g);case M:ie=ue}}switch(A){case M:for(g=(Ae=Ae.trim()).charCodeAt(0),S=1,ie=++x;x<ue;){switch(A=r.charCodeAt(x)){case M:S++;break;case O:S--;break;case H:switch(b=r.charCodeAt(x+1)){case G:case H:x=ye(b,x,ge,r)}break;case 91:A++;case U:A++;case 34:case 39:for(;x++<ge&&r.charCodeAt(x)!==A;);}if(0===S)break;x++}switch(De=r.substring(ie,x),0===g&&(g=(Ae=Ae.replace(n,"").trim()).charCodeAt(0)),g){case 64:switch(w>0&&(Ae=Ae.replace(i,"")),b=Ae.charCodeAt(1)){case 100:case 109:case 115:case q:s=t;break;default:s=ee}if(ie=(De=de(t,s,De,b,a+1)).length,Q>0&&0===ie&&(ie=Ae.length),ne>0&&(c=fe(3,De,s=pe(ee,Ae,te),t,W,V,ie,b,a,o),Ae=s.join(""),void 0!==c&&0===(ie=(De=c.trim()).length)&&(b=0,De="")),ie>0)switch(b){case 115:Ae=Ae.replace(I,me);case 100:case 109:case q:De=Ae+"{"+De+"}";break;case 107:De=(Ae=Ae.replace(m,"$1 $2"+(oe>0?ae:"")))+"{"+De+"}",De=1===_||2===_&&he("@"+De,3)?"@"+B+De+"@"+De:"@"+De;break;default:De=Ae+De,112===o&&(Ce+=De,De="")}else De="";break;default:De=de(t,pe(t,Ae,te),De,o,a+1)}Te+=De,N=0,z=0,v=0,w=0,te=0,P=0,Ae="",De="",A=r.charCodeAt(++x);break;case O:case L:if((ie=(Ae=(w>0?Ae.replace(i,""):Ae).trim()).length)>1)switch(0===v&&((g=Ae.charCodeAt(0))===q||g>96&&g<123)&&(ie=(Ae=Ae.replace(" ",":")).length),ne>0&&void 0!==(c=fe(1,Ae,t,e,W,V,Ce.length,o,a,o))&&0===(ie=(Ae=c.trim()).length)&&(Ae="\0\0"),g=Ae.charCodeAt(0),b=Ae.charCodeAt(1),g){case 0:break;case 64:if(105===b||99===b){Ie+=Ae+r.charAt(x);break}default:if(Ae.charCodeAt(ie-1)===k)break;Ce+=le(Ae,g,b,Ae.charCodeAt(2))}N=0,z=0,v=0,w=0,te=0,Ae="",A=r.charCodeAt(++x)}}switch(A){case X:case F:if(u+h+l+p+$===0)switch(R){case E:case 39:case 34:case 64:case 126:case 62:case G:case 43:case H:case q:case k:case j:case L:case M:case O:break;default:v>0&&(z=1)}u===H?u=0:Z+N===0&&107!==o&&Ae.length>0&&(w=1,Ae+="\0"),ne*re>0&&fe(0,Ae,t,e,W,V,Ce.length,o,a,o),V=1,W++;break;case L:case O:if(u+h+l+p===0){V++;break}default:switch(V++,be=r.charAt(x),A){case 9:case K:if(h+p+u===0)switch(D){case j:case k:case 9:case K:be="";break;default:A!==K&&(be=" ")}break;case 0:be="\\0";break;case 12:be="\\f";break;case 11:be="\\v";break;case 38:h+u+p===0&&Z>0&&(te=1,w=1,be="\f"+be);break;case 108:if(h+u+p+Y===0&&v>0)switch(x-v){case 2:112===D&&r.charCodeAt(x-3)===k&&(Y=D);case 8:111===T&&(Y=T)}break;case k:h+u+p===0&&(v=x);break;case j:u+l+h+p===0&&(w=1,be+="\r");break;case 34:case 39:0===u&&(h=h===A?0:0===h?A:h);break;case 91:h+u+l===0&&p++;break;case 93:h+u+l===0&&p--;break;case E:h+u+p===0&&l--;break;case U:if(h+u+p===0){if(0===N)switch(2*D+3*T){case 533:break;default:S=0,N=1}l++}break;case 64:u+l+h+p+v+P===0&&(P=1);break;case G:case H:if(h+p+l>0)break;switch(u){case 0:switch(2*A+3*r.charCodeAt(x+1)){case 235:u=H;break;case 220:ie=x,u=G}break;case G:A===H&&D===G&&ie+2!==x&&(33===r.charCodeAt(ie+2)&&(Ce+=r.substring(ie,x+1)),be="",u=0)}}if(0===u){if(Z+h+p+P===0&&107!==o&&A!==L)switch(A){case j:case 126:case 62:case 43:case E:case U:if(0===N){switch(D){case 9:case K:case F:case X:be+="\0";break;default:be="\0"+be+(A===j?"":"\0")}w=1}else switch(A){case U:v+7===x&&108===D&&(v=0),N=++S;break;case E:0==(N=--S)&&(w=1,be+="\0")}break;case 9:case K:switch(D){case 0:case M:case O:case L:case j:case 12:case 9:case K:case F:case X:break;default:0===N&&(w=1,be+="\0")}}Ae+=be,A!==K&&9!==A&&(R=A)}}T=D,D=A,x++}if(ie=Ce.length,Q>0&&0===ie&&0===Te.length&&0===t[0].length==0&&(109!==o||1===t.length&&(Z>0?se:ce)===t[0])&&(ie=t.join(",").length+2),ie>0){if(s=0===Z&&107!==o?function(e){for(var t,n,r=0,o=e.length,a=Array(o);r<o;++r){for(var s=e[r].split(d),c="",p=0,u=0,l=0,h=0,m=s.length;p<m;++p)if(!(0===(u=(n=s[p]).length)&&m>1)){if(l=c.charCodeAt(c.length-1),h=n.charCodeAt(0),t="",0!==p)switch(l){case G:case 126:case 62:case 43:case K:case U:break;default:t=" "}switch(h){case 38:n=t+se;case 126:case 62:case 43:case K:case E:case U:break;case 91:n=t+n+se;break;case k:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(J>0){n=t+n.substring(8,u-1);break}default:(p<1||s[p-1].length<1)&&(n=t+se+n)}break;case j:t="";default:n=u>1&&n.indexOf(":")>0?t+n.replace(C,"$1"+se+"$2"):t+n+se}c+=n}a[r]=c.replace(i,"").trim()}return a}(t):t,ne>0&&void 0!==(c=fe(2,Ce,s,e,W,V,ie,o,a,o))&&0===(Ce=c).length)return Ie+Ce+Te;if(Ce=s.join(",")+"{"+Ce+"}",_*Y!=0){switch(2!==_||he(Ce,2)||(Y=0),Y){case 111:Ce=Ce.replace(y,":-moz-$1")+Ce;break;case 112:Ce=Ce.replace(f,"::"+B+"input-$1")+Ce.replace(f,"::-moz-$1")+Ce.replace(f,":-ms-input-$1")+Ce}Y=0}}return Ie+Ce+Te}function pe(e,t,n){var i=t.trim().split(p),r=i,o=i.length,a=e.length;switch(a){case 0:case 1:for(var s=0,c=0===a?"":e[0]+" ";s<o;++s)r[s]=ue(c,r[s],n,a).trim();break;default:s=0;var d=0;for(r=[];s<o;++s)for(var u=0;u<a;++u)r[d++]=ue(e[u]+" ",i[s],n,a).trim()}return r}function ue(e,t,n,i){var r=t,o=r.charCodeAt(0);switch(o<33&&(o=(r=r.trim()).charCodeAt(0)),o){case 38:switch(Z+i){case 0:case 1:if(0===e.trim().length)break;default:return r.replace(u,"$1"+e.trim())}break;case k:switch(r.charCodeAt(1)){case 103:if(J>0&&Z>0)return r.replace(l,"$1").replace(u,"$1"+ce);break;default:return e.trim()+r.replace(u,"$1"+e.trim())}default:if(n*Z>0&&r.indexOf("\f")>0)return r.replace(u,(e.charCodeAt(0)===k?"":"$1")+e.trim())}return e+r}function le(e,t,n,i){var d,p=0,u=e+";",l=2*t+3*n+4*i;if(944===l)return function(e){var t=e.length,n=e.indexOf(":",9)+1,i=e.substring(0,n).trim(),r=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*oe){case 0:break;case q:if(110!==e.charCodeAt(10))break;default:var o=r.split((r="",s)),a=0;for(n=0,t=o.length;a<t;n=0,++a){for(var d=o[a],p=d.split(c);d=p[n];){var u=d.charCodeAt(0);if(1===oe&&(u>64&&u<90||u>96&&u<123||95===u||u===q&&d.charCodeAt(1)!==q))switch(isNaN(parseFloat(d))+(-1!==d.indexOf("("))){case 1:switch(d){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:d+=ae}}p[n++]=d}r+=(0===a?"":",")+p.join(" ")}}return r=i+r+";",1===_||2===_&&he(r,1)?B+r+r:r}(u);if(0===_||2===_&&!he(u,1))return u;switch(l){case 1015:return 97===u.charCodeAt(10)?B+u+u:u;case 951:return 116===u.charCodeAt(3)?B+u+u:u;case 963:return 110===u.charCodeAt(5)?B+u+u:u;case 1009:if(100!==u.charCodeAt(4))break;case 969:case 942:return B+u+u;case 978:return B+u+x+u+u;case 1019:case 983:return B+u+x+u+w+u+u;case 883:return u.charCodeAt(8)===q?B+u+u:u.indexOf("image-set(",11)>0?u.replace(v,"$1"+B+"$2")+u:u;case 932:if(u.charCodeAt(4)===q)switch(u.charCodeAt(5)){case 103:return B+"box-"+u.replace("-grow","")+B+u+w+u.replace("grow","positive")+u;case 115:return B+u+w+u.replace("shrink","negative")+u;case 98:return B+u+w+u.replace("basis","preferred-size")+u}return B+u+w+u+u;case 964:return B+u+w+"flex-"+u+u;case 1023:if(99!==u.charCodeAt(8))break;return d=u.substring(u.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),B+"box-pack"+d+B+u+w+"flex-pack"+d+u;case 1005:return o.test(u)?u.replace(r,":"+B)+u.replace(r,":"+x)+u:u;case 1e3:switch(p=(d=u.substring(13).trim()).indexOf("-")+1,d.charCodeAt(0)+d.charCodeAt(p)){case 226:d=u.replace(T,"tb");break;case 232:d=u.replace(T,"tb-rl");break;case 220:d=u.replace(T,"lr");break;default:return u}return B+u+w+d+u;case 1017:if(-1===u.indexOf("sticky",9))return u;case 975:switch(p=(u=e).length-10,l=(d=(33===u.charCodeAt(p)?u.substring(0,p):u).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|d.charCodeAt(7))){case 203:if(d.charCodeAt(8)<111)break;case 115:u=u.replace(d,B+d)+";"+u;break;case 207:case 102:u=u.replace(d,B+(l>102?"inline-":"")+"box")+";"+u.replace(d,B+d)+";"+u.replace(d,w+d+"box")+";"+u}return u+";";case 938:if(u.charCodeAt(5)===q)switch(u.charCodeAt(6)){case 105:return d=u.replace("-items",""),B+u+B+"box-"+d+w+"flex-"+d+u;case 115:return B+u+w+"flex-item-"+u.replace(S,"")+u;default:return B+u+w+"flex-line-pack"+u.replace("align-content","").replace(S,"")+u}break;case 973:case 989:if(u.charCodeAt(3)!==q||122===u.charCodeAt(4))break;case 931:case 953:if(!0===P.test(e))return 115===(d=e.substring(e.indexOf(":")+1)).charCodeAt(0)?le(e.replace("stretch","fill-available"),t,n,i).replace(":fill-available",":stretch"):u.replace(d,B+d)+u.replace(d,x+d.replace("fill-",""))+u;break;case 962:if(u=B+u+(102===u.charCodeAt(5)?w+u:"")+u,n+i===211&&105===u.charCodeAt(13)&&u.indexOf("transform",10)>0)return u.substring(0,u.indexOf(";",27)+1).replace(a,"$1"+B+"$2")+u}return u}function he(e,t){var n=e.indexOf(1===t?":":"{"),i=e.substring(0,3!==t?n:10),r=e.substring(n+1,e.length-1);return ie(2!==t?i:i.replace(N,"$1"),r,t)}function me(e,t){var n=le(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(R," or ($1)").substring(4):"("+t+")"}function fe(e,t,n,i,r,o,a,s,c,d){for(var p,u=0,l=t;u<ne;++u)switch(p=te[u].call(be,e,l,n,i,r,o,a,s,c,d)){case void 0:case!1:case!0:case null:break;default:l=p}if(l!==t)return l}function ye(e,t,n,i){for(var r=t+1;r<n;++r)switch(i.charCodeAt(r)){case H:if(e===G&&i.charCodeAt(r-1)===G&&t+2!==r)return r+1;break;case F:if(e===H)return r+1}return r}function ge(e){for(var t in e){var n=e[t];switch(t){case"keyframe":oe=0|n;break;case"global":J=0|n;break;case"cascade":Z=0|n;break;case"compress":z=0|n;break;case"semicolon":$=0|n;break;case"preserve":Q=0|n;break;case"prefix":ie=null,n?"function"!=typeof n?_=1:(_=2,ie=n):_=0}}return ge}function be(t,n){if(void 0!==this&&this.constructor===be)return e(t);var r=t,o=r.charCodeAt(0);o<33&&(o=(r=r.trim()).charCodeAt(0)),oe>0&&(ae=r.replace(h,91===o?"":"-")),o=1,1===Z?ce=r:se=r;var a,s=[ce];ne>0&&void 0!==(a=fe(-1,n,s,s,W,V,0,0,0,0))&&"string"==typeof a&&(n=a);var c=de(ee,s,n,0,0);return ne>0&&void 0!==(a=fe(-2,c,s,s,W,V,c.length,0,0,0))&&"string"!=typeof(c=a)&&(o=0),ae="",ce="",se="",Y=0,W=1,V=1,z*o==0?c:c.replace(i,"").replace(g,"").replace(b,"$1").replace(A,"$1").replace(D," ")}return be.use=function e(t){switch(t){case void 0:case null:ne=te.length=0;break;default:if("function"==typeof t)te[ne++]=t;else if("object"==typeof t)for(var n=0,i=t.length;n<i;++n)e(t[n]);else re=0|!!t}return e},be.set=ge,void 0!==t&&ge(t),be}(null)},aagx:function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},apmT:function(e,t,n){var i=n("0/R4");e.exports=function(e,t){if(!i(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!i(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},b9Nj:function(e,t,n){"use strict";n("OG14"),n("91GP");var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e};t.onRouteUpdate=function(e){var t=e.location,n=window.GATSBY_GTAG_PLUGIN_GA_TRACKING_ID,r=window.GATSBY_GTAG_PLUGIN_ANONYMIZE||!1;if(n&&"function"==typeof window.gtag){var o="";t&&(o=""+t.pathname+t.search+t.hash);var a={};r&&(a={anonymize_ip:!0}),window.gtag("config",n,i({page_path:o},a))}}},bHtr:function(e,t,n){var i=n("XKFU");i(i.P,"Array",{fill:n("Nr18")}),n("nGyu")("fill")},bWfx:function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(1);i(i.P+i.F*!n("LyE8")([].map,!0),"Array",{map:function(e){return r(this,e,arguments[1])}})},c0Fl:function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=void 0;var r=function(){};i(n("Bp9Y")).default&&(r=document.addEventListener?function(e,t,n,i){return e.removeEventListener(t,n,i||!1)}:document.attachEvent?function(e,t,n){return e.detachEvent("on"+t,n)}:void 0);var o=r;t.default=o,e.exports=t.default},cSJ8:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n("9VmF");function i(e,t){return void 0===t&&(t=""),t?e===t?"/":e.startsWith(t+"/")?e.slice(t.length):e:e}},cu4x:function(e,t,n){"use strict";t.__esModule=!0,t.parsePath=function(e){var t=e||"/",n="",i="",r=t.indexOf("#");-1!==r&&(i=t.substr(r),t=t.substr(0,r));var o=t.indexOf("?");-1!==o&&(n=t.substr(o),t=t.substr(0,o));return{pathname:t,search:"?"===n?"":n,hash:"#"===i?"":i}}},czNK:function(e,t,n){"use strict";var i=n("nh4g"),r=n("DVgA"),o=n("JiEa"),a=n("UqcF"),s=n("S/j/"),c=n("Ymqv"),d=Object.assign;e.exports=!d||n("eeVq")((function(){var e={},t={},n=Symbol(),i="abcdefghijklmnopqrst";return e[n]=7,i.split("").forEach((function(e){t[e]=e})),7!=d({},e)[n]||Object.keys(d({},t)).join("")!=i}))?function(e,t){for(var n=s(e),d=arguments.length,p=1,u=o.f,l=a.f;d>p;)for(var h,m=c(arguments[p++]),f=u?r(m).concat(u(m)):r(m),y=f.length,g=0;y>g;)h=f[g++],i&&!l.call(m,h)||(n[h]=m[h]);return n}:d},"d/Gc":function(e,t,n){var i=n("RYi7"),r=Math.max,o=Math.min;e.exports=function(e,t){return(e=i(e))<0?r(e+t,0):o(e,t)}},dJMH:function(e,t,n){"use strict";n("rGqo"),n("yt8O"),n("Btvt"),n("XfO3"),n("EK0E"),n("HAE/"),Object.defineProperty(t,"__esModule",{value:!0}),t.Flex=t.Box=void 0;c(n("q1tI"));var i=c(n("5D9J")),r=n("za5s"),o=function(e){if(e&&e.__esModule)return e;var t=s();if(t&&t.has(e))return t.get(e);var n={};if(null!=e){var i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var o=i?Object.getOwnPropertyDescriptor(e,r):null;o&&(o.get||o.set)?Object.defineProperty(n,r,o):n[r]=e[r]}}n.default=e,t&&t.set(e,n);return n}(n("OJSm")),a=c(n("rKjV"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function c(e){return e&&e.__esModule?e:{default:e}}var d=(0,i.default)("div",{shouldForwardProp:a.default})({boxSizing:"border-box",margin:0,minWidth:0},(function(e){return(0,o.default)(e.__css)(e.theme)}),(function(e){var t=e.theme,n=e.variant,i=e.tx,r=void 0===i?"variants":i;return(0,o.default)((0,o.get)(t,r+"."+n,(0,o.get)(t,n)))(t)}),(function(e){return(0,o.default)(e.sx)(e.theme)}),(function(e){return e.css}),(0,r.compose)(r.space,r.layout,r.typography,r.color,r.flexbox));t.Box=d;var p=(0,i.default)(d)({display:"flex"});t.Flex=p},dJPS:function(e,t,n){},dRSK:function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(5),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),i(i.P+i.F*o,"Array",{find:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n("nGyu")("find")},"dZ+Y":function(e,t,n){"use strict";var i=n("XKFU"),r=n("CkkT")(3);i(i.P+i.F*!n("LyE8")([].some,!0),"Array",{some:function(e){return r(this,e,arguments[1])}})},dpYK:function(e,t,n){"use strict";n("pIFo");e.exports=function(){}},dyZX:function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},e7yV:function(e,t,n){var i=n("aCFj"),r=n("kJMx").f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==o.call(e)?function(e){try{return r(e)}catch(t){return a.slice()}}(e):r(i(e))}},eM6i:function(e,t,n){var i=n("XKFU");i(i.S,"Date",{now:function(){return(new Date).getTime()}})},eeVq:function(e,t){e.exports=function(e){try{return!!e()}catch(t){return!0}}},elZq:function(e,t,n){"use strict";var i=n("dyZX"),r=n("hswa"),o=n("nh4g"),a=n("K0xU")("species");e.exports=function(e){var t=i[e];o&&t&&!t[a]&&r.f(t,a,{configurable:!0,get:function(){return this}})}},emEt:function(e,t,n){"use strict";n.r(t),n.d(t,"PageResourceStatus",(function(){return A})),n.d(t,"BaseLoader",(function(){return S})),n.d(t,"ProdLoader",(function(){return P})),n.d(t,"setLoader",(function(){return v})),n.d(t,"publicLoader",(function(){return B}));n("HEwt"),n("a1Th"),n("rE2o"),n("ioFf"),n("T39b"),n("rGqo"),n("yt8O"),n("XfO3"),n("9AAn"),n("Z2Ku"),n("L9s1"),n("91GP"),n("VRzm"),n("Btvt"),n("rvZc"),n("RW0V");var i=function(e){if("undefined"==typeof document)return!1;var t=document.createElement("link");try{if(t.relList&&"function"==typeof t.relList.supports)return t.relList.supports(e)}catch(n){return!1}return!1}("prefetch")?function(e,t){return new Promise((function(n,i){if("undefined"!=typeof document){var r=document.createElement("link");r.setAttribute("rel","prefetch"),r.setAttribute("href",e),Object.keys(t).forEach((function(e){r.setAttribute(e,t[e])})),r.onload=n,r.onerror=i,(document.getElementsByTagName("head")[0]||document.getElementsByName("script")[0].parentNode).appendChild(r)}else i()}))}:function(e){return new Promise((function(t,n){var i=new XMLHttpRequest;i.open("GET",e,!0),i.onload=function(){200===i.status?t():n()},i.send(null)}))},r={},o=function(e,t){return new Promise((function(n){r[e]?n():i(e,t).then((function(){n(),r[e]=!0})).catch((function(){}))}))},a=n("5yr3"),s=(n("9VmF"),n("KKXr"),n("LYrO")),c=n("cSJ8"),d=function(e){return void 0===e?e:"/"===e?"/":"/"===e.charAt(e.length-1)?e.slice(0,-1):e},p=new Map,u=[],l=function(e){var t=decodeURIComponent(e);return Object(c.a)(t,"").split("#")[0].split("?")[0]};function h(e){return e.startsWith("/")||e.startsWith("https://")||e.startsWith("http://")?e:new URL(e,window.location.href+(window.location.href.endsWith("/")?"":"/")).pathname}var m=function(e){var t=y(e),n=u,i=Array.isArray(n),r=0;for(n=i?n:n[Symbol.iterator]();;){var o;if(i){if(r>=n.length)break;o=n[r++]}else{if((r=n.next()).done)break;o=r.value}var a=o,c=a.matchPath,p=a.path;if(Object(s.b)(c,t))return d(p)}return null},f=function(e){var t=l(h(e));if(p.has(t))return p.get(t);var n=m(t);return n||(n=y(e)),p.set(t,n),n},y=function(e){var t=l(h(e));return"/index.html"===t&&(t="/"),t=d(t)};function g(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var b,A={Error:"error",Success:"success"},D=function(e){return e&&e.default||e},C=function(e){var t;return"/page-data/"+("/"===e?"index":t=(t="/"===(t=e)[0]?t.slice(1):t).endsWith("/")?t.slice(0,-1):t)+"/page-data.json"},T=function(e,t){return void 0===t&&(t="GET"),new Promise((function(n,i){var r=new XMLHttpRequest;r.open(t,e,!0),r.onreadystatechange=function(){4==r.readyState&&n(r)},r.send(null)}))},I=function(e){var t=e.pagePath,n=e.retries,i=void 0===n?0:n,r=C(t);return T(r).then((function(n){var r=n.status,o=n.responseText;if(200===r)try{var a=JSON.parse(o);if(void 0===a.path)throw new Error("not a valid pageData response");return Object.assign(e,{status:A.Success,payload:a})}catch(s){}return 404===r||200===r?"/404.html"===t?Object.assign(e,{status:A.Error}):I(Object.assign(e,{pagePath:"/404.html",notFound:!0})):500===r?Object.assign(e,{status:A.Error}):i<3?I(Object.assign(e,{retries:i+1})):Object.assign(e,{status:A.Error})}))},R=function(e,t){void 0===t&&(t=null);var n={componentChunkName:e.componentChunkName,path:e.path,webpackCompilationHash:e.webpackCompilationHash,matchPath:e.matchPath};return{component:t,json:e.result,page:n}},S=function(){function e(e,t){this.pageDb=new Map,this.inFlightDb=new Map,this.pageDataDb=new Map,this.prefetchTriggered=new Set,this.prefetchCompleted=new Set,this.loadComponent=e,u=t}var t=e.prototype;return t.setApiRunner=function(e){this.apiRunner=e,this.prefetchDisabled=e("disableCorePrefetching").some((function(e){return e}))},t.loadPageDataJson=function(e){var t=this,n=f(e);return this.pageDataDb.has(n)?Promise.resolve(this.pageDataDb.get(n)):I({pagePath:n}).then((function(e){return t.pageDataDb.set(n,e),e}))},t.findMatchPath=function(e){return m(e)},t.loadPage=function(e){var t=this,n=f(e);if(this.pageDb.has(n)){var i=this.pageDb.get(n);return Promise.resolve(i.payload)}if(this.inFlightDb.has(n))return this.inFlightDb.get(n);var r=Promise.all([this.loadAppData(),this.loadPageDataJson(n)]).then((function(e){var i=e[1];if(i.status===A.Error)return{status:A.Error};var r=i.payload,o=r.componentChunkName;return t.loadComponent(o).then((function(o){var s,c={createdAt:new Date};return o?(c.status=A.Success,!0===i.notFound&&(c.notFound=!0),r=Object.assign(r,{webpackCompilationHash:e[0]?e[0].webpackCompilationHash:""}),s=R(r,o),c.payload=s,a.a.emit("onPostLoadPageResources",{page:s,pageResources:s})):c.status=A.Error,t.pageDb.set(n,c),s}))})).then((function(e){return t.inFlightDb.delete(n),e})).catch((function(e){throw t.inFlightDb.delete(n),e}));return this.inFlightDb.set(n,r),r},t.loadPageSync=function(e){var t=f(e);if(this.pageDb.has(t))return this.pageDb.get(t).payload},t.shouldPrefetch=function(e){return!!function(){if("connection"in navigator&&void 0!==navigator.connection){if((navigator.connection.effectiveType||"").includes("2g"))return!1;if(navigator.connection.saveData)return!1}return!0}()&&!this.pageDb.has(e)},t.prefetch=function(e){var t=this;if(!this.shouldPrefetch(e))return!1;if(this.prefetchTriggered.has(e)||(this.apiRunner("onPrefetchPathname",{pathname:e}),this.prefetchTriggered.add(e)),this.prefetchDisabled)return!1;var n=f(e);return this.doPrefetch(n).then((function(){t.prefetchCompleted.has(e)||(t.apiRunner("onPostPrefetchPathname",{pathname:e}),t.prefetchCompleted.add(e))})),!0},t.doPrefetch=function(e){throw new Error("doPrefetch not implemented")},t.hovering=function(e){this.loadPage(e)},t.getResourceURLsForPathname=function(e){var t=f(e),n=this.pageDataDb.get(t);if(n){var i=R(n.payload);return[].concat(g(N(i.page.componentChunkName)),[C(t)])}return null},t.isPageNotFound=function(e){var t=f(e),n=this.pageDb.get(t);return n&&!0===n.notFound},t.loadAppData=function(e){var t=this;return void 0===e&&(e=0),T("/page-data/app-data.json").then((function(n){var i,r=n.status,o=n.responseText;if(200!==r&&e<3)return t.loadAppData(e+1);if(200===r)try{var a=JSON.parse(o);if(void 0===a.webpackCompilationHash)throw new Error("not a valid app-data response");i=a}catch(s){}return i}))},e}(),N=function(e){return(window.___chunkMapping[e]||[]).map((function(e){return""+e}))},P=function(e){var t,n;function i(t,n){return e.call(this,(function(e){return t.components[e]?t.components[e]().then(D).catch((function(){return null})):Promise.resolve()}),n)||this}n=e,(t=i).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var r=i.prototype;return r.doPrefetch=function(e){var t=this,n=C(e);return o(n,{crossOrigin:"anonymous",as:"fetch"}).then((function(){return t.loadPageDataJson(e)})).then((function(e){if(e.status!==A.Success)return Promise.resolve();var t=e.payload,n=t.componentChunkName,i=N(n);return Promise.all(i.map(o)).then((function(){return t}))}))},r.loadPageDataJson=function(t){return e.prototype.loadPageDataJson.call(this,t).then((function(e){return e.notFound?T(t,"HEAD").then((function(t){return 200===t.status?{status:A.Error}:e})):e}))},i}(S),v=function(e){b=e},B={getResourcesForPathname:function(e){return console.warn("Warning: getResourcesForPathname is deprecated. Use loadPage instead"),b.i.loadPage(e)},getResourcesForPathnameSync:function(e){return console.warn("Warning: getResourcesForPathnameSync is deprecated. Use loadPageSync instead"),b.i.loadPageSync(e)},enqueue:function(e){return b.prefetch(e)},getResourceURLsForPathname:function(e){return b.getResourceURLsForPathname(e)},loadPage:function(e){return b.loadPage(e)},loadPageSync:function(e){return b.loadPageSync(e)},prefetch:function(e){return b.prefetch(e)},isPageNotFound:function(e){return b.isPageNotFound(e)},hovering:function(e){return b.hovering(e)},loadAppData:function(){return b.loadAppData()}};t.default=B},eyMr:function(e,t,n){var i=n("2OiF"),r=n("S/j/"),o=n("Ymqv"),a=n("ne8i");e.exports=function(e,t,n,s,c){i(t);var d=r(e),p=o(d),u=a(d.length),l=c?u-1:0,h=c?-1:1;if(n<2)for(;;){if(l in p){s=p[l],l+=h;break}if(l+=h,c?l<0:u<=l)throw TypeError("Reduce of empty array with no initial value")}for(;c?l>=0:u>l;l+=h)l in p&&(s=t(s,p[l],l,d));return s}},"f3/d":function(e,t,n){var i=n("hswa").f,r=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in r||n("nh4g")&&i(r,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},fA63:function(e,t,n){"use strict";n("qncB")("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},"flL/":function(e,t,n){"use strict";n.r(t),n.d(t,"wrapRootElement",(function(){return A}));n("/8Fb"),n("dRSK"),n("jm62"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var i=n("7ljp"),r=n("BfwJ"),o=n("gXpC"),a=(n("91GP"),n("JUDV").default),s=n("TIAS").default,c=n("7Bs9").default,d=n("u34n").default,p=n("JTKy").default,u=Object.assign({},a,s,c,d,p),l=n("qKvR");function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var y={};o.plugins.forEach((function(e){var t=e.guards,n=void 0===t?{}:t,i=e.components;Object.entries(i).forEach((function(e){var t=e[0],i=e[1];y[t]?y.push({guard:n[t],Component:i}):y[t]=[{guard:n[t],Component:i}]}))}));var g=Object.entries(y).map((function(e){var t,n=e[0],i=e[1];return(t={})[n]=function(e){return function(t){var n=e.find((function(e){var n=e.guard;return!n||n(t)})).Component;return Object(l.b)(n,t)}}(i.concat({guard:void 0,Component:n})),t})).reduce((function(e,t){return m(m({},e),t)}),{}),b=Object(i.withMDXComponents)((function(e){var t=e.components,n=e.children;return Object(l.b)(r.MDXScopeProvider,{__mdxScope:u},Object(l.b)(i.MDXProvider,{components:m(m({},t),g)},n))})),A=function(e){var t=e.element;return Object(l.b)(b,null,t)}},fyDq:function(e,t,n){var i=n("hswa").f,r=n("aagx"),o=n("K0xU")("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,o)&&i(e,o,{configurable:!0,value:t})}},g3g5:function(e,t){var n=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},g6HL:function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},gHnn:function(e,t,n){var i=n("dyZX"),r=n("GZEu").set,o=i.MutationObserver||i.WebKitMutationObserver,a=i.process,s=i.Promise,c="process"==n("LZWt")(a);e.exports=function(){var e,t,n,d=function(){var i,r;for(c&&(i=a.domain)&&i.exit();e;){r=e.fn,e=e.next;try{r()}catch(o){throw e?n():t=void 0,o}}t=void 0,i&&i.enter()};if(c)n=function(){a.nextTick(d)};else if(!o||i.navigator&&i.navigator.standalone)if(s&&s.resolve){var p=s.resolve(void 0);n=function(){p.then(d)}}else n=function(){r.call(i,d)};else{var u=!0,l=document.createTextNode("");new o(d).observe(l,{characterData:!0}),n=function(){l.data=u=!u}}return function(i){var r={fn:i,next:void 0};t&&(t.next=r),e||(e=r,n()),t=r}}},gRFL:function(e,t,n){"use strict";n("rGqo"),n("yt8O"),n("Btvt"),n("XfO3"),n("EK0E");t.a=function(e){var t=new WeakMap;return function(n){if(t.has(n))return t.get(n);var i=e(n);return t.set(n,i),i}}},gXpC:function(e,t){e.exports={plugins:[]}},gdQ2:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"e",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return d})),n.d(t,"f",(function(){return p}));var i=n("vOnD"),r=n("SlEa"),o=i.b.table.withConfig({componentId:"ts1pon-0"})(["width:auto;padding:0;line-height:24px;border-style:none;border-collapse:collapse;margin-top:30px;tr:nth-child(2n){background:",";}tr th:first-child,tr td:first-child{margin-top:0;}tr th:first-child,tr td:first-child{margin-top:0;}tr th:last-child,tr td:last-child{margin-bottom:0;}"],r.b.whiteLilac),a=i.b.thead.withConfig({componentId:"ts1pon-1"})(["text-align:left;font-size:18px;background:",";color:",";"],r.b.cornflowerBlue,r.b.brandSecondaryDarkest),s=i.b.th.withConfig({componentId:"ts1pon-2"})(["padding:30px 20px;font-weight:400;"]),c=i.b.tbody.withConfig({componentId:"ts1pon-3"})([""]),d=i.b.td.withConfig({componentId:"ts1pon-4"})(["margin:0;padding:20px;font-size:16px;text-align:left;color:",";&.has-wrappable-content{code{overflow-wrap:break-word;white-space:normal;@media screen and (min-width:","){overflow-wrap:anywhere;}@media screen and (min-width:","){overflow-wrap:break-word;}@media screen and (min-width:","){overflow-wrap:normal;white-space:nowrap;}}}code{font-size:12px;}"],r.b.brandGrayDarker,r.a.large,r.a.xLarge,r.a.xxLarge),p=i.b.tr.withConfig({componentId:"ts1pon-5"})(["margin:0;padding:0;"])},h7Nl:function(e,t,n){var i=Date.prototype,r=i.toString,o=i.getTime;new Date(NaN)+""!="Invalid Date"&&n("KroJ")(i,"toString",(function(){var e=o.call(this);return e==e?r.call(this):"Invalid Date"}))},hHhE:function(e,t,n){var i=n("XKFU");i(i.S,"Object",{create:n("Kuth")})},hLT2:function(e,t,n){var i=n("XKFU");i(i.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},hPIQ:function(e,t){e.exports={}},hhXQ:function(e,t,n){var i=n("XKFU"),r=n("UExd")(!1);i(i.S,"Object",{values:function(e){return r(e)}})},hswa:function(e,t,n){var i=n("y3w9"),r=n("xpql"),o=n("apmT"),a=Object.defineProperty;t.f=n("nh4g")?Object.defineProperty:function(e,t,n){if(i(e),t=o(t,!0),i(n),r)try{return a(e,t,n)}catch(s){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},i5dc:function(e,t,n){var i=n("0/R4"),r=n("y3w9"),o=function(e,t){if(r(e),!i(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,i){try{(i=n("m0Pp")(Function.call,n("EemH").f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(r){t=!0}return function(e,n){return o(e,n),t?e.__proto__=n:i(e,n),e}}({},!1):void 0),check:o}},ioFf:function(e,t,n){"use strict";var i=n("dyZX"),r=n("aagx"),o=n("nh4g"),a=n("XKFU"),s=n("KroJ"),c=n("Z6vF").KEY,d=n("eeVq"),p=n("VTer"),u=n("fyDq"),l=n("ylqs"),h=n("K0xU"),m=n("N8g3"),f=n("OnI7"),y=n("1MBn"),g=n("EWmC"),b=n("y3w9"),A=n("0/R4"),D=n("S/j/"),C=n("aCFj"),T=n("apmT"),I=n("RjD/"),R=n("Kuth"),S=n("e7yV"),N=n("EemH"),P=n("JiEa"),v=n("hswa"),B=n("DVgA"),x=N.f,w=v.f,L=S.f,O=i.Symbol,M=i.JSON,U=M&&M.stringify,E=h("_hidden"),F=h("toPrimitive"),X={}.propertyIsEnumerable,K=p("symbol-registry"),q=p("symbols"),G=p("op-symbols"),j=Object.prototype,k="function"==typeof O&&!!P.f,H=i.QObject,V=!H||!H.prototype||!H.prototype.findChild,W=o&&d((function(){return 7!=R(w({},"a",{get:function(){return w(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=x(j,t);i&&delete j[t],w(e,t,n),i&&e!==j&&w(j,t,i)}:w,Y=function(e){var t=q[e]=R(O.prototype);return t._k=e,t},Z=k&&"symbol"==typeof O.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof O},_=function(e,t,n){return e===j&&_(G,t,n),b(e),t=T(t,!0),b(n),r(q,t)?(n.enumerable?(r(e,E)&&e[E][t]&&(e[E][t]=!1),n=R(n,{enumerable:I(0,!1)})):(r(e,E)||w(e,E,I(1,{})),e[E][t]=!0),W(e,t,n)):w(e,t,n)},J=function(e,t){b(e);for(var n,i=y(t=C(t)),r=0,o=i.length;o>r;)_(e,n=i[r++],t[n]);return e},z=function(e){var t=X.call(this,e=T(e,!0));return!(this===j&&r(q,e)&&!r(G,e))&&(!(t||!r(this,e)||!r(q,e)||r(this,E)&&this[E][e])||t)},$=function(e,t){if(e=C(e),t=T(t,!0),e!==j||!r(q,t)||r(G,t)){var n=x(e,t);return!n||!r(q,t)||r(e,E)&&e[E][t]||(n.enumerable=!0),n}},Q=function(e){for(var t,n=L(C(e)),i=[],o=0;n.length>o;)r(q,t=n[o++])||t==E||t==c||i.push(t);return i},ee=function(e){for(var t,n=e===j,i=L(n?G:C(e)),o=[],a=0;i.length>a;)!r(q,t=i[a++])||n&&!r(j,t)||o.push(q[t]);return o};k||(s((O=function(){if(this instanceof O)throw TypeError("Symbol is not a constructor!");var e=l(arguments.length>0?arguments[0]:void 0),t=function(n){this===j&&t.call(G,n),r(this,E)&&r(this[E],e)&&(this[E][e]=!1),W(this,e,I(1,n))};return o&&V&&W(j,e,{configurable:!0,set:t}),Y(e)}).prototype,"toString",(function(){return this._k})),N.f=$,v.f=_,n("kJMx").f=S.f=Q,n("UqcF").f=z,P.f=ee,o&&!n("LQAc")&&s(j,"propertyIsEnumerable",z,!0),m.f=function(e){return Y(h(e))}),a(a.G+a.W+a.F*!k,{Symbol:O});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)h(te[ne++]);for(var ie=B(h.store),re=0;ie.length>re;)f(ie[re++]);a(a.S+a.F*!k,"Symbol",{for:function(e){return r(K,e+="")?K[e]:K[e]=O(e)},keyFor:function(e){if(!Z(e))throw TypeError(e+" is not a symbol!");for(var t in K)if(K[t]===e)return t},useSetter:function(){V=!0},useSimple:function(){V=!1}}),a(a.S+a.F*!k,"Object",{create:function(e,t){return void 0===t?R(e):J(R(e),t)},defineProperty:_,defineProperties:J,getOwnPropertyDescriptor:$,getOwnPropertyNames:Q,getOwnPropertySymbols:ee});var oe=d((function(){P.f(1)}));a(a.S+a.F*oe,"Object",{getOwnPropertySymbols:function(e){return P.f(D(e))}}),M&&a(a.S+a.F*(!k||d((function(){var e=O();return"[null]"!=U([e])||"{}"!=U({a:e})||"{}"!=U(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,i=[e],r=1;arguments.length>r;)i.push(arguments[r++]);if(n=t=i[1],(A(t)||void 0!==e)&&!Z(e))return g(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Z(t))return t}),i[1]=t,U.apply(M,i)}}),O.prototype[F]||n("Mukb")(O.prototype,F,O.prototype.valueOf),u(O,"Symbol"),u(Math,"Math",!0),u(i.JSON,"JSON",!0)},j8BX:function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},n.apply(this,arguments)}e.exports=n},jm62:function(e,t,n){var i=n("XKFU"),r=n("mQtv"),o=n("aCFj"),a=n("EemH"),s=n("8a7r");i(i.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,i=o(e),c=a.f,d=r(i),p={},u=0;d.length>u;)void 0!==(n=c(i,t=d[u++]))&&s(p,t,n);return p}})},kH68:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));n("XfO3"),n("HEwt");var i=n("q1tI"),r=n.n(i),o=n("YwZP"),a=n("LvDl"),s=n("qKvR"),c=r.a.createContext(""),d=function(e){var t=e.children,n=Object(i.useState)(""),r=n[0],d=n[1],p=Object(o.useLocation)().pathname,u=Object(o.useLocation)().hash;return Object(i.useEffect)((function(){var e=Array.from(document.querySelectorAll("main .page")).filter((function(e){return!!e.getAttribute("id")}));if(e){var t=Object(a.throttle)((function(){var t=window.scrollY+100;e.forEach((function(e){var n=e.offsetTop,i=e.offsetTop+e.offsetHeight,r=e.id;n<=t&&i>t&&(window.history.pushState(null,null,"#"+r),d(r))}))}),33);return window.addEventListener("resize",t),window.addEventListener("scroll",t),function(){window.removeEventListener("resize",t),window.removeEventListener("scroll",t)}}}),[p,u]),Object(s.b)(c.Provider,{value:r},t)};t.b=c},kJMx:function(e,t,n){var i=n("zhAb"),r=n("4R4u").concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,r)}},l0Rn:function(e,t,n){"use strict";var i=n("RYi7"),r=n("vhPU");e.exports=function(e){var t=String(r(this)),n="",o=i(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(n+=t);return n}},m0Pp:function(e,t,n){var i=n("2OiF");e.exports=function(e,t,n){if(i(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}}},mGWK:function(e,t,n){"use strict";var i=n("XKFU"),r=n("aCFj"),o=n("RYi7"),a=n("ne8i"),s=[].lastIndexOf,c=!!s&&1/[1].lastIndexOf(1,-0)<0;i(i.P+i.F*(c||!n("LyE8")(s)),"Array",{lastIndexOf:function(e){if(c)return s.apply(this,arguments)||0;var t=r(this),n=a(t.length),i=n-1;for(arguments.length>1&&(i=Math.min(i,o(arguments[1]))),i<0&&(i=n+i);i>=0;i--)if(i in t&&t[i]===e)return i||0;return-1}})},mQtv:function(e,t,n){var i=n("kJMx"),r=n("JiEa"),o=n("y3w9"),a=n("dyZX").Reflect;e.exports=a&&a.ownKeys||function(e){var t=i.f(o(e)),n=r.f;return n?t.concat(n(e)):t}},nGyu:function(e,t,n){var i=n("K0xU")("unscopables"),r=Array.prototype;null==r[i]&&n("Mukb")(r,i,{}),e.exports=function(e){r[i][e]=!0}},nICZ:function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(t){return{e:!0,v:t}}}},ne8i:function(e,t,n){var i=n("RYi7"),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},nh4g:function(e,t,n){e.exports=!n("eeVq")((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},nqlD:function(e,t,n){var i=n("q1tI").createContext;e.exports=i,e.exports.default=i},ol8x:function(e,t,n){var i=n("dyZX").navigator;e.exports=i&&i.userAgent||""},pCP8:function(e,t,n){t.components={"component---src-pages-404-tsx":function(){return Promise.all([n.e(0),n.e(5)]).then(n.bind(null,"i6+/"))},"component---src-pages-homepage-tsx":function(){return n.e(6).then(n.bind(null,"fth/"))},"component---src-templates-pages-tsx":function(){return Promise.all([n.e(1),n.e(0),n.e(7)]).then(n.bind(null,"/za+"))}}},pIFo:function(e,t,n){"use strict";var i=n("y3w9"),r=n("S/j/"),o=n("ne8i"),a=n("RYi7"),s=n("A5AN"),c=n("Xxuz"),d=Math.max,p=Math.min,u=Math.floor,l=/\$([$&`']|\d\d?|<[^>]*>)/g,h=/\$([$&`']|\d\d?)/g;n("IU+Z")("replace",2,(function(e,t,n,m){return[function(i,r){var o=e(this),a=null==i?void 0:i[t];return void 0!==a?a.call(i,o,r):n.call(String(o),i,r)},function(e,t){var r=m(n,e,this,t);if(r.done)return r.value;var u=i(e),l=String(this),h="function"==typeof t;h||(t=String(t));var y=u.global;if(y){var g=u.unicode;u.lastIndex=0}for(var b=[];;){var A=c(u,l);if(null===A)break;if(b.push(A),!y)break;""===String(A[0])&&(u.lastIndex=s(l,o(u.lastIndex),g))}for(var D,C="",T=0,I=0;I<b.length;I++){A=b[I];for(var R=String(A[0]),S=d(p(a(A.index),l.length),0),N=[],P=1;P<A.length;P++)N.push(void 0===(D=A[P])?D:String(D));var v=A.groups;if(h){var B=[R].concat(N,S,l);void 0!==v&&B.push(v);var x=String(t.apply(void 0,B))}else x=f(R,l,S,N,v,t);S>=T&&(C+=l.slice(T,S)+x,T=S+R.length)}return C+l.slice(T)}];function f(e,t,i,o,a,s){var c=i+e.length,d=o.length,p=h;return void 0!==a&&(a=r(a),p=l),n.call(s,p,(function(n,r){var s;switch(r.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,i);case"'":return t.slice(c);case"<":s=a[r.slice(1,-1)];break;default:var p=+r;if(0===p)return n;if(p>d){var l=u(p/10);return 0===l?n:l<=d?void 0===o[l-1]?r.charAt(1):o[l-1]+r.charAt(1):n}s=o[p-1]}return void 0===s?"":s}))}}))},pbhE:function(e,t,n){"use strict";var i=n("2OiF");function r(e){var t,n;this.promise=new e((function(e,i){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=i})),this.resolve=i(t),this.reject=i(n)}e.exports.f=function(e){return new r(e)}},"q5+k":function(e,t,n){"use strict";n("dZ+Y");var i=n("5NKs");t.__esModule=!0,t.default=void 0;var r,o=i(n("Bp9Y")),a="clearTimeout",s=function(e){var t=(new Date).getTime(),n=Math.max(0,16-(t-d)),i=setTimeout(e,n);return d=t,i},c=function(e,t){return e+(e?t[0].toUpperCase()+t.substr(1):t)+"AnimationFrame"};o.default&&["","webkit","moz","o","ms"].some((function(e){var t=c(e,"request");if(t in window)return a=c(e,"cancel"),s=function(e){return window[t](e)}}));var d=(new Date).getTime();(r=function(e){return s(e)}).cancel=function(e){window[a]&&"function"==typeof window[a]&&window[a](e)};var p=r;t.default=p,e.exports=t.default},qKvR:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return C})),n.d(t,"c",(function(){return y}));n("LK8F"),n("SRfc"),n("f3/d"),n("V+eJ"),n("pIFo");var i=n("XEEL"),r=n.n(i),o=n("q1tI");n("Oyvg"),n("bWfx"),n("KKXr"),n("8+KV");var a=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)==0){var t,n=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(n,t),this.tags.push(n)}var i=this.tags[this.tags.length-1];if(this.isSpeedy){var r=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(i);try{var o=105===e.charCodeAt(1)&&64===e.charCodeAt(0);r.insertRule(e,o?0:r.cssRules.length)}catch(a){0}}else i.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}();n("Tze0");var s=function(e){function t(e,t,i){var r=t.trim().split(m);t=r;var o=r.length,a=e.length;switch(a){case 0:case 1:var s=0;for(e=0===a?"":e[0]+" ";s<o;++s)t[s]=n(e,t[s],i).trim();break;default:var c=s=0;for(t=[];s<o;++s)for(var d=0;d<a;++d)t[c++]=n(e[d]+" ",r[s],i).trim()}return t}function n(e,t,n){var i=t.charCodeAt(0);switch(33>i&&(i=(t=t.trim()).charCodeAt(0)),i){case 38:return t.replace(f,"$1"+e.trim());case 58:return e.trim()+t.replace(f,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(f,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function i(e,t,n,o){var a=e+";",s=2*t+3*n+4*o;if(944===s){e=a.indexOf(":",9)+1;var c=a.substring(e,a.length-1).trim();return c=a.substring(0,e).trim()+c+";",1===B||2===B&&r(c,1)?"-webkit-"+c+c:c}if(0===B||2===B&&!r(a,1))return a;switch(s){case 1015:return 97===a.charCodeAt(10)?"-webkit-"+a+a:a;case 951:return 116===a.charCodeAt(3)?"-webkit-"+a+a:a;case 963:return 110===a.charCodeAt(5)?"-webkit-"+a+a:a;case 1009:if(100!==a.charCodeAt(4))break;case 969:case 942:return"-webkit-"+a+a;case 978:return"-webkit-"+a+"-moz-"+a+a;case 1019:case 983:return"-webkit-"+a+"-moz-"+a+"-ms-"+a+a;case 883:if(45===a.charCodeAt(8))return"-webkit-"+a+a;if(0<a.indexOf("image-set(",11))return a.replace(S,"$1-webkit-$2")+a;break;case 932:if(45===a.charCodeAt(4))switch(a.charCodeAt(5)){case 103:return"-webkit-box-"+a.replace("-grow","")+"-webkit-"+a+"-ms-"+a.replace("grow","positive")+a;case 115:return"-webkit-"+a+"-ms-"+a.replace("shrink","negative")+a;case 98:return"-webkit-"+a+"-ms-"+a.replace("basis","preferred-size")+a}return"-webkit-"+a+"-ms-"+a+a;case 964:return"-webkit-"+a+"-ms-flex-"+a+a;case 1023:if(99!==a.charCodeAt(8))break;return"-webkit-box-pack"+(c=a.substring(a.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+a+"-ms-flex-pack"+c+a;case 1005:return l.test(a)?a.replace(u,":-webkit-")+a.replace(u,":-moz-")+a:a;case 1e3:switch(t=(c=a.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(t)){case 226:c=a.replace(A,"tb");break;case 232:c=a.replace(A,"tb-rl");break;case 220:c=a.replace(A,"lr");break;default:return a}return"-webkit-"+a+"-ms-"+c+a;case 1017:if(-1===a.indexOf("sticky",9))break;case 975:switch(t=(a=e).length-10,s=(c=(33===a.charCodeAt(t)?a.substring(0,t):a).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(111>c.charCodeAt(8))break;case 115:a=a.replace(c,"-webkit-"+c)+";"+a;break;case 207:case 102:a=a.replace(c,"-webkit-"+(102<s?"inline-":"")+"box")+";"+a.replace(c,"-webkit-"+c)+";"+a.replace(c,"-ms-"+c+"box")+";"+a}return a+";";case 938:if(45===a.charCodeAt(5))switch(a.charCodeAt(6)){case 105:return c=a.replace("-items",""),"-webkit-"+a+"-webkit-box-"+c+"-ms-flex-"+c+a;case 115:return"-webkit-"+a+"-ms-flex-item-"+a.replace(T,"")+a;default:return"-webkit-"+a+"-ms-flex-line-pack"+a.replace("align-content","").replace(T,"")+a}break;case 973:case 989:if(45!==a.charCodeAt(3)||122===a.charCodeAt(4))break;case 931:case 953:if(!0===R.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?i(e.replace("stretch","fill-available"),t,n,o).replace(":fill-available",":stretch"):a.replace(c,"-webkit-"+c)+a.replace(c,"-moz-"+c.replace("fill-",""))+a;break;case 962:if(a="-webkit-"+a+(102===a.charCodeAt(5)?"-ms-"+a:"")+a,211===n+o&&105===a.charCodeAt(13)&&0<a.indexOf("transform",10))return a.substring(0,a.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+a}return a}function r(e,t){var n=e.indexOf(1===t?":":"{"),i=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),O(2!==t?i:i.replace(I,"$1"),n,t)}function o(e,t){var n=i(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(C," or ($1)").substring(4):"("+t+")"}function a(e,t,n,i,r,o,a,s,d,p){for(var u,l=0,h=t;l<L;++l)switch(u=w[l].call(c,e,h,n,i,r,o,a,s,d,p)){case void 0:case!1:case!0:case null:break;default:h=u}if(h!==t)return h}function s(e){return void 0!==(e=e.prefix)&&(O=null,e?"function"!=typeof e?B=1:(B=2,O=e):B=0),s}function c(e,n){var s=e;if(33>s.charCodeAt(0)&&(s=s.trim()),s=[s],0<L){var c=a(-1,n,s,s,P,N,0,0,0,0);void 0!==c&&"string"==typeof c&&(n=c)}var u=function e(n,s,c,u,l){for(var h,m,f,A,C,T=0,I=0,R=0,S=0,w=0,O=0,U=f=h=0,E=0,F=0,X=0,K=0,q=c.length,G=q-1,j="",k="",H="",V="";E<q;){if(m=c.charCodeAt(E),E===G&&0!==I+S+R+T&&(0!==I&&(m=47===I?10:47),S=R=T=0,q++,G++),0===I+S+R+T){if(E===G&&(0<F&&(j=j.replace(p,"")),0<j.trim().length)){switch(m){case 32:case 9:case 59:case 13:case 10:break;default:j+=c.charAt(E)}m=59}switch(m){case 123:for(h=(j=j.trim()).charCodeAt(0),f=1,K=++E;E<q;){switch(m=c.charCodeAt(E)){case 123:f++;break;case 125:f--;break;case 47:switch(m=c.charCodeAt(E+1)){case 42:case 47:e:{for(U=E+1;U<G;++U)switch(c.charCodeAt(U)){case 47:if(42===m&&42===c.charCodeAt(U-1)&&E+2!==U){E=U+1;break e}break;case 10:if(47===m){E=U+1;break e}}E=U}}break;case 91:m++;case 40:m++;case 34:case 39:for(;E++<G&&c.charCodeAt(E)!==m;);}if(0===f)break;E++}switch(f=c.substring(K,E),0===h&&(h=(j=j.replace(d,"").trim()).charCodeAt(0)),h){case 64:switch(0<F&&(j=j.replace(p,"")),m=j.charCodeAt(1)){case 100:case 109:case 115:case 45:F=s;break;default:F=x}if(K=(f=e(s,F,f,m,l+1)).length,0<L&&(C=a(3,f,F=t(x,j,X),s,P,N,K,m,l,u),j=F.join(""),void 0!==C&&0===(K=(f=C.trim()).length)&&(m=0,f="")),0<K)switch(m){case 115:j=j.replace(D,o);case 100:case 109:case 45:f=j+"{"+f+"}";break;case 107:f=(j=j.replace(y,"$1 $2"))+"{"+f+"}",f=1===B||2===B&&r("@"+f,3)?"@-webkit-"+f+"@"+f:"@"+f;break;default:f=j+f,112===u&&(k+=f,f="")}else f="";break;default:f=e(s,t(s,j,X),f,u,l+1)}H+=f,f=X=F=U=h=0,j="",m=c.charCodeAt(++E);break;case 125:case 59:if(1<(K=(j=(0<F?j.replace(p,""):j).trim()).length))switch(0===U&&(h=j.charCodeAt(0),45===h||96<h&&123>h)&&(K=(j=j.replace(" ",":")).length),0<L&&void 0!==(C=a(1,j,s,n,P,N,k.length,u,l,u))&&0===(K=(j=C.trim()).length)&&(j="\0\0"),h=j.charCodeAt(0),m=j.charCodeAt(1),h){case 0:break;case 64:if(105===m||99===m){V+=j+c.charAt(E);break}default:58!==j.charCodeAt(K-1)&&(k+=i(j,h,m,j.charCodeAt(2)))}X=F=U=h=0,j="",m=c.charCodeAt(++E)}}switch(m){case 13:case 10:47===I?I=0:0===1+h&&107!==u&&0<j.length&&(F=1,j+="\0"),0<L*M&&a(0,j,s,n,P,N,k.length,u,l,u),N=1,P++;break;case 59:case 125:if(0===I+S+R+T){N++;break}default:switch(N++,A=c.charAt(E),m){case 9:case 32:if(0===S+T+I)switch(w){case 44:case 58:case 9:case 32:A="";break;default:32!==m&&(A=" ")}break;case 0:A="\\0";break;case 12:A="\\f";break;case 11:A="\\v";break;case 38:0===S+I+T&&(F=X=1,A="\f"+A);break;case 108:if(0===S+I+T+v&&0<U)switch(E-U){case 2:112===w&&58===c.charCodeAt(E-3)&&(v=w);case 8:111===O&&(v=O)}break;case 58:0===S+I+T&&(U=E);break;case 44:0===I+R+S+T&&(F=1,A+="\r");break;case 34:case 39:0===I&&(S=S===m?0:0===S?m:S);break;case 91:0===S+I+R&&T++;break;case 93:0===S+I+R&&T--;break;case 41:0===S+I+T&&R--;break;case 40:if(0===S+I+T){if(0===h)switch(2*w+3*O){case 533:break;default:h=1}R++}break;case 64:0===I+R+S+T+U+f&&(f=1);break;case 42:case 47:if(!(0<S+T+R))switch(I){case 0:switch(2*m+3*c.charCodeAt(E+1)){case 235:I=47;break;case 220:K=E,I=42}break;case 42:47===m&&42===w&&K+2!==E&&(33===c.charCodeAt(K+2)&&(k+=c.substring(K,E+1)),A="",I=0)}}0===I&&(j+=A)}O=w,w=m,E++}if(0<(K=k.length)){if(F=s,0<L&&(void 0!==(C=a(2,k,F,n,P,N,K,u,l,u))&&0===(k=C).length))return V+k+H;if(k=F.join(",")+"{"+k+"}",0!=B*v){switch(2!==B||r(k,2)||(v=0),v){case 111:k=k.replace(b,":-moz-$1")+k;break;case 112:k=k.replace(g,"::-webkit-input-$1")+k.replace(g,"::-moz-$1")+k.replace(g,":-ms-input-$1")+k}v=0}}return V+k+H}(x,s,n,0,0);return 0<L&&(void 0!==(c=a(-2,u,s,s,P,N,u.length,0,0,0))&&(u=c)),"",v=0,N=P=1,u}var d=/^\0+/g,p=/[\0\r\f]/g,u=/: */g,l=/zoo|gra/,h=/([,: ])(transform)/g,m=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,y=/@(k\w+)\s*(\S*)\s*/,g=/::(place)/g,b=/:(read-only)/g,A=/[svh]\w+-[tblr]{2}/,D=/\(\s*(.*)\s*\)/g,C=/([\s\S]*?);/g,T=/-self|flex-/g,I=/[^]*?(:[rp][el]a[\w-]+)[^]*/,R=/stretch|:\s*\w+\-(?:conte|avail)/,S=/([^-])(image-set\()/,N=1,P=1,v=0,B=1,x=[],w=[],L=0,O=null,M=0;return c.use=function e(t){switch(t){case void 0:case null:L=w.length=0;break;default:if("function"==typeof t)w[L++]=t;else if("object"==typeof t)for(var n=0,i=t.length;n<i;++n)e(t[n]);else M=0|!!t}return e},c.set=s,void 0!==e&&s(e),c};n("gRFL");function c(e){e&&d.current.insert(e+"}")}var d={current:null},p=function(e,t,n,i,r,o,a,s,p,u){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return d.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===s)return t+"/*|*/";break;case 3:switch(s){case 102:case 112:return d.current.insert(n[0]+t),"";default:return t+(0===u?"/*|*/":"")}case-2:t.split("/*|*/}").forEach(c)}},u=function(e){void 0===e&&(e={});var t,n=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var i=new s(t);var r,o={};r=e.container||document.head;var c,u=document.querySelectorAll("style[data-emotion-"+n+"]");Array.prototype.forEach.call(u,(function(e){e.getAttribute("data-emotion-"+n).split(" ").forEach((function(e){o[e]=!0})),e.parentNode!==r&&r.appendChild(e)})),i.use(e.stylisPlugins)(p),c=function(e,t,n,r){var o=t.name;d.current=n,i(e,t.styles),r&&(l.inserted[o]=!0)};var l={key:n,sheet:new a({key:n,container:r,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:o,registered:{},insert:c};return l},l=n("SIPS"),h=n("MiSq");var m=Object(o.createContext)("undefined"!=typeof HTMLElement?u():null),f=Object(o.createContext)({}),y=(m.Provider,function(e){return Object(o.forwardRef)((function(t,n){return Object(o.createElement)(m.Consumer,null,(function(i){return e(t,i,n)}))}))}),g="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",b=Object.prototype.hasOwnProperty,A=function(e,t,n,i){var r=null===n?t.css:t.css(n);"string"==typeof r&&void 0!==e.registered[r]&&(r=e.registered[r]);var a=t[g],s=[r],c="";"string"==typeof t.className?c=Object(l.a)(e.registered,s,t.className):null!=t.className&&(c=t.className+" ");var d=Object(h.a)(s);Object(l.b)(e,d,"string"==typeof a);c+=e.key+"-"+d.name;var p={};for(var u in t)b.call(t,u)&&"css"!==u&&u!==g&&(p[u]=t[u]);return p.ref=i,p.className=c,Object(o.createElement)(a,p)},D=y((function(e,t,n){return"function"==typeof e.css?Object(o.createElement)(f.Consumer,null,(function(i){return A(t,e,i,n)})):A(t,e,null,n)}));var C=function(e,t){var n=arguments;if(null==t||!b.call(t,"css"))return o.createElement.apply(void 0,n);var i=n.length,r=new Array(i);r[0]=D;var a={};for(var s in t)b.call(t,s)&&(a[s]=t[s]);a[g]=e,r[1]=a;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)},T=(o.Component,function e(t){for(var n=t.length,i=0,r="";i<n;i++){var o=t[i];if(null!=o){var a=void 0;switch(typeof o){case"boolean":break;case"object":if(Array.isArray(o))a=e(o);else for(var s in a="",o)o[s]&&s&&(a&&(a+=" "),a+=s);break;default:a=o}a&&(r&&(r+=" "),r+=a)}}return r});function I(e,t,n){var i=[],r=Object(l.a)(e,i,n);return i.length<2?n:r+t(i)}y((function(e,t){return Object(o.createElement)(f.Consumer,null,(function(n){var i=function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=Object(h.a)(n,t.registered);return Object(l.b)(t,r,!1),t.key+"-"+r.name},r={css:i,cx:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return I(t.registered,i,T(n))},theme:n},o=e.children(r);return!0,o}))}))},qT12:function(e,t,n){"use strict";n("rE2o"),n("ioFf");var i="function"==typeof Symbol&&Symbol.for,r=i?Symbol.for("react.element"):60103,o=i?Symbol.for("react.portal"):60106,a=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,c=i?Symbol.for("react.profiler"):60114,d=i?Symbol.for("react.provider"):60109,p=i?Symbol.for("react.context"):60110,u=i?Symbol.for("react.async_mode"):60111,l=i?Symbol.for("react.concurrent_mode"):60111,h=i?Symbol.for("react.forward_ref"):60112,m=i?Symbol.for("react.suspense"):60113,f=i?Symbol.for("react.suspense_list"):60120,y=i?Symbol.for("react.memo"):60115,g=i?Symbol.for("react.lazy"):60116,b=i?Symbol.for("react.block"):60121,A=i?Symbol.for("react.fundamental"):60117,D=i?Symbol.for("react.responder"):60118,C=i?Symbol.for("react.scope"):60119;function T(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case u:case l:case a:case c:case s:case m:return e;default:switch(e=e&&e.$$typeof){case p:case h:case g:case y:case d:return e;default:return t}}case o:return t}}}function I(e){return T(e)===l}t.AsyncMode=u,t.ConcurrentMode=l,t.ContextConsumer=p,t.ContextProvider=d,t.Element=r,t.ForwardRef=h,t.Fragment=a,t.Lazy=g,t.Memo=y,t.Portal=o,t.Profiler=c,t.StrictMode=s,t.Suspense=m,t.isAsyncMode=function(e){return I(e)||T(e)===u},t.isConcurrentMode=I,t.isContextConsumer=function(e){return T(e)===p},t.isContextProvider=function(e){return T(e)===d},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return T(e)===h},t.isFragment=function(e){return T(e)===a},t.isLazy=function(e){return T(e)===g},t.isMemo=function(e){return T(e)===y},t.isPortal=function(e){return T(e)===o},t.isProfiler=function(e){return T(e)===c},t.isStrictMode=function(e){return T(e)===s},t.isSuspense=function(e){return T(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===l||e===c||e===s||e===m||e===f||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===y||e.$$typeof===d||e.$$typeof===p||e.$$typeof===h||e.$$typeof===A||e.$$typeof===D||e.$$typeof===C||e.$$typeof===b)},t.typeOf=T},qncB:function(e,t,n){var i=n("XKFU"),r=n("vhPU"),o=n("eeVq"),a=n("/e88"),s="["+a+"]",c=RegExp("^"+s+s+"*"),d=RegExp(s+s+"*$"),p=function(e,t,n){var r={},s=o((function(){return!!a[e]()||"​"!="​"[e]()})),c=r[e]=s?t(u):a[e];n&&(r[n]=c),i(i.P+i.F*s,"String",r)},u=p.trim=function(e,t){return e=String(r(e)),1&t&&(e=e.replace(c,"")),2&t&&(e=e.replace(d,"")),e};e.exports=p},quPj:function(e,t,n){var i=n("0/R4"),r=n("LZWt"),o=n("K0xU")("match");e.exports=function(e){var t;return i(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==r(e))}},rE2o:function(e,t,n){n("OnI7")("asyncIterator")},rGqo:function(e,t,n){for(var i=n("yt8O"),r=n("DVgA"),o=n("KroJ"),a=n("dyZX"),s=n("Mukb"),c=n("hPIQ"),d=n("K0xU"),p=d("iterator"),u=d("toStringTag"),l=c.Array,h={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=r(h),f=0;f<m.length;f++){var y,g=m[f],b=h[g],A=a[g],D=A&&A.prototype;if(D&&(D[p]||s(D,p,l),D[u]||s(D,u,g),c[g]=l,b))for(y in i)D[y]||o(D,y,i[y],!0)}},rHrb:function(e,t,n){"use strict";n("hHhE"),n("/SS/"),n("V+eJ"),n("WLL4"),n("jm62"),n("8+KV"),n("0l/t"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("rE2o"),n("ioFf"),n("HAE/"),Object.defineProperty(t,"__esModule",{value:!0}),t.CopyToClipboard=void 0;var i=o(n("q1tI")),r=o(n("+QRC"));function o(e){return e&&e.__esModule?e:{default:e}}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function u(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?h(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var y=function(e){function t(){var e,n;d(this,t);for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];return f(h(n=u(this,(e=l(t)).call.apply(e,[this].concat(a)))),"onClick",(function(e){var t=n.props,o=t.text,a=t.onCopy,s=t.children,c=t.options,d=i.default.Children.only(s),p=(0,r.default)(o,c);a&&a(o,p),d&&d.props&&"function"==typeof d.props.onClick&&d.props.onClick(e)})),n}var n,o,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(t,e),n=t,(o=[{key:"render",value:function(){var e=this.props,t=(e.text,e.onCopy,e.options,e.children),n=c(e,["text","onCopy","options","children"]),r=i.default.Children.only(t);return i.default.cloneElement(r,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(n,!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},n,{onClick:this.onClick}))}}])&&p(n.prototype,o),a&&p(n,a),t}(i.default.PureComponent);t.CopyToClipboard=y,f(y,"defaultProps",{onCopy:void 0,options:void 0})},rKjV:function(e,t,n){"use strict";n.r(t),n.d(t,"props",(function(){return a})),n.d(t,"createShouldForwardProp",(function(){return s}));n("Oyvg");var i=n("4qRI"),r=n("9uj6"),o=n("za5s"),a=Object(o.compose)(o.space,o.typography,o.color,o.layout,o.flexbox,o.border,o.background,o.position,o.grid,o.shadow,o.buttonStyle,o.textStyle,o.colorStyle).propNames,s=function(e){var t=new RegExp("^("+e.join("|")+")$");return Object(i.a)((function(e){return Object(r.a)(e)&&!t.test(e)}))};t.default=s(a)},raBC:function(e,t,n){"use strict";var i=n("5NKs");t.__esModule=!0,t.default=void 0;var r=function(){};i(n("Bp9Y")).default&&(r=document.addEventListener?function(e,t,n,i){return e.addEventListener(t,n,i||!1)}:document.attachEvent?function(e,t,n){return e.attachEvent("on"+t,(function(t){(t=t||window.event).target=t.target||t.srcElement,t.currentTarget=e,n.call(e,t)}))}:void 0);var o=r;t.default=o,e.exports=t.default},rvZc:function(e,t,n){"use strict";var i=n("XKFU"),r=n("ne8i"),o=n("0sh+"),a="".endsWith;i(i.P+i.F*n("UUeW")("endsWith"),"String",{endsWith:function(e){var t=o(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,i=r(t.length),s=void 0===n?i:Math.min(r(n),i),c=String(e);return a?a.call(t,c,s):t.slice(s-c.length,s)===c}})},s5qY:function(e,t,n){var i=n("0/R4");e.exports=function(e,t){if(!i(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},sMXx:function(e,t,n){"use strict";var i=n("Ugos");n("XKFU")({target:"RegExp",proto:!0,forced:i!==/./.exec},{exec:i})},u34n:function(e,t,n){"use strict";n.r(t);n("dRSK");var i=n("q1tI"),r=n.n(i),o=n("7ljp"),a=n("X8hv"),s=n.n(a),c=n("M4XY"),d=n.n(c),p=(n("91GP"),n("jm62"),n("ioFf"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("pIFo"),n("61Ie")),u=n("CnhX"),l=n("xK/f"),h=n("TsN8"),m=(n("dJPS"),n("qKvR"));function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function g(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=g(g({},h.a),{},{h1:function(e){return Object(m.b)(l.a,f({as:"h1",className:"cannon",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},h2:function(e){return Object(m.b)(l.d,f({as:"h2",className:"trafalga",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},h3:function(e){return Object(m.b)(l.c,f({as:"h3",className:"paragon mdx-subtitle",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},h4:function(e){return Object(m.b)(p.a,f({as:"h4",className:"double-pica",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},h5:function(e){return Object(m.b)(p.f,f({as:"h5",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},h6:function(e){return Object(m.b)(l.d,f({as:"h6",className:"long-primer",id:e.children.replace(/\s+/g,"").toLowerCase()},e))},p:function(e){return Object(m.b)(l.i,f({as:"p",className:"body-copy"},e))},pre:function(e){return Object(m.b)(l.j,e)},code:u.a,a:function(e){return Object(m.b)(l.f,e)},ul:function(e){return Object(m.b)(l.g,f({className:"list"},e))},ol:function(e){return Object(m.b)(l.g,f({as:"ol",className:"list"},e))},li:function(e){return Object(m.b)(l.h,e)},img:function(e){return Object(m.b)(l.e,e)}}),D=n("JmP7"),C=n("4LTH"),T=function(e){var t=D.data;if(void 0===t||!("allMdx"in t))return null;var n,i,o=t.allMdx,a=(n=o.edges,i="/"+e,n.find((function(e){return e.node.fields.slug===i})).node),c=a.body,p=a.frontmatter.title;return Object(m.b)(r.a.Fragment,null,p&&Object(m.b)(l.b,{as:"h2",className:"mdx-subtitle cannon",id:d()(p.toLowerCase())},p),Object(m.b)(s.a,null,c))},I=function(e){var t=e.render,n=e.title;return t||n?Object(m.b)(o.MDXProvider,{components:A},Object(m.b)(C.a,null,t?T(t):function(e){return e&&Object(m.b)(C.Title,null,e)}(n))):null},R=n("vOnD"),S=n("SlEa"),N=R.b.ul.withConfig({componentId:"sc-5m4yus-0"})(["padding:40px 0;border:1px solid ",";border-radius:4px;@media screen and (min-width:","){max-width:80%;}@media screen and (min-width:","){display:flex;}"],S.b.brandGray,S.a.large,S.a.xxLarge),P=R.b.li.withConfig({componentId:"sc-5m4yus-1"})(["display:block;flex:1 1 0;padding:0 40px;min-width:0;&:first-child{padding-bottom:40px;@media screen and (min-width:","){padding-bottom:0;border-right:1px solid ",";}}"],S.a.xxLarge,S.b.brandGray),v=R.b.h4.withConfig({componentId:"sc-5m4yus-2"})(["margin-bottom:20px;font-size:20px;font-family:",";font-weight:bold;color:",";"],S.d.body,S.b.downriver),B=R.b.ul.withConfig({componentId:"sc-5m4yus-3"})(["list-style:none;"]),x=R.b.li.withConfig({componentId:"sc-5m4yus-4"})(["display:block;& + &{margin-top:10px;}"]),w=R.b.div.withConfig({componentId:"sc-5m4yus-5"})(["display:flex;align-items:center;"]),L=R.b.span.withConfig({componentId:"sc-5m4yus-6"})(["flex:0 0 auto;margin-right:10px;padding:5px 10px;text-transform:capitalize;font-size:12px;font-family:",";text-transform:uppercase;color:",";background:",";"],S.d.monospace,S.b.brandLight,(function(e){var t=e.type;return t in S.f?S.f[t]:S.f.default})),O=R.b.a.withConfig({componentId:"sc-5m4yus-7"})(["flex:0 1 auto;color:",";font-size:18px;line-height:1.5;"],S.b.highlightOrange),M=R.b.a.withConfig({componentId:"sc-5m4yus-8"})(["color:",";font-size:18px;line-height:1.5;&:hover{color:",";}"],S.b.highlightOrange,S.b.hoverOrange),U=n("FwON"),E=function(e){var t=e.description,n=e.endpoint,i=e.method,r=e.webhooks,o=void 0===r?[]:r,a=U.a();if(void 0===a||!("allMdx"in a)||!o.length)return null;var s=o.map((function(e){return function(e,t){return e.find((function(e){return e.node.fields.slug===t})).node}(a.allMdx.edges,"/"+e).frontmatter.title}));return Object(m.b)(N,null,Object(m.b)(P,null,Object(m.b)(v,null,"Associated Endpoint"),Object(m.b)(B,null,Object(m.b)(x,null,Object(m.b)(w,null,Object(m.b)(L,{type:i},i),Object(m.b)(O,{href:"/docs"+n},t))))),Object(m.b)(P,null,Object(m.b)(v,null,"Webhook"),Object(m.b)(B,null,s.map((function(e){return Object(m.b)(x,{key:e},Object(m.b)(M,{href:"#"+d()(e.toLowerCase())},e))})))))};t.default={WebhookPlaceholder:I,WebhookSummary:E,React:i}},uDP2:function(e,t){e.exports=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}},uRdJ:function(e,t,n){"use strict";function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}n.d(t,"a",(function(){return i}))},v06X:function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},vKrd:function(e,t,n){var i=n("y3w9"),r=n("0/R4"),o=n("pbhE");e.exports=function(e,t){if(i(e),r(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},vOnD:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return be}));n("2Spj"),n("dZ+Y"),n("LK8F"),n("a1Th"),n("h7Nl"),n("KKXr"),n("0l/t"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("Oyvg"),n("mGWK"),n("bWfx"),n("Tze0"),n("pIFo"),n("8+KV"),n("f3/d"),n("DW2E"),n("V+eJ"),n("/SS/"),n("hHhE"),n("91GP"),n("HAE/"),n("rE2o"),n("ioFf");var i=n("aJjT"),r=n.n(i),o=n("TAZq"),a=n.n(o),s=n("q1tI"),c=n.n(s),d=n("ME5O"),p=n("TOwV"),u=n("Wwog"),l=n("9uj6"),h=n("ECyS"),m=function(e,t){for(var n=[e[0]],i=0,r=t.length;i<r;i+=1)n.push(t[i],e[i+1]);return n},f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},g=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},A=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},D=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},C=function(e){return"object"===(void 0===e?"undefined":f(e))&&e.constructor===Object},T=Object.freeze([]),I=Object.freeze({});function R(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function N(e){return e&&"string"==typeof e.styledComponentId}var P=void 0!==e&&({}.REACT_APP_SC_ATTR||{}.SC_ATTR)||"data-styled",v="undefined"!=typeof window&&"HTMLElement"in window,B="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||void 0!==e&&({}.REACT_APP_SC_DISABLE_SPEEDY||{}.SC_DISABLE_SPEEDY)||!1;var x=function(e){function t(n){y(this,t);for(var i=arguments.length,r=Array(i>1?i-1:0),o=1;o<i;o++)r[o-1]=arguments[o];var a=D(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#"+n+" for more information."+(r.length>0?" Additional arguments: "+r.join(", "):"")));return D(a)}return A(t,e),t}(Error),w=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,L=function(e){var t=""+(e||""),n=[];return t.replace(w,(function(e,t,i){return n.push({componentId:t,matchIndex:i}),e})),n.map((function(e,i){var r=e.componentId,o=e.matchIndex,a=n[i+1];return{componentId:r,cssFromDOM:a?t.slice(o,a.matchIndex):t.slice(o)}}))},O=/^\s*\/\/.*$/gm,M=new r.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),U=new r.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),E=[],F=function(e){if(-2===e){var t=E;return E=[],t}},X=a()((function(e){E.push(e)})),K=void 0,q=void 0,G=void 0,j=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(q)&&n.slice(t-q.length,t)!==q?"."+K:e};U.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(q)>0&&(n[0]=n[0].replace(G,j))},X,F]),M.use([X,F]);var k=function(e){return M("",e)};function H(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",r=e.join("").replace(O,""),o=t&&n?n+" "+t+" { "+r+" }":r;return K=i,q=t,G=new RegExp("\\"+q+"\\b","g"),U(n||!t?"":t,o)}var V=function(){return n.nc},W=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},Y=function(e,t){e[t]=Object.create(null)},Z=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},_=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},J=function(e){if(e.sheet)return e.sheet;for(var t=e.ownerDocument.styleSheets.length,n=0;n<t;n+=1){var i=e.ownerDocument.styleSheets[n];if(i.ownerNode===e)return i}throw new x(10)},z=function(e,t,n){if(!t)return!1;var i=e.cssRules.length;try{e.insertRule(t,n<=i?n:i)}catch(r){return!1}return!0},$=function(e){return"\n/* sc-component-id: "+e+" */\n"},Q=function(e,t){for(var n=0,i=0;i<=t;i+=1)n+=e[i];return n},ee=function(e,t){return function(n){var i=V();return"<style "+[i&&'nonce="'+i+'"',P+'="'+_(t)+'"','data-styled-version="4.4.1"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},te=function(e,t){return function(){var n,i=((n={})[P]=_(t),n["data-styled-version"]="4.4.1",n),r=V();return r&&(i.nonce=r),c.a.createElement("style",b({},i,{dangerouslySetInnerHTML:{__html:e()}}))}},ne=function(e){return function(){return Object.keys(e)}},ie=function(e,t){return e.createTextNode($(t))},re=function e(t,n){var i=void 0===t?Object.create(null):t,r=void 0===n?Object.create(null):n,o=function(e){var t=r[e];return void 0!==t?t:r[e]=[""]},a=function(){var e="";for(var t in r){var n=r[t][0];n&&(e+=$(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=b({},e[n]);return t}(i),n=Object.create(null);for(var o in r)n[o]=[r[o][0]];return e(t,n)},css:a,getIds:ne(r),hasNameForId:Z(i),insertMarker:o,insertRules:function(e,t,n){o(e)[0]+=t.join(" "),W(i,e,n)},removeRules:function(e){var t=r[e];void 0!==t&&(t[0]="",Y(i,e))},sealed:!1,styleTag:null,toElement:te(a,i),toHTML:ee(a,i)}},oe=function(e,t,n,i,r){if(v&&!n){var o=function(e,t,n){var i=document;e?i=e.ownerDocument:t&&(i=t.ownerDocument);var r=i.createElement("style");r.setAttribute(P,""),r.setAttribute("data-styled-version","4.4.1");var o=V();if(o&&r.setAttribute("nonce",o),r.appendChild(i.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new x(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,i);return B?function(e,t){var n=Object.create(null),i=Object.create(null),r=void 0!==t,o=!1,a=function(t){var r=i[t];return void 0!==r?r:(i[t]=ie(e.ownerDocument,t),e.appendChild(i[t]),n[t]=Object.create(null),i[t])},s=function(){var e="";for(var t in i)e+=i[t].data;return e};return{clone:function(){throw new x(5)},css:s,getIds:ne(i),hasNameForId:Z(n),insertMarker:a,insertRules:function(e,i,s){for(var c=a(e),d=[],p=i.length,u=0;u<p;u+=1){var l=i[u],h=r;if(h&&-1!==l.indexOf("@import"))d.push(l);else{h=!1;var m=u===p-1?"":" ";c.appendData(""+l+m)}}W(n,e,s),r&&d.length>0&&(o=!0,t().insertRules(e+"-import",d))},removeRules:function(a){var s=i[a];if(void 0!==s){var c=ie(e.ownerDocument,a);e.replaceChild(c,s),i[a]=c,Y(n,a),r&&o&&t().removeRules(a+"-import")}},sealed:!1,styleTag:e,toElement:te(s,n),toHTML:ee(s,n)}}(o,r):function(e,t){var n=Object.create(null),i=Object.create(null),r=[],o=void 0!==t,a=!1,s=function(e){var t=i[e];return void 0!==t?t:(i[e]=r.length,r.push(0),Y(n,e),i[e])},c=function(){var t=J(e).cssRules,n="";for(var o in i){n+=$(o);for(var a=i[o],s=Q(r,a),c=s-r[a];c<s;c+=1){var d=t[c];void 0!==d&&(n+=d.cssText)}}return n};return{clone:function(){throw new x(5)},css:c,getIds:ne(i),hasNameForId:Z(n),insertMarker:s,insertRules:function(i,c,d){for(var p=s(i),u=J(e),l=Q(r,p),h=0,m=[],f=c.length,y=0;y<f;y+=1){var g=c[y],b=o;b&&-1!==g.indexOf("@import")?m.push(g):z(u,g,l+h)&&(b=!1,h+=1)}o&&m.length>0&&(a=!0,t().insertRules(i+"-import",m)),r[p]+=h,W(n,i,d)},removeRules:function(s){var c=i[s];if(void 0!==c&&!1!==e.isConnected){var d=r[c];!function(e,t,n){for(var i=t-n,r=t;r>i;r-=1)e.deleteRule(r)}(J(e),Q(r,c)-1,d),r[c]=0,Y(n,s),o&&a&&t().removeRules(s+"-import")}},sealed:!1,styleTag:e,toElement:te(c,n),toHTML:ee(c,n)}}(o,r)}return re()},ae=/\s+/,se=void 0;se=v?B?40:1e3:-1;var ce=0,de=void 0,pe=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v?document.head:null,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];y(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},ce+=1,this.id=ce,this.forceServer=i,this.target=i?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!v||this.forceServer)return this;var e=[],t=[],n=!1,i=document.querySelectorAll("style["+P+'][data-styled-version="4.4.1"]'),r=i.length;if(!r)return this;for(var o=0;o<r;o+=1){var a=i[o];n||(n=!!a.getAttribute("data-styled-streamed"));for(var s,c=(a.getAttribute(P)||"").trim().split(ae),d=c.length,p=0;p<d;p+=1)s=c[p],this.rehydratedNames[s]=!0;t.push.apply(t,L(a.textContent)),e.push(a)}var u=t.length;if(!u)return this;var l=this.makeTag(null);!function(e,t,n){for(var i=0,r=n.length;i<r;i+=1){var o=n[i],a=o.componentId,s=o.cssFromDOM,c=k(s);e.insertRules(a,c)}for(var d=0,p=t.length;d<p;d+=1){var u=t[d];u.parentNode&&u.parentNode.removeChild(u)}}(l,e,t),this.capacity=Math.max(1,se-u),this.tags.push(l);for(var h=0;h<u;h+=1)this.tagMap[t[h].componentId]=l;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];de=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map((function(e){for(var n=e.getIds(),i=e.clone(),r=0;r<n.length;r+=1)t.tagMap[n[r]]=i;return i})),t.rehydratedNames=b({},this.rehydratedNames),t.deferred=b({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach((function(e){e.sealed=!0}))},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=se,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,i=0;i<n.length;i+=1)n[i].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var i=this.clones,r=0;r<i.length;r+=1)i[r].inject(e,t,n);var o=this.getTagForId(e);if(void 0!==this.deferred[e]){var a=this.deferred[e].concat(t);o.insertRules(e,a,n),this.deferred[e]=void 0}else o.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,i=0;i<n.length;i+=1)n[i].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map((function(e){return e.toHTML()})).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map((function(t,n){var i="sc-"+e+"-"+n;return Object(s.cloneElement)(t.toElement(),{key:i})}))},g(e,null,[{key:"master",get:function(){return de||(de=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),ue=function(){function e(t,n){var i=this;y(this,e),this.inject=function(e){e.hasNameForId(i.id,i.name)||e.inject(i.id,i.rules,i.name)},this.toString=function(){throw new x(12,String(i.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),le=/([A-Z])/g,he=/^ms-/;function me(e){return e.replace(le,"-$1").toLowerCase().replace(he,"-ms-")}var fe=function(e){return null==e||!1===e||""===e},ye=function e(t,n){var i=[];return Object.keys(t).forEach((function(n){if(!fe(t[n])){if(C(t[n]))return i.push.apply(i,e(t[n],n)),i;if(R(t[n]))return i.push(me(n)+":",t[n],";"),i;i.push(me(n)+": "+(r=n,(null==(o=t[n])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in d.a?String(o).trim():o+"px")+";"))}var r,o;return i})),n?[n+" {"].concat(i,["}"]):i};function ge(e,t,n){if(Array.isArray(e)){for(var i,r=[],o=0,a=e.length;o<a;o+=1)null!==(i=ge(e[o],t,n))&&(Array.isArray(i)?r.push.apply(r,i):r.push(i));return r}return fe(e)?null:N(e)?"."+e.styledComponentId:R(e)?"function"!=typeof(s=e)||s.prototype&&s.prototype.isReactComponent||!t?e:ge(e(t),t,n):e instanceof ue?n?(e.inject(n),e.getName()):e:C(e)?ye(e):e.toString();var s}function be(e){for(var t=arguments.length,n=Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return R(e)||C(e)?ge(m(T,[e].concat(n))):ge(m(e,n))}function Ae(e){for(var t,n=0|e.length,i=0|n,r=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+((1540483477*(t>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++r;switch(n){case 3:i^=(255&e.charCodeAt(r+2))<<16;case 2:i^=(255&e.charCodeAt(r+1))<<8;case 1:i=1540483477*(65535&(i^=255&e.charCodeAt(r)))+((1540483477*(i>>>16)&65535)<<16)}return((i=1540483477*(65535&(i^=i>>>13))+((1540483477*(i>>>16)&65535)<<16))^i>>>15)>>>0}var De=function(e){return String.fromCharCode(e+(e>25?39:97))};function Ce(e){var t="",n=void 0;for(n=e;n>52;n=Math.floor(n/52))t=De(n%52)+t;return De(n%52)+t}function Te(e,t){for(var n=0;n<e.length;n+=1){var i=e[n];if(Array.isArray(i)&&!Te(i,t))return!1;if(R(i)&&!N(i))return!1}return!t.some((function(e){return R(e)||function(e){for(var t in e)if(R(e[t]))return!0;return!1}(e)}))}var Ie,Re=function(e){return Ce(Ae(e))},Se=function(){function e(t,n,i){y(this,e),this.rules=t,this.isStatic=Te(t,n),this.componentId=i,pe.master.hasId(i)||pe.master.deferredInject(i,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,i=this.componentId,r=this.lastClassName;if(v&&n&&"string"==typeof r&&t.hasNameForId(i,r))return r;var o=ge(this.rules,e,t),a=Re(this.componentId+o.join(""));return t.hasNameForId(i,a)||t.inject(this.componentId,H(o,"."+a,void 0,i),a),this.lastClassName=a,a},e.generateName=function(e){return Re(e)},e}(),Ne=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:I,i=!!n&&e.theme===n.theme,r=e.theme&&!i?e.theme:t||n.theme;return r},Pe=/[[\].#*$><+~=|^:(),"'`-]+/g,ve=/(^-|-$)/g;function Be(e){return e.replace(Pe,"-").replace(ve,"")}function xe(e){return"string"==typeof e&&!0}var we={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Le={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Oe=((Ie={})[p.ForwardRef]={$$typeof:!0,render:!0},Ie),Me=Object.defineProperty,Ue=Object.getOwnPropertyNames,Ee=Object.getOwnPropertySymbols,Fe=void 0===Ee?function(){return[]}:Ee,Xe=Object.getOwnPropertyDescriptor,Ke=Object.getPrototypeOf,qe=Object.prototype,Ge=Array.prototype;function je(e,t,n){if("string"!=typeof t){var i=Ke(t);i&&i!==qe&&je(e,i,n);for(var r=Ge.concat(Ue(t),Fe(t)),o=Oe[e.$$typeof]||we,a=Oe[t.$$typeof]||we,s=r.length,c=void 0,d=void 0;s--;)if(d=r[s],!(Le[d]||n&&n[d]||a&&a[d]||o&&o[d])&&(c=Xe(t,d)))try{Me(e,d,c)}catch(p){}return e}return e}var ke=Object(s.createContext)(),He=ke.Consumer,Ve=(function(e){function t(n){y(this,t);var i=D(this,e.call(this,n));return i.getContext=Object(u.a)(i.getContext.bind(i)),i.renderInner=i.renderInner.bind(i),i}A(t,e),t.prototype.render=function(){return this.props.children?c.a.createElement(ke.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return c.a.createElement(ke.Provider,{value:t},this.props.children)},t.prototype.getTheme=function(e,t){if(R(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":f(e)))throw new x(8);return b({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(s.Component),function(){function e(){y(this,e),this.masterSheet=pe.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new x(2);return c.a.createElement(Ye,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new x(3)}}(),Object(s.createContext)()),We=Ve.Consumer,Ye=function(e){function t(n){y(this,t);var i=D(this,e.call(this,n));return i.getContext=Object(u.a)(i.getContext),i}return A(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new pe(t);throw new x(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,i=e.target;return c.a.createElement(Ve.Provider,{value:this.getContext(n,i)},t)},t}(s.Component),Ze={};var _e=function(e){function t(){y(this,t);var n=D(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return A(t,e),t.prototype.render=function(){return c.a.createElement(We,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:pe.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():c.a.createElement(He,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,i=t.defaultProps,r=(t.displayName,t.foldedComponentIds),o=t.styledComponentId,a=t.target,c=void 0;c=n.isStatic?this.generateAndInjectStyles(I,this.props):this.generateAndInjectStyles(Ne(this.props,e,i)||I,this.props);var d=this.props.as||this.attrs.as||a,p=xe(d),u={},h=b({},this.props,this.attrs),m=void 0;for(m in h)"forwardedComponent"!==m&&"as"!==m&&("forwardedRef"===m?u.ref=h[m]:"forwardedAs"===m?u.as=h[m]:p&&!Object(l.a)(m)||(u[m]=h[m]));return this.props.style&&this.attrs.style&&(u.style=b({},this.attrs.style,this.props.style)),u.className=Array.prototype.concat(r,o,c!==o?c:null,this.props.className,this.attrs.className).filter(Boolean).join(" "),Object(s.createElement)(d,u)},t.prototype.buildExecutionContext=function(e,t,n){var i=this,r=b({},t,{theme:e});return n.length?(this.attrs={},n.forEach((function(e){var t,n=e,o=!1,a=void 0,s=void 0;for(s in R(n)&&(n=n(r),o=!0),n)a=n[s],o||!R(a)||(t=a)&&t.prototype&&t.prototype.isReactComponent||N(a)||(a=a(r)),i.attrs[s]=a,r[s]=a})),r):r},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,i=n.attrs,r=n.componentStyle;n.warnTooManyClasses;return r.isStatic&&!i.length?r.generateAndInjectStyles(I,this.styleSheet):r.generateAndInjectStyles(this.buildExecutionContext(e,t,i),this.styleSheet)},t}(s.Component);function Je(e,t,n){var i=N(e),r=!xe(e),o=t.displayName,a=void 0===o?function(e){return xe(e)?"styled."+e:"Styled("+S(e)+")"}(e):o,s=t.componentId,d=void 0===s?function(e,t,n){var i="string"!=typeof t?"sc":Be(t),r=(Ze[i]||0)+1;Ze[i]=r;var o=i+"-"+e.generateName(i+r);return n?n+"-"+o:o}(Se,t.displayName,t.parentComponentId):s,p=t.ParentComponent,u=void 0===p?_e:p,l=t.attrs,m=void 0===l?T:l,f=t.displayName&&t.componentId?Be(t.displayName)+"-"+t.componentId:t.componentId||d,y=i&&e.attrs?Array.prototype.concat(e.attrs,m).filter(Boolean):m,g=new Se(i?e.componentStyle.rules.concat(n):n,y,f),A=void 0,D=function(e,t){return c.a.createElement(u,b({},e,{forwardedComponent:A,forwardedRef:t}))};return D.displayName=a,(A=c.a.forwardRef(D)).displayName=a,A.attrs=y,A.componentStyle=g,A.foldedComponentIds=i?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):T,A.styledComponentId=f,A.target=i?e.target:e,A.withComponent=function(e){var i=t.componentId,r=function(e,t){var n={};for(var i in e)t.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n}(t,["componentId"]),o=i&&i+"-"+(xe(e)?e:Be(S(e)));return Je(e,b({},r,{attrs:y,componentId:o,ParentComponent:u}),n)},Object.defineProperty(A,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=i?Object(h.a)(e.defaultProps,t):t}}),A.toString=function(){return"."+A.styledComponentId},r&&je(A,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),A}var ze=function(e){return function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:I;if(!Object(p.isValidElementType)(n))throw new x(1,String(n));var r=function(){return t(n,i,be.apply(void 0,arguments))};return r.withConfig=function(r){return e(t,n,b({},i,r))},r.attrs=function(r){return e(t,n,b({},i,{attrs:Array.prototype.concat(i.attrs,r).filter(Boolean)}))},r}(Je,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){ze[e]=ze(e)}));!function(){function e(t,n){y(this,e),this.rules=t,this.componentId=n,this.isStatic=Te(t,T),pe.master.hasId(n)||pe.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=H(ge(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();v&&(window.scCGSHMRCache={});t.b=ze}).call(this,n("8oxB"))},vRuI:function(e,t,n){"use strict";n.d(t,"a",(function(){return S})),n.d(t,"d",(function(){return N})),n.d(t,"e",(function(){return P})),n.d(t,"b",(function(){return v})),n.d(t,"c",(function(){return B}));var i=n("q1tI"),r=n.n(i),o=(n("V+eJ"),n("dZ+Y"),n("LK8F"),n("2Spj"),n("VRzm"),n("Btvt"),n("91GP"),n("DW2E"),n("f3/d"),n("8o2o"));function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var s=n("uRdJ"),c=n("9Hrx"),d=n("2mql"),p=n.n(d);function u(e,t){if(!e){var n=new Error("loadable: "+t);throw n.framesToPop=1,n.name="Invariant Violation",n}}var l=r.a.createContext();var h=function(e){return e};function m(e){var t=e.resolve,n=void 0===t?h:t,i=e.render,d=e.onLoad;function p(e,t){void 0===t&&(t={});var p=function(e){return"function"==typeof e?{requireAsync:e}:e}(e),h={};function m(e){return t.cacheKey?t.cacheKey(e):p.resolve?p.resolve(e):null}var f,y=function(e){function r(n){var i;return(i=e.call(this,n)||this).state={result:null,error:null,loading:!0,cacheKey:m(n)},i.promise=null,u(!n.__chunkExtractor||p.requireSync,"SSR requires `@loadable/babel-plugin`, please install it"),n.__chunkExtractor?(!1===t.ssr||(p.requireAsync(n).catch((function(){})),i.loadSync(),n.__chunkExtractor.addChunk(p.chunkName(n))),Object(s.a)(i)):(!1!==t.ssr&&p.isReady&&p.isReady(n)&&i.loadSync(),i)}Object(c.a)(r,e),r.getDerivedStateFromProps=function(e,t){var n=m(e);return a({},t,{cacheKey:n,loading:t.loading||t.cacheKey!==n})};var l=r.prototype;return l.componentDidMount=function(){this.mounted=!0,this.state.loading?this.loadAsync():this.state.error||this.triggerOnLoad()},l.componentDidUpdate=function(e,t){t.cacheKey!==this.state.cacheKey&&(this.promise=null,this.loadAsync())},l.componentWillUnmount=function(){this.mounted=!1},l.safeSetState=function(e,t){this.mounted&&this.setState(e,t)},l.triggerOnLoad=function(){var e=this;d&&setTimeout((function(){d(e.state.result,e.props)}))},l.loadSync=function(){if(this.state.loading)try{var e=p.requireSync(this.props),t=n(e,{Loadable:b});this.state.result=t,this.state.loading=!1}catch(i){this.state.error=i}},l.getCacheKey=function(){return m(this.props)||JSON.stringify(this.props)},l.getCache=function(){return h[this.getCacheKey()]},l.setCache=function(e){h[this.getCacheKey()]=e},l.loadAsync=function(){var e=this;if(!this.promise){var i=this.props,r=(i.__chunkExtractor,i.forwardedRef,Object(o.a)(i,["__chunkExtractor","forwardedRef"]));this.promise=p.requireAsync(r).then((function(i){var r=n(i,{Loadable:b});t.suspense&&e.setCache(r),e.safeSetState({result:n(i,{Loadable:b}),loading:!1},(function(){return e.triggerOnLoad()}))})).catch((function(t){e.safeSetState({error:t,loading:!1})}))}return this.promise},l.render=function(){var e=this.props,n=e.forwardedRef,r=e.fallback,s=(e.__chunkExtractor,Object(o.a)(e,["forwardedRef","fallback","__chunkExtractor"])),c=this.state,d=c.error,p=c.loading,u=c.result;if(t.suspense){var l=this.getCache();if(!l)throw this.loadAsync();return i({loading:!1,fallback:null,result:l,options:t,props:a({},s,{ref:n})})}if(d)throw d;var h=r||t.fallback||null;return p?h:i({loading:p,fallback:h,result:u,options:t,props:a({},s,{ref:n})})},r}(r.a.Component),g=(f=y,function(e){return r.a.createElement(l.Consumer,null,(function(t){return r.a.createElement(f,Object.assign({__chunkExtractor:t},e))}))}),b=r.a.forwardRef((function(e,t){return r.a.createElement(g,Object.assign({forwardedRef:t},e))}));return b.preload=function(e){p.requireAsync(e)},b.load=function(e){return p.requireAsync(e)},b}return{loadable:p,lazy:function(e,t){return p(e,a({},t,{suspense:!0}))}}}var f=m({resolve:function(e,t){var n=t.Loadable,i=e.__esModule?e.default:e.default||e;return p()(n,i,{preload:!0}),i},render:function(e){var t=e.result,n=e.props;return r.a.createElement(t,n)}}),y=f.loadable,g=f.lazy,b=m({onLoad:function(e,t){e&&t.forwardedRef&&("function"==typeof t.forwardedRef?t.forwardedRef(e):t.forwardedRef.current=e)},render:function(e){var t=e.result,n=e.loading,i=e.props;return!n&&i.children?i.children(t):null}}),A=b.loadable,D=b.lazy;var C=y;C.lib=A,g.lib=D;var T=C,I=n("qKvR"),R=function(){return Object(I.b)("div",null)},S=R,N=R,P=R,v=R,B=R;"undefined"!=typeof window&&(S=T((function(){return Promise.all([n.e(0),n.e(14)]).then(n.bind(null,"vUX0"))})),T((function(){return Promise.all([n.e(0),n.e(13)]).then(n.bind(null,"V7nF"))})),T((function(){return Promise.all([n.e(0),n.e(17)]).then(n.bind(null,"u3ew"))})),v=T((function(){return Promise.all([n.e(0),n.e(12)]).then(n.bind(null,"ZjDo"))})),B=T((function(){return Promise.all([n.e(0),n.e(15)]).then(n.bind(null,"c9tE"))})),N=T((function(){return Promise.all([n.e(0),n.e(11)]).then(n.bind(null,"odEr"))})),P=T((function(){return Promise.all([n.e(0),n.e(16)]).then(n.bind(null,"H+Y1"))})))},vf9c:function(e){e.exports=JSON.parse("[]")},vhPU:function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},w2a5:function(e,t,n){var i=n("aCFj"),r=n("ne8i"),o=n("d/Gc");e.exports=function(e){return function(t,n,a){var s,c=i(t),d=r(c.length),p=o(a,d);if(e&&n!=n){for(;d>p;)if((s=c[p++])!=s)return!0}else for(;d>p;p++)if((e||p in c)&&c[p]===n)return e||p||0;return!e&&-1}}},wmvG:function(e,t,n){"use strict";var i=n("hswa").f,r=n("Kuth"),o=n("3Lyj"),a=n("m0Pp"),s=n("9gX7"),c=n("SlkY"),d=n("Afnz"),p=n("1TsA"),u=n("elZq"),l=n("nh4g"),h=n("Z6vF").fastKey,m=n("s5qY"),f=l?"_s":"size",y=function(e,t){var n,i=h(t);if("F"!==i)return e._i[i];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,d){var p=e((function(e,i){s(e,p,t,"_i"),e._t=t,e._i=r(null),e._f=void 0,e._l=void 0,e[f]=0,null!=i&&c(i,n,e[d],e)}));return o(p.prototype,{clear:function(){for(var e=m(this,t),n=e._i,i=e._f;i;i=i.n)i.r=!0,i.p&&(i.p=i.p.n=void 0),delete n[i.i];e._f=e._l=void 0,e[f]=0},delete:function(e){var n=m(this,t),i=y(n,e);if(i){var r=i.n,o=i.p;delete n._i[i.i],i.r=!0,o&&(o.n=r),r&&(r.p=o),n._f==i&&(n._f=r),n._l==i&&(n._l=o),n[f]--}return!!i},forEach:function(e){m(this,t);for(var n,i=a(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(i(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!y(m(this,t),e)}}),l&&i(p.prototype,"size",{get:function(){return m(this,t)[f]}}),p},def:function(e,t,n){var i,r,o=y(e,t);return o?o.v=n:(e._l=o={i:r=h(t,!0),k:t,v:n,p:i=e._l,n:void 0,r:!1},e._f||(e._f=o),i&&(i.n=o),e[f]++,"F"!==r&&(e._i[r]=o)),e},getEntry:y,setStrong:function(e,t,n){d(e,t,(function(e,n){this._t=m(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?p(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,p(1))}),n?"entries":"values",!n,!0),u(t)}}},"xF/b":function(e,t,n){"use strict";var i=n("EWmC"),r=n("0/R4"),o=n("ne8i"),a=n("m0Pp"),s=n("K0xU")("isConcatSpreadable");e.exports=function e(t,n,c,d,p,u,l,h){for(var m,f,y=p,g=0,b=!!l&&a(l,h,3);g<d;){if(g in c){if(m=b?b(c[g],g,n):c[g],f=!1,r(m)&&(f=void 0!==(f=m[s])?!!f:i(m)),f&&u>0)y=e(t,n,m,o(m.length),y,u-1)-1;else{if(y>=9007199254740991)throw TypeError();t[y]=m}y++}g++}return y}},"xK/f":function(e,t,n){"use strict";n.d(t,"d",(function(){return c})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p})),n.d(t,"c",(function(){return u})),n.d(t,"g",(function(){return l})),n.d(t,"h",(function(){return h})),n.d(t,"e",(function(){return m})),n.d(t,"i",(function(){return f})),n.d(t,"f",(function(){return y})),n.d(t,"j",(function(){return g}));n("84bF");var i=n("vOnD"),r=n("VdAu"),o=(n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI"),n("qKvR"));var a=function(e){var t=e.children,n=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["children"]);return t?Object(o.b)("a",{href:n.href,target:"_blank",rel:"noopener"},t):null},s=n("SlEa"),c=Object(i.b)(r.b).withConfig({componentId:"sc-1yf6buu-0"})(["max-width:",";margin-top:20px;padding-right:50px;font-family:",";font-weight:600;scroll-margin-top:90px;"],s.i.content,s.d.heading),d=Object(i.b)(c).withConfig({componentId:"sc-1yf6buu-1"})(["margin-top:40px;font-family:",";font-weight:400;color:",";font-size:15px;line-height:19px;"],s.d.body,s.b.baliHai),p=Object(i.b)(c).withConfig({componentId:"sc-1yf6buu-2"})(["margin-top:20px;margin-bottom:40px;font-size:27.5px;line-height:40px;color:",";margin-top:0;&:not(:first-of-type){margin-top:60px;}@media screen and (min-width:","){font-size:35px;}"],s.b.businessBlue,s.a.medium),u=Object(i.b)(c).withConfig({componentId:"sc-1yf6buu-3"})(["font-family:",";font-weight:700;font-size:24px;color:",";line-height:34px;margin-bottom:15px;margin-top:40px;scroll-margin-top:90px;"],s.d.body,s.b.businessBlue),l=i.b.ul.withConfig({componentId:"sc-1yf6buu-4"})(["margin:0 24px 24px 24px;max-width:",";"],s.i.content),h=i.b.li.withConfig({componentId:"sc-1yf6buu-5"})(["font-size:18px;line-height:1.8;color:",";"],s.b.body),m=i.b.img.withConfig({componentId:"sc-1yf6buu-6"})(["width:100%;@media screen and (min-width:","){max-width:75%;}"],s.a.large),f=Object(i.b)(r.b).withConfig({componentId:"sc-1yf6buu-7"})(["font-family:",";font-weight:400;font-size:16px;color:",";line-height:28px;max-width:",";margin-bottom:20px;margin-top:10px;@media screen and (min-width:","){font-size:18px;}code{font-family:",";font-weight:500;font-size:15px;color:",";background-color:",";border-radius:10px;padding:5px 10px;white-space:nowrap;}"],s.d.body,s.b.body,s.i.content,s.a.small,s.d.monospace,s.b.body,s.b.concrete),y=Object(i.b)(a).withConfig({componentId:"sc-1yf6buu-8"})(["color:brown;"]),g=i.b.div.withConfig({componentId:"sc-1yf6buu-9"})([""])},xpql:function(e,t,n){e.exports=!n("nh4g")&&!n("eeVq")((function(){return 7!=Object.defineProperty(n("Iw71")("div"),"a",{get:function(){return 7}}).a}))},xtsi:function(e,t,n){n("VRzm"),n("Btvt");var i=n("LeKB"),r=n("emEt").publicLoader,o=r.getResourcesForPathname,a=r.getResourcesForPathnameSync,s=r.getResourceURLsForPathname,c=r.loadPage,d=r.loadPageSync;t.apiRunner=function(e,t,n,r){void 0===t&&(t={});var p=i.map((function(n){if(n.plugin[e]){t.getResourcesForPathnameSync=a,t.getResourcesForPathname=o,t.getResourceURLsForPathname=s,t.loadPage=c,t.loadPageSync=d;var i=n.plugin[e](t,n.options);return i&&r&&(t=r({args:t,result:i,plugin:n})),i}}));return(p=p.filter((function(e){return void 0!==e}))).length>0?p:n?[n]:[]},t.apiRunnerAsync=function(e,t,n){return i.reduce((function(n,i){return i.plugin[e]?n.then((function(){return i.plugin[e](t,i.options)})):n}),Promise.resolve())}},y3w9:function(e,t,n){var i=n("0/R4");e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},yAlh:function(e,t,n){"use strict";n("f3/d"),n("pIFo");e.exports=function(e,t,n,i,r,o,a,s){if(!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,i,r,o,a,s],p=0;(c=new Error(t.replace(/%s/g,(function(){return d[p++]})))).name="Invariant Violation"}throw c.framesToPop=1,c}}},yJwK:function(e,t,n){"use strict";n("f3/d"),n("pIFo");e.exports=function(e,t,n,i,r,o,a,s){if(!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,i,r,o,a,s],p=0;(c=new Error(t.replace(/%s/g,(function(){return d[p++]})))).name="Invariant Violation"}throw c.framesToPop=1,c}}},yLpj:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(i){"object"==typeof window&&(n=window)}e.exports=n},ylqs:function(e,t){var n=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+i).toString(36))}},yt8O:function(e,t,n){"use strict";var i=n("nGyu"),r=n("1TsA"),o=n("hPIQ"),a=n("aCFj");e.exports=n("Afnz")(Array,"Array",(function(e,t){this._t=a(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):r(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},zRwo:function(e,t,n){var i=n("6FMO");e.exports=function(e,t){return new(i(e))(t)}},za5s:function(e,t,n){"use strict";n.r(t),n.d(t,"get",(function(){return d})),n.d(t,"createParser",(function(){return p})),n.d(t,"createStyleFunction",(function(){return h})),n.d(t,"compose",(function(){return f})),n.d(t,"system",(function(){return m})),n.d(t,"margin",(function(){return G})),n.d(t,"padding",(function(){return j})),n.d(t,"space",(function(){return k})),n.d(t,"color",(function(){return A})),n.d(t,"layout",(function(){return y})),n.d(t,"typography",(function(){return C})),n.d(t,"flexbox",(function(){return I})),n.d(t,"border",(function(){return B})),n.d(t,"background",(function(){return L})),n.d(t,"position",(function(){return U})),n.d(t,"grid",(function(){return N})),n.d(t,"shadow",(function(){return H})),n.d(t,"boxShadow",(function(){return V})),n.d(t,"textShadow",(function(){return V})),n.d(t,"variant",(function(){return Y})),n.d(t,"buttonStyle",(function(){return Z})),n.d(t,"textStyle",(function(){return _})),n.d(t,"colorStyle",(function(){return J})),n.d(t,"borders",(function(){return x})),n.d(t,"width",(function(){return z})),n.d(t,"height",(function(){return $})),n.d(t,"minWidth",(function(){return Q})),n.d(t,"minHeight",(function(){return ee})),n.d(t,"maxWidth",(function(){return te})),n.d(t,"maxHeight",(function(){return ne})),n.d(t,"size",(function(){return ie})),n.d(t,"verticalAlign",(function(){return re})),n.d(t,"display",(function(){return oe})),n.d(t,"overflow",(function(){return ae})),n.d(t,"overflowX",(function(){return se})),n.d(t,"overflowY",(function(){return ce})),n.d(t,"opacity",(function(){return de})),n.d(t,"fontSize",(function(){return pe})),n.d(t,"fontFamily",(function(){return ue})),n.d(t,"fontWeight",(function(){return le})),n.d(t,"lineHeight",(function(){return he})),n.d(t,"textAlign",(function(){return me})),n.d(t,"fontStyle",(function(){return fe})),n.d(t,"letterSpacing",(function(){return ye})),n.d(t,"alignItems",(function(){return ge})),n.d(t,"alignContent",(function(){return be})),n.d(t,"justifyItems",(function(){return Ae})),n.d(t,"justifyContent",(function(){return De})),n.d(t,"flexWrap",(function(){return Ce})),n.d(t,"flexDirection",(function(){return Te})),n.d(t,"flex",(function(){return Ie})),n.d(t,"flexGrow",(function(){return Re})),n.d(t,"flexShrink",(function(){return Se})),n.d(t,"flexBasis",(function(){return Ne})),n.d(t,"justifySelf",(function(){return Pe})),n.d(t,"alignSelf",(function(){return ve})),n.d(t,"order",(function(){return Be})),n.d(t,"gridGap",(function(){return xe})),n.d(t,"gridColumnGap",(function(){return we})),n.d(t,"gridRowGap",(function(){return Le})),n.d(t,"gridColumn",(function(){return Oe})),n.d(t,"gridRow",(function(){return Me})),n.d(t,"gridAutoFlow",(function(){return Ue})),n.d(t,"gridAutoColumns",(function(){return Ee})),n.d(t,"gridAutoRows",(function(){return Fe})),n.d(t,"gridTemplateColumns",(function(){return Xe})),n.d(t,"gridTemplateRows",(function(){return Ke})),n.d(t,"gridTemplateAreas",(function(){return qe})),n.d(t,"gridArea",(function(){return Ge})),n.d(t,"borderWidth",(function(){return je})),n.d(t,"borderStyle",(function(){return ke})),n.d(t,"borderColor",(function(){return He})),n.d(t,"borderTop",(function(){return Ve})),n.d(t,"borderRight",(function(){return We})),n.d(t,"borderBottom",(function(){return Ye})),n.d(t,"borderLeft",(function(){return Ze})),n.d(t,"borderRadius",(function(){return _e})),n.d(t,"backgroundImage",(function(){return Je})),n.d(t,"backgroundSize",(function(){return ze})),n.d(t,"backgroundPosition",(function(){return $e})),n.d(t,"backgroundRepeat",(function(){return Qe})),n.d(t,"zIndex",(function(){return et})),n.d(t,"top",(function(){return tt})),n.d(t,"right",(function(){return nt})),n.d(t,"bottom",(function(){return it})),n.d(t,"left",(function(){return rt})),n.d(t,"style",(function(){return ot}));n("0l/t"),n("LK8F"),n("KKXr"),n("bWfx"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("Vd3H"),n("8+KV");var i=n("MgzW"),r=n.n(i),o=function(e,t){var n=r()({},e,t);for(var i in e){var o;e[i]&&"object"==typeof t[i]&&r()(n,((o={})[i]=r()(e[i],t[i]),o))}return n},a={breakpoints:[40,52,64].map((function(e){return e+"em"}))},s=function(e){return"@media screen and (min-width: "+e+")"},c=function(e,t){return d(t,e,e)},d=function(e,t,n,i,r){for(t=t&&t.split?t.split("."):[t],i=0;i<t.length;i++)e=e?e[t[i]]:r;return e===r?n:e},p=function e(t){var n={},i=function(e){var i,c,p={},h=!1,m=e.theme&&e.theme.disableStyledSystemCache;for(var f in e)if(t[f]){var y=t[f],g=e[f],b=d(e.theme,y.scale,y.defaults);if("object"!=typeof g)r()(p,y(g,b,e));else{if(n.breakpoints=!m&&n.breakpoints||d(e.theme,"breakpoints",a.breakpoints),Array.isArray(g)){n.media=!m&&n.media||[null].concat(n.breakpoints.map(s)),p=o(p,u(n.media,y,b,g,e));continue}null!==g&&(p=o(p,l(n.breakpoints,y,b,g,e)),h=!0)}}return h&&(i=p,c={},Object.keys(i).sort((function(e,t){return e.localeCompare(t,void 0,{numeric:!0,sensitivity:"base"})})).forEach((function(e){c[e]=i[e]})),p=c),p};i.config=t,i.propNames=Object.keys(t),i.cache=n;var c=Object.keys(t).filter((function(e){return"config"!==e}));return c.length>1&&c.forEach((function(n){var r;i[n]=e(((r={})[n]=t[n],r))})),i},u=function(e,t,n,i,o){var a={};return i.slice(0,e.length).forEach((function(i,s){var c,d=e[s],p=t(i,n,o);d?r()(a,((c={})[d]=r()({},a[d],p),c)):r()(a,p)})),a},l=function(e,t,n,i,o){var a={};for(var c in i){var d=e[c],p=t(i[c],n,o);if(d){var u,l=s(d);r()(a,((u={})[l]=r()({},a[l],p),u))}else r()(a,p)}return a},h=function(e){var t=e.properties,n=e.property,i=e.scale,r=e.transform,o=void 0===r?c:r,a=e.defaultScale;t=t||[n];var s=function(e,n,i){var r={},a=o(e,n,i);if(null!==a)return t.forEach((function(e){r[e]=a})),r};return s.scale=i,s.defaults=a,s},m=function(e){void 0===e&&(e={});var t={};return Object.keys(e).forEach((function(n){var i=e[n];t[n]=!0!==i?"function"!=typeof i?h(i):i:h({property:n,scale:n})})),p(t)},f=function(){for(var e={},t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];n.forEach((function(t){t&&t.config&&r()(e,t.config)}));var o=p(e);return o},y=m({width:{property:"width",scale:"sizes",transform:function(e,t){return d(t,e,!function(e){return"number"==typeof e&&!isNaN(e)}(e)||e>1?e:100*e+"%")}},height:{property:"height",scale:"sizes"},minWidth:{property:"minWidth",scale:"sizes"},minHeight:{property:"minHeight",scale:"sizes"},maxWidth:{property:"maxWidth",scale:"sizes"},maxHeight:{property:"maxHeight",scale:"sizes"},size:{properties:["width","height"],scale:"sizes"},overflow:!0,overflowX:!0,overflowY:!0,display:!0,verticalAlign:!0}),g=y,b={color:{property:"color",scale:"colors"},backgroundColor:{property:"backgroundColor",scale:"colors"},opacity:!0};b.bg=b.backgroundColor;var A=m(b),D=A,C=m({fontFamily:{property:"fontFamily",scale:"fonts"},fontSize:{property:"fontSize",scale:"fontSizes",defaultScale:[12,14,16,20,24,32,48,64,72]},fontWeight:{property:"fontWeight",scale:"fontWeights"},lineHeight:{property:"lineHeight",scale:"lineHeights"},letterSpacing:{property:"letterSpacing",scale:"letterSpacings"},textAlign:!0,fontStyle:!0}),T=C,I=m({alignItems:!0,alignContent:!0,justifyItems:!0,justifyContent:!0,flexWrap:!0,flexDirection:!0,flex:!0,flexGrow:!0,flexShrink:!0,flexBasis:!0,justifySelf:!0,alignSelf:!0,order:!0}),R=I,S={space:[0,4,8,16,32,64,128,256,512]},N=m({gridGap:{property:"gridGap",scale:"space",defaultScale:S.space},gridColumnGap:{property:"gridColumnGap",scale:"space",defaultScale:S.space},gridRowGap:{property:"gridRowGap",scale:"space",defaultScale:S.space},gridColumn:!0,gridRow:!0,gridAutoFlow:!0,gridAutoColumns:!0,gridAutoRows:!0,gridTemplateColumns:!0,gridTemplateRows:!0,gridTemplateAreas:!0,gridArea:!0}),P=N,v={border:{property:"border",scale:"borders"},borderWidth:{property:"borderWidth",scale:"borderWidths"},borderStyle:{property:"borderStyle",scale:"borderStyles"},borderColor:{property:"borderColor",scale:"colors"},borderRadius:{property:"borderRadius",scale:"radii"},borderTop:{property:"borderTop",scale:"borders"},borderTopLeftRadius:{property:"borderTopLeftRadius",scale:"radii"},borderTopRightRadius:{property:"borderTopRightRadius",scale:"radii"},borderRight:{property:"borderRight",scale:"borders"},borderBottom:{property:"borderBottom",scale:"borders"},borderBottomLeftRadius:{property:"borderBottomLeftRadius",scale:"radii"},borderBottomRightRadius:{property:"borderBottomRightRadius",scale:"radii"},borderLeft:{property:"borderLeft",scale:"borders"},borderX:{properties:["borderLeft","borderRight"],scale:"borders"},borderY:{properties:["borderTop","borderBottom"],scale:"borders"},borderTopWidth:{property:"borderTopWidth",scale:"borderWidths"},borderTopColor:{property:"borderTopColor",scale:"colors"},borderTopStyle:{property:"borderTopStyle",scale:"borderStyles"}};v.borderTopLeftRadius={property:"borderTopLeftRadius",scale:"radii"},v.borderTopRightRadius={property:"borderTopRightRadius",scale:"radii"},v.borderBottomWidth={property:"borderBottomWidth",scale:"borderWidths"},v.borderBottomColor={property:"borderBottomColor",scale:"colors"},v.borderBottomStyle={property:"borderBottomStyle",scale:"borderStyles"},v.borderBottomLeftRadius={property:"borderBottomLeftRadius",scale:"radii"},v.borderBottomRightRadius={property:"borderBottomRightRadius",scale:"radii"},v.borderLeftWidth={property:"borderLeftWidth",scale:"borderWidths"},v.borderLeftColor={property:"borderLeftColor",scale:"colors"},v.borderLeftStyle={property:"borderLeftStyle",scale:"borderStyles"},v.borderRightWidth={property:"borderRightWidth",scale:"borderWidths"},v.borderRightColor={property:"borderRightColor",scale:"colors"},v.borderRightStyle={property:"borderRightStyle",scale:"borderStyles"};var B=m(v),x=B,w={background:!0,backgroundImage:!0,backgroundSize:!0,backgroundPosition:!0,backgroundRepeat:!0};w.bgImage=w.backgroundImage,w.bgSize=w.backgroundSize,w.bgPosition=w.backgroundPosition,w.bgRepeat=w.backgroundRepeat;var L=m(w),O=L,M={space:[0,4,8,16,32,64,128,256,512]},U=m({position:!0,zIndex:{property:"zIndex",scale:"zIndices"},top:{property:"top",scale:"space",defaultScale:M.space},right:{property:"right",scale:"space",defaultScale:M.space},bottom:{property:"bottom",scale:"space",defaultScale:M.space},left:{property:"left",scale:"space",defaultScale:M.space}}),E=U,F={space:[0,4,8,16,32,64,128,256,512]},X=function(e){return"number"==typeof e&&!isNaN(e)},K=function(e,t){if(!X(e))return d(t,e,e);var n=e<0,i=Math.abs(e),r=d(t,i,i);return X(r)?r*(n?-1:1):n?"-"+r:r},q={};q.margin={margin:{property:"margin",scale:"space",transform:K,defaultScale:F.space},marginTop:{property:"marginTop",scale:"space",transform:K,defaultScale:F.space},marginRight:{property:"marginRight",scale:"space",transform:K,defaultScale:F.space},marginBottom:{property:"marginBottom",scale:"space",transform:K,defaultScale:F.space},marginLeft:{property:"marginLeft",scale:"space",transform:K,defaultScale:F.space},marginX:{properties:["marginLeft","marginRight"],scale:"space",transform:K,defaultScale:F.space},marginY:{properties:["marginTop","marginBottom"],scale:"space",transform:K,defaultScale:F.space}},q.margin.m=q.margin.margin,q.margin.mt=q.margin.marginTop,q.margin.mr=q.margin.marginRight,q.margin.mb=q.margin.marginBottom,q.margin.ml=q.margin.marginLeft,q.margin.mx=q.margin.marginX,q.margin.my=q.margin.marginY,q.padding={padding:{property:"padding",scale:"space",defaultScale:F.space},paddingTop:{property:"paddingTop",scale:"space",defaultScale:F.space},paddingRight:{property:"paddingRight",scale:"space",defaultScale:F.space},paddingBottom:{property:"paddingBottom",scale:"space",defaultScale:F.space},paddingLeft:{property:"paddingLeft",scale:"space",defaultScale:F.space},paddingX:{properties:["paddingLeft","paddingRight"],scale:"space",defaultScale:F.space},paddingY:{properties:["paddingTop","paddingBottom"],scale:"space",defaultScale:F.space}},q.padding.p=q.padding.padding,q.padding.pt=q.padding.paddingTop,q.padding.pr=q.padding.paddingRight,q.padding.pb=q.padding.paddingBottom,q.padding.pl=q.padding.paddingLeft,q.padding.px=q.padding.paddingX,q.padding.py=q.padding.paddingY;var G=m(q.margin),j=m(q.padding),k=f(G,j),H=m({boxShadow:{property:"boxShadow",scale:"shadows"},textShadow:{property:"textShadow",scale:"shadows"}}),V=H,W=n("OJSm"),Y=function(e){var t,n,i=e.scale,r=e.prop,o=void 0===r?"variant":r,a=e.variants,s=void 0===a?{}:a,c=e.key;(n=Object.keys(s).length?function(e,t,n){return Object(W.default)(d(t,e,null))(n.theme)}:function(e,t){return d(t,e,null)}).scale=i||c,n.defaults=s;var u=((t={})[o]=n,t);return p(u)},Z=Y({key:"buttons"}),_=Y({key:"textStyles",prop:"textStyle"}),J=Y({key:"colorStyles",prop:"colors"}),z=g.width,$=g.height,Q=g.minWidth,ee=g.minHeight,te=g.maxWidth,ne=g.maxHeight,ie=g.size,re=g.verticalAlign,oe=g.display,ae=g.overflow,se=g.overflowX,ce=g.overflowY,de=D.opacity,pe=T.fontSize,ue=T.fontFamily,le=T.fontWeight,he=T.lineHeight,me=T.textAlign,fe=T.fontStyle,ye=T.letterSpacing,ge=R.alignItems,be=R.alignContent,Ae=R.justifyItems,De=R.justifyContent,Ce=R.flexWrap,Te=R.flexDirection,Ie=R.flex,Re=R.flexGrow,Se=R.flexShrink,Ne=R.flexBasis,Pe=R.justifySelf,ve=R.alignSelf,Be=R.order,xe=P.gridGap,we=P.gridColumnGap,Le=P.gridRowGap,Oe=P.gridColumn,Me=P.gridRow,Ue=P.gridAutoFlow,Ee=P.gridAutoColumns,Fe=P.gridAutoRows,Xe=P.gridTemplateColumns,Ke=P.gridTemplateRows,qe=P.gridTemplateAreas,Ge=P.gridArea,je=x.borderWidth,ke=x.borderStyle,He=x.borderColor,Ve=x.borderTop,We=x.borderRight,Ye=x.borderBottom,Ze=x.borderLeft,_e=x.borderRadius,Je=O.backgroundImage,ze=O.backgroundSize,$e=O.backgroundPosition,Qe=O.backgroundRepeat,et=E.zIndex,tt=E.top,nt=E.right,it=E.bottom,rt=E.left,ot=function(e){var t=e.prop,n=e.cssProperty,i=e.alias,r=e.key,o=e.transformValue,a=e.scale,s=e.properties,c={};return c[t]=h({properties:s,property:n||t,scale:r,defaultScale:a,transform:o}),i&&(c[i]=c[t]),p(c)}},zhAb:function(e,t,n){var i=n("aagx"),r=n("aCFj"),o=n("w2a5")(!1),a=n("YTvA")("IE_PROTO");e.exports=function(e,t){var n,s=r(e),c=0,d=[];for(n in s)n!=a&&i(s,n)&&d.push(n);for(;t.length>c;)i(s,n=t[c++])&&(~o(d,n)||d.push(n));return d}}},[["UxWs",9,1,8,3]]]);
//# sourceMappingURL=app-4aa76365dfc5a1c1a486.js.map